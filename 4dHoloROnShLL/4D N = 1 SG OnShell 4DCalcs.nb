(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1734987,      37599]
NotebookOptionsPosition[   1707029,      37117]
NotebookOutlinePosition[   1707587,      37138]
CellTagsIndexPosition[   1707544,      37135]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["4D N = 1 SG OnShell 4DCalcs.nb", "Title",
 CellChangeTimes->{{3.431643447359375*^9, 3.43164348528125*^9}, {
   3.4332803471875*^9, 3.4332803938125*^9}, {3.439841647921875*^9, 
   3.439841676265625*^9}, {3.4399946617855*^9, 3.43999466687925*^9}, {
   3.44088192175*^9, 3.440881923578125*^9}, {3.4423479416875*^9, 
   3.442347948953125*^9}, {3.442980454609375*^9, 3.442980483234375*^9}, {
   3.443704482140625*^9, 3.443704510671875*^9}, {3.443704683796875*^9, 
   3.443704691203125*^9}, {3.44372638084375*^9, 3.443726451640625*^9}, {
   3.45355300203125*^9, 3.453553002890625*^9}, {3.454246287921875*^9, 
   3.454246303546875*^9}, {3.454246379453125*^9, 3.4542464184375*^9}, {
   3.454246473484375*^9, 3.454246483109375*^9}, {3.4544147554375*^9, 
   3.454414815859375*^9}, {3.454852671*^9, 3.4548527046875*^9}, {
   3.454856728203125*^9, 3.45485673075*^9}, {3.454926202984375*^9, 
   3.454926295546875*^9}, {3.455015384*^9, 3.455015392609375*^9}, {
   3.455015444671875*^9, 3.455015446890625*^9}, {3.455015517421875*^9, 
   3.455015519890625*^9}, {3.4550155711875*^9, 3.455015606859375*^9}, {
   3.455016320453125*^9, 3.45501632865625*^9}, {3.455042848390625*^9, 
   3.455042857671875*^9}, {3.455043636234375*^9, 3.4550436771875*^9}, {
   3.511555277628312*^9, 3.5115553207117767`*^9}, {3.511625771375633*^9, 
   3.5116258752865763`*^9}, {3.5116411679872684`*^9, 3.511641221284317*^9}, {
   3.5199454008058896`*^9, 3.5199454666306543`*^9}, {3.5199455739987955`*^9, 
   3.519945622294558*^9}, {3.5206458956356697`*^9, 3.520645943704419*^9}, {
   3.523718893836775*^9, 3.523718923873493*^9}, {3.536715674278531*^9, 
   3.5367157073544226`*^9}, {3.53853389765368*^9, 3.538533899967812*^9}, {
   3.538942345864266*^9, 3.538942357964958*^9}, {3.5389474299050565`*^9, 
   3.538947485150216*^9}, {3.5390845827297893`*^9, 3.5390846106083837`*^9}, {
   3.53908510341057*^9, 3.5390851199535165`*^9}, {3.539086064745556*^9, 
   3.5390861577368746`*^9}, {3.5451459061807747`*^9, 3.545145907619857*^9}, {
   3.54514596135293*^9, 3.5451460262956448`*^9}, {3.548677365614721*^9, 
   3.548677420252846*^9}, {3.5486904482318554`*^9, 3.5486904831498528`*^9}, {
   3.5507964280028415`*^9, 3.550796434750227*^9}, {3.5516981864105062`*^9, 
   3.5516981873125577`*^9}, {3.5517063670611444`*^9, 3.551706375990655*^9}, {
   3.5517143798937216`*^9, 3.5517143832039113`*^9}, {3.5517286202182903`*^9, 
   3.5517286597495513`*^9}, {3.5517928905442033`*^9, 3.551792917464743*^9}, {
   3.5521354453831377`*^9, 3.5521354853424234`*^9}, {3.552135534200218*^9, 
   3.552135558024581*^9}, {3.5521356059203205`*^9, 3.552135681027616*^9}, {
   3.5521357231810274`*^9, 3.5521357548318377`*^9}, {3.55231422706569*^9, 
   3.5523142637937903`*^9}, {3.552314318528921*^9, 3.552314318928944*^9}, {
   3.552314384905718*^9, 3.552314430815344*^9}, {3.552314502398438*^9, 
   3.5523146413143835`*^9}, {3.552473196132519*^9, 3.5524732208799343`*^9}, 
   3.5528371122703466`*^9, 3.5528444571634464`*^9, {3.5528449407701073`*^9, 
   3.5528450003105125`*^9}, {3.552866910465884*^9, 3.5528670764143763`*^9}, {
   3.5528755049588575`*^9, 3.552875669883291*^9}, {3.5528757974815893`*^9, 
   3.5528759485802317`*^9}, {3.552876032727044*^9, 3.5528760646078677`*^9}, 
   3.5528770280839753`*^9, {3.552905728992181*^9, 3.5529057870398817`*^9}, {
   3.552924313800542*^9, 3.552924357451039*^9}, {3.5529244139042673`*^9, 
   3.5529245023153243`*^9}, {3.5529245516931486`*^9, 3.552924613397678*^9}, {
   3.552928164005761*^9, 3.552928186311037*^9}, {3.5529298153452125`*^9, 
   3.5529298409716783`*^9}, {3.5532932040039682`*^9, 
   3.5532932496185775`*^9}, {3.553293282659467*^9, 3.553293292302019*^9}, {
   3.553293383011207*^9, 3.553293411333827*^9}, {3.5532981370511494`*^9, 
   3.553298408108653*^9}, {3.553298441734576*^9, 3.5532987180763826`*^9}, {
   3.5532987757606816`*^9, 3.5532988306618223`*^9}, {3.5533029743948298`*^9, 
   3.5533030195604134`*^9}, {3.553306886924614*^9, 3.5533068932679768`*^9}, {
   3.553311679995762*^9, 3.553311730478649*^9}, {3.553311805864961*^9, 
   3.5533118710006866`*^9}, {3.5533120465167255`*^9, 3.553312046787741*^9}, {
   3.5533122428069525`*^9, 3.5533122428069525`*^9}, {3.553312319318329*^9, 
   3.553312332850103*^9}, {3.5533123656929817`*^9, 3.5533123938585925`*^9}, 
   3.5533125753399725`*^9, {3.5533162583976316`*^9, 3.5533162749975805`*^9}, 
   3.5533163117066803`*^9, {3.5533163518819785`*^9, 3.5533164029468994`*^9}, {
   3.553357870429034*^9, 3.55335793120451*^9}, {3.553360423158042*^9, 
   3.553360477275137*^9}, {3.5533605162343655`*^9, 3.553360605248457*^9}, {
   3.55336064149253*^9, 3.5533607117395477`*^9}, {3.553360769712864*^9, 
   3.553360790017025*^9}, {3.553360827712181*^9, 3.5533608685515165`*^9}, {
   3.5533609116069794`*^9, 3.553360984719161*^9}, {3.553361035631073*^9, 
   3.5533610708610888`*^9}, {3.5533611506446514`*^9, 3.553361152577762*^9}, {
   3.553361571282711*^9, 3.553361617443351*^9}, {3.553362021762477*^9, 
   3.5533621970635033`*^9}, {3.55336225609488*^9, 3.553362258462015*^9}, {
   3.553362402136233*^9, 3.5533624518330755`*^9}, {3.553362520950029*^9, 
   3.5533625853667135`*^9}, {3.5533635314808273`*^9, 
   3.5533635853299074`*^9}, {3.553363685328627*^9, 3.553363698002352*^9}, {
   3.553363909535451*^9, 3.5533639144157305`*^9}, 3.553364219200163*^9, 
   3.5533644938708735`*^9, {3.553364575184524*^9, 3.553364599654924*^9}, {
   3.55336466183048*^9, 3.5533646655966954`*^9}, {3.553365137488686*^9, 
   3.553365145141124*^9}, {3.5533656688530784`*^9, 3.5533657248882837`*^9}, 
   3.553366821643014*^9, {3.5533671012070045`*^9, 3.5533671132246914`*^9}, {
   3.553367256017859*^9, 3.5533672954111123`*^9}, {3.5533673936717324`*^9, 
   3.553367442797542*^9}, {3.553393155762641*^9, 3.5533933527619085`*^9}, {
   3.5533934025587573`*^9, 3.55339343250747*^9}, {3.553393466195397*^9, 
   3.5533934799451838`*^9}, {3.5533936057913814`*^9, 3.553393621924304*^9}, {
   3.5533936651637774`*^9, 3.553393696448567*^9}, {3.5533938357385335`*^9, 
   3.5533938415228643`*^9}, {3.55339396837212*^9, 3.553393970315231*^9}, {
   3.553394007223342*^9, 3.5533940655636787`*^9}, {3.5533948267242146`*^9, 
   3.553394871172757*^9}, 3.5533949827821407`*^9, {3.553395879210414*^9, 
   3.55339590415384*^9}, {3.5533960192464232`*^9, 3.553396052167306*^9}, {
   3.5534453110074387`*^9, 3.5534453210730143`*^9}, {3.5543978769816384`*^9, 
   3.5543979153068304`*^9}, {3.5543979522839456`*^9, 3.554398051165597*^9}, {
   3.559413579039064*^9, 3.559414031602949*^9}, {3.5594140643608227`*^9, 
   3.559414824354292*^9}, {3.5594148673047485`*^9, 3.5594148697598886`*^9}, 
   3.559434854871258*^9, {3.5594361459001007`*^9, 3.5594361488202677`*^9}, {
   3.5594362074236193`*^9, 3.5594362074236193`*^9}, {3.5594413332417994`*^9, 
   3.559441339224142*^9}, {3.5594800125024767`*^9, 3.5594800206869445`*^9}, 
   3.55949611087125*^9, {3.5594961446901846`*^9, 3.5594963728392344`*^9}, {
   3.5594967272045026`*^9, 3.559496732893828*^9}, {3.559496827283227*^9, 
   3.559496972989561*^9}, {3.559498343667959*^9, 3.5594984776456223`*^9}, {
   3.5594985619584446`*^9, 3.5594986885086827`*^9}, {3.559504207814369*^9, 
   3.5595043347686305`*^9}, {3.5610849081423254`*^9, 3.561084919991003*^9}, {
   3.674997609869558*^9, 3.6749976403446026`*^9}, {3.7095691177887754`*^9, 
   3.7095692232638083`*^9}, {3.709569416628868*^9, 3.709569447700645*^9}, {
   3.709570025775709*^9, 3.7095700822929416`*^9}, {3.7095701212661705`*^9, 
   3.7095701302756863`*^9}, {3.7095701635905914`*^9, 
   3.7095701953544083`*^9}, {3.709570238234861*^9, 3.7095703996370926`*^9}, {
   3.7095705169488025`*^9, 3.709570536260907*^9}, {3.709570570671875*^9, 
   3.7095707000022726`*^9}, {3.7095707414556437`*^9, 3.709570911927394*^9}, {
   3.7095709420471168`*^9, 3.7095709556628957`*^9}, {3.709571091599671*^9, 
   3.7095711396634197`*^9}, {3.7095711775595875`*^9, 3.709571198140764*^9}, {
   3.709573470067711*^9, 3.7095735804760265`*^9}, {3.70957367197526*^9, 
   3.709573673761362*^9}, {3.709575309022894*^9, 3.7095753967389107`*^9}, {
   3.7108085535310116`*^9, 3.710808698160284*^9}, {3.7117169877149534`*^9, 
   3.71171700584299*^9}, {3.711843921222666*^9, 3.711843950188323*^9}, {
   3.7120954091535835`*^9, 3.712095410524662*^9}, {3.737153557144597*^9, 
   3.7371535573632975`*^9}, {3.737153660538913*^9, 3.737153677384055*^9}, {
   3.737289276440363*^9, 3.7372892764413633`*^9}, {3.7379791370084977`*^9, 
   3.7379791561145906`*^9}, {3.7379792255395613`*^9, 3.737979267044935*^9}, {
   3.738580160531347*^9, 3.7385801752121863`*^9}, {3.7422187903728733`*^9, 
   3.742218794232212*^9}, 3.7424478775638*^9, {3.7608112578164744`*^9, 
   3.760811258084696*^9}, {3.760988703245017*^9, 3.760988706933181*^9}, {
   3.7614146784895678`*^9, 3.7614146791297045`*^9}, {3.7632947323122077`*^9, 
   3.763294793464371*^9}, {3.7633195642488112`*^9, 3.763319584088785*^9}, 
   3.7634064812125816`*^9, {3.7634165190820417`*^9, 3.763416521877927*^9}, {
   3.7634172075866423`*^9, 3.7634172087479963`*^9}, {3.76377720822297*^9, 
   3.7637772200156517`*^9}, {3.7637864506887827`*^9, 3.763786454870578*^9}, {
   3.7638189617554197`*^9, 3.763818977171582*^9}, {3.76385212603518*^9, 
   3.7638521286075277`*^9}, {3.7638526212073793`*^9, 
   3.7638526284032373`*^9}, {3.7661637010166616`*^9, 
   3.7661637031759605`*^9}},ExpressionUUID->"dfab12f3-523a-4891-ab6d-\
6353bcfa0aa5"],

Cell[CellGroupData[{

Cell["Setting Rep and Importing Adinkra package", "Section",
 CellChangeTimes->{{3.7108088373262444`*^9, 3.7108088416734924`*^9}, {
  3.742447721149543*^9, 3.7424477566373158`*^9}, {3.7607231858846717`*^9, 
  3.760723188894571*^9}},ExpressionUUID->"8ce62cfa-2467-4484-bfab-\
5a2bb7149ea5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$RecursionLimit", "=", "Infinity"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"65e9b759-d921-4a12-9e52-b3e8b17f8777"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.7614150768524*^9, 3.761501541481084*^9, 
  3.7619984282788854`*^9, 3.7619988900347996`*^9, 3.7620206178321247`*^9, 
  3.762950249202039*^9, 3.762950360279117*^9, 3.762950443037956*^9, 
  3.7629505893543577`*^9, 3.7632946686490335`*^9, 3.7633163892160378`*^9, 
  3.7633170601280994`*^9, 3.763320372863473*^9, 3.7633996495930886`*^9, 
  3.763406491282528*^9, 3.76341655062006*^9, 3.763416705665225*^9, 
  3.763417265600178*^9, 3.76376752044973*^9, 3.763779003178721*^9, 
  3.763780518419314*^9, 3.7638176485851536`*^9, 3.7638503515847178`*^9, 
  3.7638519301397676`*^9, 3.763852116233828*^9, 3.763852914026306*^9, 
  3.764951441673053*^9, 3.765636014231409*^9, 3.7657286710001183`*^9, 
  3.7658406221855984`*^9, 3.768932873467645*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"de2095eb-5677-49d5-9f7c-d3af7f98d09f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rep", " ", "=", " ", "SGOnShell"}], ";"}]], "Input",
 CellChangeTimes->{{3.6749934458329735`*^9, 3.6749934552906713`*^9}, {
   3.6749935512237806`*^9, 3.6749935589505424`*^9}, {3.6749938285658455`*^9, 
   3.674993829104095*^9}, {3.674994097653822*^9, 3.674994100542435*^9}, 
   3.7108087172403755`*^9, {3.7108087539744763`*^9, 3.710808771379472*^9}, {
   3.7108100382219315`*^9, 3.710810046522406*^9}, {3.710872292511095*^9, 
   3.710872295614272*^9}, {3.710872341570901*^9, 3.7108723499323792`*^9}, {
   3.7113851081406517`*^9, 3.711385116342121*^9}, 3.7117170155335445`*^9, {
   3.7118439658332176`*^9, 3.7118439659442244`*^9}, 3.7120954248874836`*^9, {
   3.737153700401895*^9, 3.737153701464458*^9}, {3.737979211685769*^9, 
   3.737979212556819*^9}, {3.7379793011768875`*^9, 3.7379793023309536`*^9}, {
   3.7385801983905125`*^9, 3.7385802005056334`*^9}, {3.742218797918304*^9, 
   3.7422187989953537`*^9}, {3.76081126125266*^9, 3.760811261972982*^9}, {
   3.7608113426210012`*^9, 3.7608113538356404`*^9}, {3.7614146970898876`*^9, 
   3.7614146987602863`*^9}, {3.763416539802899*^9, 3.7634165413225183`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"1b130993-d415-41ec-8260-109b938b0e03"],

Cell[BoxData[
 RowBox[{"<<", "Adinkra`"}]], "Input",
 CellChangeTimes->{{3.742447734672681*^9, 3.742447736272915*^9}, {
  3.760723191514927*^9, 3.7607231919216137`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"042a2f57-aed7-4239-853e-081c663f644e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BuildDate", "[", "Adinkra", "]"}]], "Input",
 CellChangeTimes->{{3.7607232186956367`*^9, 3.760723223385909*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ee9a22d7-408f-43e3-b2dc-2ed014de5ea4"],

Cell[BoxData["190403"], "Output",
 CellChangeTimes->{3.761415076952444*^9, 3.761501541684161*^9, 
  3.761998428447917*^9, 3.7619988901447415`*^9, 3.7620206180450535`*^9, 
  3.762950249493726*^9, 3.762950360444063*^9, 3.7629504432779703`*^9, 
  3.762950589528215*^9, 3.763294668834374*^9, 3.7633163894295154`*^9, 
  3.763317060324619*^9, 3.7633203730894084`*^9, 3.763399649697855*^9, 
  3.7634064914661093`*^9, 3.763416550858036*^9, 3.7634167058998613`*^9, 
  3.76341726574219*^9, 3.763767520688381*^9, 3.7637790035475693`*^9, 
  3.763780518775902*^9, 3.763817648805708*^9, 3.763850351877614*^9, 
  3.7638519304559*^9, 3.763852116529134*^9, 3.763852914271983*^9, 
  3.764951441815711*^9, 3.765636014325159*^9, 3.7657286711257815`*^9, 
  3.765840622529623*^9, 3.7689328736082797`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"8c4260af-601b-4742-8b99-a8d955215562"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "fields: hfield[\[Mu],\[Nu]], \[Psi][\[Mu]][a], all free indices covariant   \
    \nAdinkraReduce and TemporalGauge: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", 
     RowBox[{"0", "\[Mu]"}]], "=", 
    RowBox[{
     SubscriptBox["\[Psi]", 
      RowBox[{"0", "a"}]], "=", "0"}]}], TraditionalForm]],ExpressionUUID->
  "f6abaf51-78f4-45ef-89e3-85b145a455f5"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPhi]", "i"], TraditionalForm]],ExpressionUUID->
  "526867b7-5a5a-4882-9bda-a84eaa839b93"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["h", "."], 
      RowBox[{"1", "i"}]], ",", 
     SubscriptBox[
      OverscriptBox["h", "."], "22"], ",", 
     SubscriptBox[
      OverscriptBox["h", "."], "23"], ",", 
     SubscriptBox[
      OverscriptBox["h", "."], "33"]}], "}"}], TraditionalForm]],
  ExpressionUUID->"d4c9eb56-8f92-4786-b1b4-3ef585552049"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalPsi]", 
     OverscriptBox["i", "^"]], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Psi]", "."], 
       RowBox[{"1", "a"}]], ",", 
      SubscriptBox[
       OverscriptBox["\[Psi]", "."], 
       RowBox[{"2", "a"}]], ",", 
      SubscriptBox[
       OverscriptBox["\[Psi]", "."], 
       RowBox[{"3", "a"}]]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "830398e8-a5b2-4774-b729-47c52f15967f"],
 " "
}], "Section",
 CellChangeTimes->{{3.433789921484375*^9, 3.433789960375*^9}, {
   3.439841823375*^9, 3.439841989390625*^9}, {3.43986276128125*^9, 
   3.4398627673125*^9}, {3.43986533615625*^9, 3.439865419203125*^9}, {
   3.4398664394375*^9, 3.43986646815625*^9}, {3.4398673761875*^9, 
   3.439867401953125*^9}, {3.440882791*^9, 3.440882814046875*^9}, {
   3.440904558828125*^9, 3.440904564703125*^9}, {3.4423496106875*^9, 
   3.4423496150625*^9}, 3.5517238206883764`*^9, {3.67499392291263*^9, 
   3.674993925768364*^9}, {3.711387721211111*^9, 3.7113877482476573`*^9}, {
   3.7113878175186195`*^9, 3.7113878219728746`*^9}, {3.711390567267896*^9, 
   3.71139056769392*^9}, {3.7113930943174353`*^9, 3.7113930951044803`*^9}, {
   3.7113948776934385`*^9, 3.7113949804623165`*^9}, {3.7113952539569597`*^9, 
   3.711395261886413*^9}, {3.71139571658042*^9, 3.711395785205345*^9}, 
   3.7113958512581234`*^9, 3.711395966142694*^9, {3.711418976350087*^9, 
   3.711419004139676*^9}, {3.711419354136695*^9, 3.7114193691435537`*^9}, {
   3.763416816418145*^9, 
   3.7634168410508213`*^9}},ExpressionUUID->"031e3254-63bf-4a4f-b020-\
43463dd7976d"],

Cell[CellGroupData[{

Cell["AdinkraReduce", "Subsection",
 CellChangeTimes->{{3.711159740989008*^9, 
  3.711159742843114*^9}},ExpressionUUID->"ed390b0f-9eb6-4474-b366-\
790be27bb804"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AdinkraReduce", "=", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"hfield", "[", 
      RowBox[{"m_", ",", "n_"}], "]"}], "->", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"m", ",", "n"}], "]"}], "[", "t", "]"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "m_", "]"}], "[", "a_", "]"}], "->", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "m", "]"}], "[", "a", "]"}], "[", "t", 
        "]"}]}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4398532235625*^9, 3.43985327665625*^9}, {
   3.4398533495625*^9, 3.439853466234375*^9}, {3.439853579328125*^9, 
   3.439853621875*^9}, {3.439865630453125*^9, 3.43986573459375*^9}, {
   3.439865787203125*^9, 3.43986585509375*^9}, {3.439870393140625*^9, 
   3.439870424015625*^9}, {3.439870466796875*^9, 3.439870474859375*^9}, 
   3.439870511125*^9, 3.439870584375*^9, {3.4398709615*^9, 
   3.439870990625*^9}, {3.439871465328125*^9, 3.439871476109375*^9}, {
   3.4409042785625*^9, 3.4409045300625*^9}, {3.44234987671875*^9, 
   3.44234997096875*^9}, {3.536715111601348*^9, 3.536715188302735*^9}, {
   3.545146062705727*^9, 3.545146168500778*^9}, {3.545146250286456*^9, 
   3.5451462562327967`*^9}, {3.763416860796569*^9, 3.7634168660523233`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"d9198706-a4ea-4d17-ab62-e8a043a68f27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"m_", ",", "n_"}], "]"}], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"m", ",", "n"}], "]"}], "[", "t", "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "m_", "]"}], "[", "a_", "]"}], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "m", "]"}], "[", "a", "]"}], "[", "t", "]"}]}],
      "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.753926191778496*^9, 3.763416871321393*^9, 
  3.7634172657943707`*^9, 3.763767526288208*^9, 3.763779003670074*^9, 
  3.763780518910809*^9, 3.76381764882565*^9, 3.763850352016395*^9, 
  3.7638519305870323`*^9, 3.763852116702491*^9, 3.763852914411788*^9, 
  3.764951441844593*^9, 3.7656360143421144`*^9, 3.765728671147724*^9, 
  3.765840622607705*^9, 3.768932873663767*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"504b7733-7abd-414e-bb27-5b7bf0af3173"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["fields", "Subsection",
 CellChangeTimes->{{3.439865886734375*^9, 3.439865888515625*^9}, {
  3.7113959820776052`*^9, 
  3.71139598215761*^9}},ExpressionUUID->"a3c1331a-d5af-4888-b423-\
7b27de62f8d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fields", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "m_", "]"}], "[", "a_", "]"}], "[", "t", "]"}], 
     "\[Rule]", 
     SubscriptBox["\[Psi]", 
      RowBox[{
       RowBox[{"10", "*", "m"}], "+", "a"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "m_", "]"}], "[", "a_", "]"}], "'"}], "[", "t",
       "]"}], "\[Rule]", 
     SubscriptBox[
      OverscriptBox["\[Psi]", "."], 
      RowBox[{
       RowBox[{"10", "*", "m"}], "+", "a"}]]}], ",", "\[IndentingNewLine]", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], "[", "t", "]"}], "\[Rule]", 
     SubscriptBox["h", 
      RowBox[{
       RowBox[{"10", "*", "m"}], "+", "n"}]]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"m_", ",", "n_"}], "]"}], "'"}], "[", "t", "]"}], "->", 
     SubscriptBox[
      OverscriptBox["h", "."], 
      RowBox[{
       RowBox[{"10", "*", "m"}], "+", "n"}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"m_", ",", "n_"}], "]"}], "''"}], "[", "t", "]"}], "\[Rule]", 
     
     SubscriptBox[
      RowBox[{"h", "''"}], 
      RowBox[{
       RowBox[{"10", "*", "m"}], "+", "n"}]]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.443408286984375*^9, 3.4434083745*^9}, {
   3.443408447578125*^9, 3.44340860446875*^9}, {3.4434086879375*^9, 
   3.443408866*^9}, {3.44340890678125*^9, 3.44340891928125*^9}, 
   3.443409331578125*^9, {3.523151289911106*^9, 3.523151308059144*^9}, {
   3.536715830767482*^9, 3.536716107452307*^9}, {3.536716168917823*^9, 
   3.536716173377078*^9}, {3.5451462370186973`*^9, 3.545146240713909*^9}, {
   3.5451462822892866`*^9, 3.545146448707805*^9}, {3.5451479347128*^9, 
   3.5451479509117265`*^9}, {3.763416886001607*^9, 3.763416898159368*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1aa8a034-8435-48b1-9da5-03a9891f1fd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "m_", "]"}], "[", "a_", "]"}], "[", "t", "]"}], 
    "\[Rule]", 
    SubscriptBox["\[Psi]", 
     RowBox[{"a", "+", 
      RowBox[{"10", " ", "m"}]}]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "m_", "]"}], "[", "a_", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    SubscriptBox[
     OverscriptBox["\[Psi]", "."], 
     RowBox[{"a", "+", 
      RowBox[{"10", " ", "m"}]}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"hfield", "[", 
      RowBox[{"m_", ",", "n_"}], "]"}], "[", "t", "]"}], "\[Rule]", 
    SubscriptBox["h", 
     RowBox[{
      RowBox[{"10", " ", "m"}], "+", "n"}]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"hfield", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    SubscriptBox[
     OverscriptBox["h", "."], 
     RowBox[{
      RowBox[{"10", " ", "m"}], "+", "n"}]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"hfield", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    SubscriptBox[
     SuperscriptBox["h", "\[Prime]\[Prime]",
      MultilineFunction->None], 
     RowBox[{
      RowBox[{"10", " ", "m"}], "+", "n"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7539261918014345`*^9, {3.763416927687214*^9, 3.763416936181768*^9}, 
   3.763417265857684*^9, 3.763767526407857*^9, 3.763779003813306*^9, 
   3.7637805190482187`*^9, 3.763817648928571*^9, 3.7638503521693907`*^9, 
   3.763851930741062*^9, 3.763852116869626*^9, 3.763852914576229*^9, 
   3.7649514418725805`*^9, 3.7656360143939753`*^9, 3.7657286712295055`*^9, 
   3.7658406226858096`*^9, 3.7689328737263036`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f5e2c4fa-1cf0-41b9-bfdf-79b2cf8ae15a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "'"}], "[", "t", 
   "]"}], "/.", "fields"}]], "Input",
 CellChangeTimes->{{3.5367161113775315`*^9, 3.5367161153677597`*^9}, {
  3.5367161521498632`*^9, 3.536716163468511*^9}, {3.545147867954982*^9, 
  3.5451479269313545`*^9}, {3.5451479604802732`*^9, 3.545147961095309*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a13d6749-f784-4d8f-aa23-ea0af4434ca8"],

Cell[BoxData[
 SubscriptBox[
  OverscriptBox["\[Psi]", "."], "12"]], "Output",
 CellChangeTimes->{3.7539261918183894`*^9, 3.763416936279117*^9, 
  3.763417265926022*^9, 3.7637675264755363`*^9, 3.763779003966569*^9, 
  3.763780519177754*^9, 3.7638176489365883`*^9, 3.7638503522996798`*^9, 
  3.7638519309071417`*^9, 3.763852117011711*^9, 3.7638529147256727`*^9, 
  3.764951441887519*^9, 3.765636014407939*^9, 3.765728671244466*^9, 
  3.765840622763919*^9, 3.768932873794487*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"be08d098-178a-4342-be2c-689b8c22e548"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The temporal gauge,",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", 
     RowBox[{"0", "\[Mu]"}]], "=", " ", 
    RowBox[{
     SubscriptBox["\[Psi]", 
      RowBox[{"0", "a"}]], " ", "=", " ", "0"}]}], TraditionalForm]],
  ExpressionUUID->"735505ad-d191-4e83-ae7d-bd7a2d7ba6bc"],
 " is the gauge we will use for the Adinkras"
}], "Subsection",
 CellChangeTimes->{{3.5367157692779646`*^9, 3.5367157935183516`*^9}, {
  3.559435164778984*^9, 3.5594351667110944`*^9}, {3.6566925252439384`*^9, 
  3.656692534948802*^9}, {3.750469579120219*^9, 
  3.750469622085001*^9}},ExpressionUUID->"db88ada8-524f-4956-827f-\
be6f75a69f79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TemporalGauge", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "m_"}], "]"}], "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "0"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "a_", "]"}], "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "0"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5367152184004564`*^9, 3.5367152266039257`*^9}, {
  3.536715373649336*^9, 3.536715384124935*^9}, {3.5367154403561516`*^9, 
  3.5367155308733287`*^9}, {3.5367155793831034`*^9, 3.5367156233776197`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"dce8ff9b-0752-40d9-9643-138d17430761"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "m_"}], "]"}], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "0"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "a_", "]"}], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "0"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.753926191877231*^9, 3.7634169484971943`*^9, 
  3.7634172659923153`*^9, 3.763767526545723*^9, 3.763779004116507*^9, 
  3.7637805193151417`*^9, 3.7638176489466257`*^9, 3.763850352451798*^9, 
  3.7638519310746937`*^9, 3.763852117169689*^9, 3.763852914890183*^9, 
  3.764951441904435*^9, 3.765636014424893*^9, 3.7657286712604227`*^9, 
  3.765840622779565*^9, 3.768932873843581*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"dbb8f52f-ff55-4c05-abed-756cf4fd08b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], "[", "t", "]"}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5367154041610813`*^9, 3.536715419140938*^9}, {
  3.5367155946999793`*^9, 3.536715595598031*^9}, {3.7114195772754583`*^9, 
  3.711419607664196*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"d916c9e9-54ca-468f-92b2-7db495397f00"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"hfield", "[", 
    RowBox[{"0", ",", "1"}], "]"}], "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.753926191898176*^9, 3.76341694866686*^9, 
  3.763417266057726*^9, 3.763767526612053*^9, 3.763779004262751*^9, 
  3.76378051944724*^9, 3.7638176489597063`*^9, 3.76385035260192*^9, 
  3.76385193122497*^9, 3.763852117335454*^9, 3.763852915263452*^9, 
  3.764951441921389*^9, 3.765636014439853*^9, 3.765728671276379*^9, 
  3.7658406228420267`*^9, 3.7689328739060445`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"49e09899-548e-4317-926f-29c6a651e24d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", "TemporalGauge"}]], "Input",
 CellChangeTimes->{{3.5367155418129544`*^9, 3.5367155447411222`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e798221c-92d8-4733-b77b-eb517a7d7af1"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7539261919201584`*^9, 3.763416948757*^9, 
  3.763417266126952*^9, 3.7637675266791067`*^9, 3.7637790044582443`*^9, 
  3.763780519712113*^9, 3.7638176489726534`*^9, 3.763850352768188*^9, 
  3.763851931411683*^9, 3.76385211753339*^9, 3.7638529155112257`*^9, 
  3.7649514419383993`*^9, 3.7656360144578037`*^9, 3.7657286712873497`*^9, 
  3.7658406228420267`*^9, 3.7689328739685316`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"5d4f59da-bdf8-4c72-a2b6-073cd614ea6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", "t", "]"}], ",",
    "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.536715549290382*^9, 3.5367155625521407`*^9}, {
  3.5367156324151363`*^9, 3.5367156399385667`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"03fbad0c-aaeb-4287-aab1-0ec36ee07468"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{
    RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.7539261919400635`*^9, 3.76341694885852*^9, 
  3.7634172661921587`*^9, 3.7637675267456303`*^9, 3.763779004617*^9, 
  3.763780519848477*^9, 3.763817648982622*^9, 3.763850352918995*^9, 
  3.7638519315607777`*^9, 3.763852117701838*^9, 3.763852915675289*^9, 
  3.7649514419543014`*^9, 3.765636014477751*^9, 3.765728671295417*^9, 
  3.7658406229201384`*^9, 3.768932874037237*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"d46e58ea-8cbf-4a1b-a5c4-4e18c7d7bfbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", "TemporalGauge"}]], "Input",
 CellChangeTimes->{{3.5367156423517046`*^9, 3.536715644680838*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"9f3919fb-456a-476c-a04f-0e037b37f3bf"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.753926191958048*^9, 3.7634169489569683`*^9, 
  3.763417266257749*^9, 3.763767526812866*^9, 3.763779004767045*^9, 
  3.763780519980839*^9, 3.7638176489906197`*^9, 3.7638503530685997`*^9, 
  3.763851931709581*^9, 3.7638521178686132`*^9, 3.763852915843326*^9, 
  3.764951441970257*^9, 3.7656360144937096`*^9, 3.765728671311039*^9, 
  3.7658406230138593`*^9, 3.768932887201873*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"4dbb5118-8061-462d-b195-00e37003f6a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "x"}], "]"}], "/.",
   "AdinkraReduce"}]], "Input",
 CellChangeTimes->{{3.5594353209199142`*^9, 3.5594353362647924`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"2f62c778-b7f7-45f6-9843-ecbeae22127f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.753926191976966*^9, 3.763416949039513*^9, 
  3.763417266322645*^9, 3.763767526878446*^9, 3.76377900491197*^9, 
  3.763780520114985*^9, 3.763817648998541*^9, 3.7638503532187777`*^9, 
  3.7638519318611526`*^9, 3.763852118034466*^9, 3.763852916007255*^9, 
  3.764951441985219*^9, 3.7656360145076723`*^9, 3.76572867132666*^9, 
  3.765840623107588*^9, 3.7689328873268423`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"707105ea-9bb7-4f3a-8c74-72ef9d0b697f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "t"}], "]"}], "/.",
   "AdinkraReduce"}]], "Input",
 CellChangeTimes->{{3.559435344865284*^9, 3.559435344953289*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c9d878b2-9963-485b-b1f5-fc3d547df7f5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{
    RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.7539261919969115`*^9, 3.763416949122016*^9, 
  3.76341726637138*^9, 3.7637675269444923`*^9, 3.763779005063076*^9, 
  3.763780520245275*^9, 3.763817649006584*^9, 3.763850353369319*^9, 
  3.7638519320103416`*^9, 3.7638521182008457`*^9, 3.763852917766734*^9, 
  3.764951442000177*^9, 3.765636014525175*^9, 3.765728671342281*^9, 
  3.765840623170073*^9, 3.768932887389353*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"fc225c62-16d6-4dd3-8a1d-c63b33dbeccd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", "TemporalGauge"}]], "Input",
 CellChangeTimes->{{3.5594353464413743`*^9, 3.559435351728677*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9c2d7138-a129-475c-87f2-25129833ac05"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7539261925903563`*^9, 3.763416949180517*^9, 
  3.763417266442074*^9, 3.763767527011881*^9, 3.763779005217609*^9, 
  3.763780520382145*^9, 3.763817649014536*^9, 3.763850353519355*^9, 
  3.763851932159264*^9, 3.7638521183682127`*^9, 3.763852917926022*^9, 
  3.7649514420151367`*^9, 3.765636014543784*^9, 3.765728671342281*^9, 
  3.7658406232481775`*^9, 3.7689328874518166`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"45e7defc-9b0e-4b1a-b418-233038c387e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "t"}], "]"}], "/.",
   "AdinkraReduce"}]], "Input",
 CellChangeTimes->{3.5594353579460325`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"50eef974-2257-48f8-b336-e5fd0daab532"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{
    RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.753926192607293*^9, 3.763416949257936*^9, 
  3.763417266509406*^9, 3.763767527079132*^9, 3.7637790053667192`*^9, 
  3.763780520514988*^9, 3.763817649022535*^9, 3.7638503536688147`*^9, 
  3.76385193230974*^9, 3.763852118549652*^9, 3.763852918065151*^9, 
  3.7649514420301*^9, 3.765636014564308*^9, 3.765728671362748*^9, 
  3.765840623388775*^9, 3.768932887498644*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5adad039-d64f-4fec-a477-d0314530d03e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", "TemporalGauge"}]], "Input",
 CellChangeTimes->{{3.5594353597121334`*^9, 3.559435362136272*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"3153002b-5cae-42cb-bec8-10bf55fd5edb"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{
    RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.7539261926252327`*^9, 3.763416949338214*^9, 
  3.763417266574844*^9, 3.7637675271425467`*^9, 3.763779005552059*^9, 
  3.76378052067934*^9, 3.7638176490305033`*^9, 3.763850353863611*^9, 
  3.7638519324735527`*^9, 3.763852118718898*^9, 3.763852918227932*^9, 
  3.764951442046054*^9, 3.7656360145832467`*^9, 3.7657286713798475`*^9, 
  3.7658406234671836`*^9, 3.7689328875751033`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"49052da6-9ced-4cdb-b36d-deb0cc8e541b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Phi[t][[i]] := ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPhi]", "i"], TraditionalForm]],ExpressionUUID->
  "22d32a12-a07e-4f54-a536-c4f005825371"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["h", "."], 
      RowBox[{"1", "i"}]], ",", 
     SubscriptBox[
      OverscriptBox["h", "."], "22"], ",", 
     SubscriptBox[
      OverscriptBox["h", "."], "23"], ",", 
     SubscriptBox[
      OverscriptBox["h", "."], "33"]}], "}"}], TraditionalForm]],
  ExpressionUUID->"535825a3-b2ec-4eb5-a6ea-8187bf0fa79b"],
 "\nPsi[t][[ihat]] := ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalPsi]", 
     OverscriptBox["i", "^"]], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Psi]", "."], 
       RowBox[{"1", "a"}]], ",", 
      SubscriptBox[
       OverscriptBox["\[Psi]", "."], 
       RowBox[{"2", "a"}]], ",", 
      SubscriptBox[
       OverscriptBox["\[Psi]", "."], 
       RowBox[{"3", "a"}]]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "3ca51e2c-cb51-463f-afd3-2b3512424c70"],
 " "
}], "Subsection",
 CellChangeTimes->{{3.711395902504054*^9, 3.711395928967568*^9}, {
  3.711419087879466*^9, 3.7114191621577144`*^9}, {3.711419222888188*^9, 
  3.711419227267439*^9}, {3.750469386722467*^9, 3.7504693920003023`*^9}, {
  3.763416962677575*^9, 
  3.763416965539968*^9}},ExpressionUUID->"a0666ffd-d2d0-431f-894b-\
3a823c54eca8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Phi", "[", "t", "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "'"}], "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "'"}], "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "'"}], "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "'"}], "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"2", ",", "3"}], "]"}], "'"}], "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"3", ",", "3"}], "]"}], "'"}], "[", "t", "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6745776682748632`*^9, 3.6745779133984795`*^9}, {
   3.674734596205909*^9, 3.674734728366371*^9}, {3.674785522776581*^9, 
   3.674785523431017*^9}, {3.6747858856838675`*^9, 3.6747858862742834`*^9}, {
   3.6748160483899126`*^9, 3.674816145774766*^9}, {3.6750057548551025`*^9, 
   3.6750058033388543`*^9}, {3.6750785596537127`*^9, 
   3.6750785645315356`*^9}, {3.6750786248412724`*^9, 
   3.6750787809037347`*^9}, {3.711419092577735*^9, 3.7114190954158974`*^9}, 
   3.750469395640361*^9, {3.763416976430573*^9, 3.7634169768575068`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"27f53762-63d5-45ef-83ef-90cfabf7745b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"1", ",", "2"}], "]"}], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"1", ",", "3"}], "]"}], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"2", ",", "2"}], "]"}], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"2", ",", "3"}], "]"}], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"3", ",", "3"}], "]"}], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7539261927698617`*^9, 3.7634169782694893`*^9, 
  3.763417266642289*^9, 3.763767527212831*^9, 3.763779005699901*^9, 
  3.763780520815342*^9, 3.76381764904147*^9, 3.76385035402242*^9, 
  3.763851932642812*^9, 3.7638521188857307`*^9, 3.7638529183952513`*^9, 
  3.764951442064006*^9, 3.765636014607545*^9, 3.7657286713954725`*^9, 
  3.7658406235453005`*^9, 3.768932887635536*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ae6fb7c8-e073-422b-a739-f46a681a080b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Psi", "[", "t", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"-", "I"}], " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "'"}], "[", "t", 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "'"}], "[", "t", 
      "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6748161614942904`*^9, 3.674816192282522*^9}, {
   3.6748162285602317`*^9, 3.67481634210023*^9}, {3.6748165467092514`*^9, 
   3.674816556356063*^9}, {3.674860464676492*^9, 3.674860465434026*^9}, {
   3.6750788223982573`*^9, 3.675078832825039*^9}, {3.7114190975170174`*^9, 
   3.711419106193514*^9}, 3.7504693999741793`*^9, 3.7634169828939953`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"f66f4da0-67fd-4e38-a1d1-e6fb3b7ab5b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7539261927947836`*^9, 3.7634169839854603`*^9, 
  3.763417266974433*^9, 3.763767527270549*^9, 3.76377900585112*^9, 
  3.76378052094849*^9, 3.7638176490564337`*^9, 3.763850354171769*^9, 
  3.763851932793679*^9, 3.7638521190512037`*^9, 3.763852918546278*^9, 
  3.7649514420829573`*^9, 3.765636014624688*^9, 3.7657286714109116`*^9, 
  3.7658406236077757`*^9, 3.768932887714514*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"36d7cd2d-d973-41b8-9970-4897acef81c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Phi", "[", "t", "]"}], "/.", "fields"}]], "Input",
 CellChangeTimes->{{3.711396026845166*^9, 3.7113960295993233`*^9}, {
  3.750469403318871*^9, 3.7504694051651983`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"6b3fd360-b120-4bb1-b15b-398abd95cf61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox[
    OverscriptBox["h", "."], "11"], ",", 
   SubscriptBox[
    OverscriptBox["h", "."], "12"], ",", 
   SubscriptBox[
    OverscriptBox["h", "."], "13"], ",", 
   SubscriptBox[
    OverscriptBox["h", "."], "22"], ",", 
   SubscriptBox[
    OverscriptBox["h", "."], "23"], ",", 
   SubscriptBox[
    OverscriptBox["h", "."], "33"]}], "}"}]], "Output",
 CellChangeTimes->{3.7539261928157244`*^9, 3.763416986165118*^9, 
  3.7634172672254553`*^9, 3.763767527338182*^9, 3.76377900600027*^9, 
  3.763780521077572*^9, 3.763817649065363*^9, 3.763850354322474*^9, 
  3.763851932943615*^9, 3.763852119219632*^9, 3.763852918711735*^9, 
  3.764951442098915*^9, 3.7656360146406565`*^9, 3.7657286714265356`*^9, 
  3.765840623685883*^9, 3.7689328877713833`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"070e9cce-9fb0-4f7b-aea4-22f02bd93aba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"I", " ", 
   RowBox[{"Psi", "[", "t", "]"}]}], "/.", "fields"}]], "Input",
 CellChangeTimes->{{3.711396031429428*^9, 3.7113960365537214`*^9}, {
  3.750469408705258*^9, 3.7504694089681063`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"803dd437-5d4c-44c3-9438-2ee9d174f2f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "11"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "12"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "13"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "14"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "21"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "22"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "23"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "24"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "31"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "32"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "33"], ",", 
   SubscriptBox[
    OverscriptBox["\[Psi]", "."], "34"]}], "}"}]], "Output",
 CellChangeTimes->{3.7539261928376646`*^9, 3.763416988032421*^9, 
  3.763417267391623*^9, 3.7637675274154863`*^9, 3.7637790061500874`*^9, 
  3.763780521214884*^9, 3.763817649073395*^9, 3.7638503544727087`*^9, 
  3.7638519330942783`*^9, 3.763852119622332*^9, 3.763852918861623*^9, 
  3.76495144211487*^9, 3.7656360146566167`*^9, 3.7657286714421577`*^9, 
  3.765840623701528*^9, 3.7689328878338675`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c15ac937-2de2-4ffc-bad3-c2ee75077b18"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
FieldList:= list of the names of the fields, FieldListWithDerivaties := list \
of all Fields and their derivatives up to second order\
\>", "Subsection",
 CellChangeTimes->{{3.7371647409610195`*^9, 3.7371647437738266`*^9}, {
  3.750525075194129*^9, 
  3.7505250984500074`*^9}},ExpressionUUID->"fabc6046-c7a9-4397-9450-\
8076231cee42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FieldList", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"mu", ",", "nu"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"nu", ",", "mu", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.7371647681666255`*^9, 3.7371647892935534`*^9}, {
   3.737164819313388*^9, 3.7371648856185107`*^9}, {3.7371656041965075`*^9, 
   3.737165618979376*^9}, {3.737166395091236*^9, 3.737166423297084*^9}, {
   3.75029993104405*^9, 3.7502999596934166`*^9}, {3.7503000034429674`*^9, 
   3.7503000392702475`*^9}, 3.7503054643470335`*^9, 3.7503058656259027`*^9, {
   3.750510991232171*^9, 3.750511124598618*^9}, {3.750527628191156*^9, 
   3.7505276304041114`*^9}, {3.7634170019838057`*^9, 3.763417008466436*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"d2e75817-7f14-4246-8640-904f1986767b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "2"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7539261928685813`*^9, 3.763417012722344*^9, 
  3.7634172674723988`*^9, 3.763767527485055*^9, 3.763779006300387*^9, 
  3.763780521344213*^9, 3.763817649100838*^9, 3.763850354618908*^9, 
  3.763851933244416*^9, 3.763852119793379*^9, 3.763852919062492*^9, 
  3.76495144213785*^9, 3.765636014675564*^9, 3.765728671457779*^9, 
  3.7658406237639885`*^9, 3.768932887912009*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"43b543dd-9246-4fe2-a7b2-e92e60ed533e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FieldListWithDerivatives", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"FieldList", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"FieldList", ",", 
          RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
      "Flatten"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"FieldList", ",", 
          RowBox[{"\[CapitalStigma]", "[", "mu", "]"}], ",", 
          RowBox[{"\[CapitalStigma]", "[", "nu", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
      "Flatten"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.750525071108141*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"eab3f79e-fcc9-40fb-bbfb-f19729305d5e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symmetries, Constraints, and raised indices ", "Section",
 CellChangeTimes->{{3.433789921484375*^9, 3.433789960375*^9}, {
   3.439841823375*^9, 3.439841989390625*^9}, {3.43986276128125*^9, 
   3.4398627673125*^9}, {3.43986533615625*^9, 3.439865419203125*^9}, {
   3.4398664394375*^9, 3.43986646815625*^9}, {3.4398673761875*^9, 
   3.439867401953125*^9}, {3.440882791*^9, 3.440882814046875*^9}, {
   3.440904558828125*^9, 3.440904564703125*^9}, {3.4423496106875*^9, 
   3.4423496150625*^9}, 3.5517238206883764`*^9, {3.6566922052303467`*^9, 
   3.6566922084936523`*^9}, {3.657305476159235*^9, 3.657305492462006*^9}, {
   3.6573055351196346`*^9, 3.6573057071843123`*^9}, {3.657305746656595*^9, 
   3.657305763959517*^9}, {3.657305811086591*^9, 3.657305828973529*^9}, {
   3.657305861222026*^9, 3.6573059207094817`*^9}, {3.6573059701518497`*^9, 
   3.6573059878427677`*^9}, {3.6573060179510436`*^9, 3.657306040697504*^9}, {
   3.657306324464302*^9, 3.6573063730675735`*^9}, {3.657306411139715*^9, 
   3.657306518693385*^9}, {3.657306552916094*^9, 3.6573065872758217`*^9}, {
   3.657309213890884*^9, 3.6573093687406874`*^9}, {3.6573108147116184`*^9, 
   3.6573110015778933`*^9}, {3.6573110458306985`*^9, 3.657311553391782*^9}, {
   3.675001437546451*^9, 3.6750014581365*^9}, {3.675001495783732*^9, 
   3.675001499544445*^9}, {3.7027758610616875`*^9, 3.70277586616498*^9}, 
   3.711395814640029*^9, {3.763417047728816*^9, 
   3.763417048379533*^9}},ExpressionUUID->"4cebe732-ee85-47ff-b2ab-\
c6f0f89802fa"],

Cell[CellGroupData[{

Cell[TextData[{
 "Hard code the indices of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "\[Mu]\[Nu]"], TraditionalForm]], "None",ExpressionUUID->
  "96d61d85-f9a6-460d-9be4-8e91101f2468"],
 " so the independent fields are: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", 
     RowBox[{"0", "\[Mu]"}]], ",", " ", 
    SubscriptBox["h", 
     RowBox[{"1", "i"}]], ",", " ", 
    SubscriptBox["h", "22"], ",", " ", 
    SubscriptBox["h", "23"], " ", ",", " ", 
    SubscriptBox["h", "33"]}], TraditionalForm]], "None",ExpressionUUID->
  "d866d0cb-4843-4a3d-b319-782bf44e10b4"]
}], "Subsection",
 CellChangeTimes->{{3.5367157366901007`*^9, 3.5367157585583515`*^9}, {
  3.5594349997035418`*^9, 3.559435007078964*^9}, {3.5594350495613937`*^9, 
  3.5594351128710146`*^9}, {3.7095716264722633`*^9, 3.709571628134359*^9}, {
  3.711419643819264*^9, 
  3.7114196988684125`*^9}},ExpressionUUID->"96021e92-db76-4fec-acc7-\
ed9c7105f25b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"1", ",", "0"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "2"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"3", ",", "0"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"3", ",", "1"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"3", ",", "2"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"2", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.536715241146757*^9, 3.536715369286086*^9}, {
  3.5594350106271667`*^9, 3.5594350334044695`*^9}, {3.559435125076713*^9, 
  3.5594351491560903`*^9}, {3.5594352409843426`*^9, 3.5594352499038525`*^9}, {
  3.5594387483699536`*^9, 3.559438819557025*^9}, {3.559489972490155*^9, 
  3.5594899888800926`*^9}, {3.709571409139833*^9, 3.70957162238603*^9}, {
  3.711396588085267*^9, 3.7113966704349775`*^9}, {3.7114197138312683`*^9, 
  3.711419786304414*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"9845e56b-9a82-4a33-a051-19f04859b4ef"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"hfield", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], "[", "t", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"mu", ",", "nu"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "/.", 
     "AdinkraReduce"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7113966933592887`*^9, 3.711396724484069*^9}, {
  3.7114197915627146`*^9, 3.7114197962449827`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"208ec5c7-a4b1-4321-8f11-2bd090050a3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hfield", "[", 
   RowBox[{"0", ",", "1"}], "]"}], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.7113967266311913`*^9, 3.7113967297583704`*^9}, {
  3.711419807500626*^9, 3.711419807833645*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"ffac19da-05ec-4960-9410-d8e8aa099ac4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hfield", "[", 
   RowBox[{"0", ",", "1"}], "]"}], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.7539261929383955`*^9, 3.763417054434393*^9, 
  3.763417267561757*^9, 3.76376753405875*^9, 3.763779006482771*^9, 
  3.763780521514915*^9, 3.7638176492198453`*^9, 3.7638503548068447`*^9, 
  3.763851933440731*^9, 3.763852119885553*^9, 3.763852919237651*^9, 
  3.7649514421897607`*^9, 3.7656360147174535`*^9, 3.7657286715067835`*^9, 
  3.7658406238577156`*^9, 3.7689328880026217`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"d61c9d1f-049a-4b31-8bbb-5a6995544333"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hfield", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.55948999932469*^9, 3.55949001138938*^9}, {
  3.709571561148527*^9, 3.709571562893627*^9}, {3.711419810433794*^9, 
  3.7114198106868086`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"7dc35f1f-4059-4750-99ef-7fb2003eea30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hfield", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.7539261929573755`*^9, 3.7634170544961243`*^9, 
  3.7634172676231823`*^9, 3.763767534103812*^9, 3.7637790066330214`*^9, 
  3.763780521648395*^9, 3.763817649304695*^9, 3.763850354935606*^9, 
  3.76385193359368*^9, 3.763852119973102*^9, 3.7638529193959846`*^9, 
  3.764951442204716*^9, 3.765636014733411*^9, 3.7657286715067835`*^9, 
  3.7658406239358225`*^9, 3.768932888071594*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"6fa4ee18-187a-4d50-a0fb-9f2c635657cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.559490017988757*^9, 3.559490022317005*^9}, {
  3.7095715875650387`*^9, 3.709571589308138*^9}, {3.7114198145920315`*^9, 
  3.711419814844046*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"46fac5bf-729d-42ca-b0da-69f6d07d4304"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"hfield", "[", 
    RowBox[{"3", ",", "3"}], "]"}], 
   TagBox[
    RowBox[{"(", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.7539261929773045`*^9, 3.763417054563032*^9, 
  3.763417267690978*^9, 3.7637675341732397`*^9, 3.7637790067833967`*^9, 
  3.763780521812698*^9, 3.763817649390397*^9, 3.763850355089335*^9, 
  3.763851933744437*^9, 3.763852120054696*^9, 3.763852919561277*^9, 
  3.7649514427639585`*^9, 3.7656360147583427`*^9, 3.7657286715380297`*^9, 
  3.765840624013954*^9, 3.768932888143958*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"f1a85a6e-1b49-4596-8106-ba09f1d926dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hfield", "[", 
   RowBox[{"1", ",", "0"}], "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.709571591183245*^9, 3.7095715972605925`*^9}, {
  3.711419821448424*^9, 3.7114198217204394`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"881ad82f-4258-4f69-8ef0-e0b295f5f3c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hfield", "[", 
   RowBox[{"0", ",", "1"}], "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.753926192999233*^9, 3.763417054642136*^9, 
  3.763417267774518*^9, 3.763767534250935*^9, 3.763779006934023*^9, 
  3.763780521947631*^9, 3.7638176494842014`*^9, 3.7638503552386513`*^9, 
  3.763851933893873*^9, 3.7638521201390343`*^9, 3.76385291972796*^9, 
  3.764951442928482*^9, 3.7656360147772923`*^9, 3.765728671553651*^9, 
  3.765840624013954*^9, 3.768932888206442*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"a95864e3-b8a2-4647-a3b6-4282e58382ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"hfield", "[", 
      RowBox[{"1", ",", "0"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "t"}], "]"}], "/.",
   "AdinkraReduce"}]], "Input",
 CellChangeTimes->{{3.7095716373618865`*^9, 3.709571666639561*^9}, {
  3.711419825979683*^9, 3.7114198262426977`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"3e233d6f-acbc-4024-99a7-12b4fcc7bd16"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"hfield", "[", 
    RowBox[{"0", ",", "1"}], "]"}], "\[Prime]",
   MultilineFunction->None], "[", "t", "]"}]], "Output",
 CellChangeTimes->{3.7539261930181828`*^9, 3.76341705469668*^9, 
  3.763417267842081*^9, 3.763767534321671*^9, 3.763779007083877*^9, 
  3.763780522082109*^9, 3.763817649571953*^9, 3.763850355389084*^9, 
  3.763851934043531*^9, 3.76385212023566*^9, 3.763852919895027*^9, 
  3.7649514429484277`*^9, 3.7656360147938395`*^9, 3.7657286715692725`*^9, 
  3.7658406240920353`*^9, 3.7689328883001328`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"6844a791-501c-48c7-8203-5cad3bd187df"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "hfieldupdown[mu,nu] := ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["h", "\[Mu]"], "\[Nu]"], TraditionalForm]],ExpressionUUID->
  "ddb7d850-4589-4a25-a2f1-2f42870970b5"],
 "  ,  hfielddownup[mu,nu] := ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["h", "\[Mu]"], "\[Nu]"], TraditionalForm]],ExpressionUUID->
  "b5db1a6e-4054-413e-a4cb-ddc3174fc0d8"],
 "  ,  hfieldupup[mu,nu] := ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["h", "\[Mu]\[Nu]"], TraditionalForm]],ExpressionUUID->
  "baed0b15-caf3-4c4a-83bd-eb6335f0a525"],
 "   htrace = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Eta]", "\[Mu]\[Nu]"], 
    SubscriptBox["h", "\[Mu]\[Nu]"]}], TraditionalForm]],ExpressionUUID->
  "6f074d78-307f-4f81-a697-5eb967d1b9a6"]
}], "Subsection",
 CellChangeTimes->{{3.7114212364910088`*^9, 3.7114213366147356`*^9}, {
  3.7114302786545324`*^9, 
  3.711430289582157*^9}},ExpressionUUID->"ebd33dc1-4cb6-41e7-ac9a-\
63fd264d7438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"mu", ",", "nu"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7114213938550096`*^9, 3.711421405293664*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a57edc76-e31c-4e18-b0d9-0079752b5cad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "0"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "2"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "3"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "2"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"2", ",", "3"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "3"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"2", ",", "3"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"3", ",", "3"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.753926196566696*^9, 3.763417058991953*^9, 
  3.763417267901733*^9, 3.763767534385911*^9, 3.763779007233886*^9, 
  3.763780522215126*^9, 3.7638176496527863`*^9, 3.763850355535832*^9, 
  3.7638519341945553`*^9, 3.763852120329008*^9, 3.76385292006469*^9, 
  3.764951442967414*^9, 3.7656360148087616`*^9, 3.765728671584893*^9, 
  3.765840624154521*^9, 3.7689328883524694`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"8656d316-eb90-4cef-8b26-a74929f0bddd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"hfieldupdown", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{"RaiseSTIndex", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"mu", ",", "nu"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "UP", ",", 
      "DOWN"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711421338195826*^9, 3.7114213775570774`*^9}, {
  3.711421551893049*^9, 3.711421552994112*^9}, {3.75046986237224*^9, 
  3.7504699009192*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"2cfa4ac4-3d61-4674-baf0-4f36ec828e25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"hfieldupdown", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.711421555321245*^9, 3.711421572600233*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"3c9af623-f384-4d3b-82db-b800da9ae8d4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "2"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "3"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "2"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "3"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7539261966385045`*^9, 3.763417059095332*^9, 
  3.763417267971629*^9, 3.763767534495331*^9, 3.763779007398858*^9, 
  3.7637805223629503`*^9, 3.763817649773788*^9, 3.7638503557135983`*^9, 
  3.763851934375895*^9, 3.7638521204256477`*^9, 3.763852920238545*^9, 
  3.764951443014289*^9, 3.7656360148317003`*^9, 3.7657286716161385`*^9, 
  3.765840624248248*^9, 3.768932888446159*^9},
 CellLabel->
  "Out[38]//MatrixForm=",ExpressionUUID->"ff26f688-1efd-4d7e-a057-\
58982640ab20"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"hfielddownup", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{"RaiseSTIndex", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"mu", ",", "nu"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "DOWN", ",", 
      "UP"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711421338195826*^9, 3.7114213775570774`*^9}, {
  3.711421551893049*^9, 3.711421552994112*^9}, {3.711421595653552*^9, 
  3.711421618143838*^9}, {3.7504699286860533`*^9, 3.750469947132716*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"ae8da373-78bc-45c4-8bd1-cc7544967895"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"hfielddownup", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.711421555321245*^9, 3.711421572600233*^9}, {
  3.7114216062461576`*^9, 3.7114216084812856`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"f536b1fd-b51f-43a2-978e-0aca6a756b83"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "1"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "1"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753926196694354*^9, 3.763417059194994*^9, 
  3.763417268054872*^9, 3.763767534582244*^9, 3.763779007573204*^9, 
  3.763780522498578*^9, 3.7638176498623495`*^9, 3.763850355930131*^9, 
  3.763851934555574*^9, 3.763852120519158*^9, 3.76385292042192*^9, 
  3.7649514430641193`*^9, 3.7656360148575664`*^9, 3.765728671638567*^9, 
  3.76584062435763*^9, 3.7689328885208073`*^9},
 CellLabel->
  "Out[40]//MatrixForm=",ExpressionUUID->"ac9af318-9bad-43b5-b28c-\
d5cf09551a89"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"hfieldupup", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{"RaiseSTIndex", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"mu", ",", "nu"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "UP", ",", 
      "UP"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711421338195826*^9, 3.7114213775570774`*^9}, {
  3.711421551893049*^9, 3.711421552994112*^9}, {3.7114216338707376`*^9, 
  3.711421638957029*^9}, {3.750469964001569*^9, 3.75046997941024*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"bd4e95ed-017d-4f5a-ad4c-fbe9b5f9f7b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"hfieldupup", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.711421555321245*^9, 3.711421572600233*^9}, {
  3.711421641788191*^9, 3.711421642879253*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"bc05005e-355d-4a4d-a6b2-feec35e37e48"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "0"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "2"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "3"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "2"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"0", ",", "3"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7539261967342777`*^9, 3.76341705926278*^9, 
  3.7634172681539497`*^9, 3.763767534682651*^9, 3.763779007733127*^9, 
  3.763780522645472*^9, 3.7638176499516582`*^9, 3.763850356117713*^9, 
  3.763851934710849*^9, 3.763852120615818*^9, 3.7638529206082897`*^9, 
  3.7649514431000223`*^9, 3.7656360148904767`*^9, 3.7657286716722374`*^9, 
  3.765840624420108*^9, 3.7689328885988693`*^9},
 CellLabel->
  "Out[42]//MatrixForm=",ExpressionUUID->"f5fc37b7-fa2f-41f7-8132-\
487f102d72c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"htrace", "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Eta]", "[", 
      RowBox[{"mu", ",", "nu"}], "]"}], 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"mu", ",", "nu"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711430296747567*^9, 3.711430334961753*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"6a2a327c-fc47-4667-b09b-aacfee9c98d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"hfield", "[", 
    RowBox[{"1", ",", "1"}], "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   RowBox[{"hfield", "[", 
    RowBox[{"2", ",", "2"}], "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   RowBox[{"hfield", "[", 
    RowBox[{"3", ",", "3"}], "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7539261967561893`*^9, 3.763417059333776*^9, 
  3.763417268226*^9, 3.763767534734585*^9, 3.7637790078837423`*^9, 
  3.7637805227819233`*^9, 3.7638176500395327`*^9, 3.763850356273027*^9, 
  3.763851934844462*^9, 3.763852120688671*^9, 3.763852920763815*^9, 
  3.7649514431259527`*^9, 3.7656360149074335`*^9, 3.7657286716832075`*^9, 
  3.7658406244985323`*^9, 3.7689328886461678`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"8e549b1e-7490-4ba6-9847-8293388677c8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[Psi]stup[\[Mu]][a] := ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["\[Psi]", "\[Mu]"], "a"], TraditionalForm]],ExpressionUUID->
  "c6f1e677-dbb9-4513-834a-3dc7ef18eef4"],
 "    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]stupup", "[", "\[Mu]", "]"}], "[", "a", "]"}], ":=", 
    SuperscriptBox["\[Psi]", "\[Mu]a"]}], TraditionalForm]],ExpressionUUID->
  "16e93f09-eff2-43c8-be84-8148a5b318e0"],
 "    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]stdownup", "[", "\[Mu]", "]"}], "[", "a", "]"}], ":=", 
    SuperscriptBox[
     SubscriptBox["\[Psi]", "\[Mu]"], "a"]}], TraditionalForm]],
  ExpressionUUID->"d981aa95-3994-4bab-9552-02ce5cc71473"]
}], "Subsection",
 CellChangeTimes->{{3.7113885157185545`*^9, 3.7113885534627132`*^9}, {
  3.7113889545276527`*^9, 3.711388969111487*^9}, {3.71139033864882*^9, 
  3.7113903511965375`*^9}},ExpressionUUID->"66b8783e-1794-4824-975a-\
9f85190445bc"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]stup", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{"RaiseSTIndex", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7113885588580217`*^9, 3.7113886129791174`*^9}, {
  3.737159706297971*^9, 3.7371597127674866`*^9}, {3.7505088296416583`*^9, 
  3.7505088323743763`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b5d1ac21-b213-4610-9168-676253478304"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]stup", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7113886043156214`*^9, 3.7113886085988665`*^9}, {
  3.711388904264778*^9, 3.7113889382287207`*^9}, {3.7505088333534346`*^9, 
  3.7505088341298285`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"76346806-2413-4cf5-a34b-f938eeec0356"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753926196898808*^9, 3.763417062538496*^9, 
  3.763417268296238*^9, 3.763767534832287*^9, 3.7637790080554256`*^9, 
  3.763780522948388*^9, 3.7638176501313148`*^9, 3.763850356447541*^9, 
  3.763851935004788*^9, 3.763852120779665*^9, 3.763852920955209*^9, 
  3.764951443164892*^9, 3.7656360154763007`*^9, 3.7657286717081413`*^9, 
  3.7658406245766387`*^9, 3.768932888739932*^9},
 CellLabel->
  "Out[45]//MatrixForm=",ExpressionUUID->"544c8fa9-92e1-4eb9-bd0a-\
979400441bff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]stupup", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{"RaiseFermionIndex", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]stupHolder", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "/.", 
     RowBox[{"\[Psi]stupHolder", "\[Rule]", "\[Psi]stup"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7113900941898375`*^9, 3.711390151475114*^9}, {
  3.7371597436143637`*^9, 3.7371597764932556`*^9}, {3.750508835205495*^9, 
  3.7505088385246162`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f3ce096d-5295-4374-b037-8c777b82655a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]stupup", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7113886043156214`*^9, 3.7113886085988665`*^9}, {
  3.711388904264778*^9, 3.7113889382287207`*^9}, {3.711390185960087*^9, 
  3.711390186093094*^9}, {3.750508839321355*^9, 3.750508840022565*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"1a3008e4-99af-465f-ad28-2fc6851d3e95"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7539261969396987`*^9, 3.763417062613784*^9, 
  3.763417268404436*^9, 3.763767534896347*^9, 3.763779008207016*^9, 
  3.763780523096603*^9, 3.763817650221307*^9, 3.763850356634647*^9, 
  3.763851935171207*^9, 3.76385212086574*^9, 3.763852921159568*^9, 
  3.7649514432017946`*^9, 3.765636015601471*^9, 3.76572867172287*^9, 
  3.7658406246547213`*^9, 3.768932888819194*^9},
 CellLabel->
  "Out[47]//MatrixForm=",ExpressionUUID->"e6015a95-ac0a-4f9d-8da8-\
22653cb9f658"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseCmetric", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.711390208186358*^9, 3.7113902171668715`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"226b1f96-029e-4913-aec4-d9081f7c64d4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"1", "0", "0", "0"},
     {"0", "0", "0", "1"},
     {"0", "0", 
      RowBox[{"-", "1"}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.753926196960657*^9, 3.763417062680636*^9, 
  3.763417268471818*^9, 3.7637675349381323`*^9, 3.7637790083490334`*^9, 
  3.763780523231288*^9, 3.7638176502962613`*^9, 3.763850356785542*^9, 
  3.763851935325946*^9, 3.763852120937145*^9, 3.763852921307963*^9, 
  3.7649514432311487`*^9, 3.7656360156164303`*^9, 3.765728671738497*^9, 
  3.7658406247172184`*^9, 3.7689328888660593`*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"b69be1c3-90c2-46b9-9292-\
122e570c5721"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]stdownup", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", " ", 
    RowBox[{"RaiseFermionIndex", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7113900941898375`*^9, 3.711390151475114*^9}, {
  3.7113902999156046`*^9, 3.7113903122923126`*^9}, {3.737159830451649*^9, 
  3.7371598338584566`*^9}, {3.7505088408551497`*^9, 3.750508843858409*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"cd755ba2-a4b7-4398-a55d-e7be98ae11ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]stdownup", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7113886043156214`*^9, 3.7113886085988665`*^9}, {
  3.711388904264778*^9, 3.7113889382287207`*^9}, {3.711390185960087*^9, 
  3.711390186093094*^9}, {3.711390324363003*^9, 3.711390325325058*^9}, {
  3.7505088447456846`*^9, 3.750508845300274*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"685c61ac-3250-4ca8-995d-6da29fb04ff5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7539261970045414`*^9, 3.763417062748214*^9, 
  3.7634172685694027`*^9, 3.763767535052867*^9, 3.7637790085240993`*^9, 
  3.7637805233800917`*^9, 3.763817650544221*^9, 3.7638503569636393`*^9, 
  3.7638519354948273`*^9, 3.763852121025201*^9, 3.763852921492659*^9, 
  3.764951443275072*^9, 3.7656360156603136`*^9, 3.765728671754119*^9, 
  3.765840624810974*^9, 3.7689328889597864`*^9},
 CellLabel->
  "Out[50]//MatrixForm=",ExpressionUUID->"4cabfea9-36ca-482d-847f-\
23f185d0dfeb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Rfield", "[", "a", "]"}], " ", ":=", " ", 
    RowBox[{
     SubscriptBox["R", "a"], " ", "=", " "}]}], TraditionalForm]],
  ExpressionUUID->"924daeee-3c48-4015-ab6a-105984b661b9"],
 Cell[BoxData[
  FormBox[
   RowBox[{"  ", 
    RowBox[{"(", 
     RowBox[{"[", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "\[Mu]"], ",", 
       SuperscriptBox["\[Gamma]", "\[Nu]"]}], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"5bc5b9f9-8082-42b5-a41c-c6d9a8d65d5b"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[")", "a"], "b"], TraditionalForm]],ExpressionUUID->
  "3b8d23b0-b140-43d7-abec-c7f50c8c74bf"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[PartialD]", "\[Mu]"], TraditionalForm]], "None",
  ExpressionUUID->"25f7e0ed-0083-45d0-95f1-574c2749fefa"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", 
    RowBox[{"\[Nu]", " ", "b"}]], TraditionalForm]],ExpressionUUID->
  "6b771348-b1d4-4202-8cd9-f299cdad194c"]
}], "Subsection",
 CellChangeTimes->{{3.709571685911663*^9, 3.7095717270220146`*^9}, {
  3.710786334732687*^9, 
  3.7107863351117086`*^9}},ExpressionUUID->"2eabba08-102f-4d1a-b21d-\
9c941a8a93eb"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Rfield", "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"CommuteGamma", "[", 
         RowBox[{"mu", ",", "nu"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bi"}], "]"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "nu", "]"}], "[", "bi", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bi", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7095717331863675`*^9, 3.7095718259986763`*^9}, 
   3.710786351197629*^9, {3.750508846321866*^9, 3.7505088487264442`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"20151025-4977-434f-8b4a-a00557538b00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rfield", "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.70957179914814*^9, {3.709571841945588*^9, 3.7095718523621836`*^9}, 
   3.710786351935671*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"9139f73c-5610-47db-85de-721e5ddab65a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.75392619704741*^9, 3.763417064931902*^9, 
  3.763417268671013*^9, 3.7637675352328663`*^9, 3.763779008710889*^9, 
  3.763780523528734*^9, 3.763817650590153*^9, 3.76385035712195*^9, 
  3.763851935655138*^9, 3.76385212110686*^9, 3.76385292167492*^9, 
  3.764951443320994*^9, 3.7656360156912303`*^9, 3.7657286717853613`*^9, 
  3.7658406248890686`*^9, 3.768932889050656*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"f6029d7d-5307-4f1d-baff-0e5bcdc2c6b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", "AdinkraReduce"}]], "Input",
 CellChangeTimes->{{3.7095718589025583`*^9, 3.709571863934846*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"61f07079-ba38-4b3a-adf7-d1b63950c15a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7539261970693855`*^9, 3.763417065002502*^9, 
  3.7634172687407084`*^9, 3.76376753528794*^9, 3.763779008867371*^9, 
  3.7637805236650743`*^9, 3.7638176506031017`*^9, 3.76385035727313*^9, 
  3.763851935810855*^9, 3.7638521211884108`*^9, 3.763852921830613*^9, 
  3.764951446430319*^9, 3.765636015711177*^9, 3.765728671800982*^9, 
  3.7658406249515567`*^9, 3.7689328891095*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f444ae08-da77-4910-b003-33ee5149ecc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rfield", "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.70957179914814*^9, {3.709571841945588*^9, 3.7095718814748487`*^9}, 
   3.710786357079965*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"9c955f5a-b6f6-4ca8-9e99-763e30687ce8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7539261970943155`*^9, 3.763417065068334*^9, 
  3.7634172688253803`*^9, 3.7637675353552732`*^9, 3.763779009017293*^9, 
  3.763780523798254*^9, 3.7638176506230793`*^9, 3.76385035742216*^9, 
  3.763851935959902*^9, 3.763852121272685*^9, 3.763852921981588*^9, 
  3.7649514465615616`*^9, 3.7656360157281322`*^9, 3.76572867180605*^9, 
  3.7658406250296555`*^9, 3.76893288917632*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"3d39268f-5bcc-47b8-8281-ca3e8b747d07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", "AdinkraReduce"}]], "Input",
 CellChangeTimes->{{3.7095718589025583`*^9, 3.709571863934846*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"7b1be6e0-0b88-4f01-915b-d23a8a4404b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7539261971162267`*^9, 3.76341706513584*^9, 
  3.763417268892395*^9, 3.763767535420047*^9, 3.763779009166704*^9, 
  3.763780523995818*^9, 3.763817650636612*^9, 3.763850357572939*^9, 
  3.763851936126787*^9, 3.763852121354814*^9, 3.763852922160934*^9, 
  3.764951446585549*^9, 3.765636015741098*^9, 3.7657286718216753`*^9, 
  3.765840625045252*^9, 3.7689328892451367`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"75224c30-d7d0-4707-b0f8-3b67ed422d72"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Rfieldup[a] := ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["C", "ab"], 
    SubscriptBox["R", "b"]}], TraditionalForm]],ExpressionUUID->
  "88b1db47-fd0f-4e27-baff-4d1cba66d161"]
}], "Subsection",
 CellChangeTimes->{{3.7095724108191257`*^9, 3.7095724188985877`*^9}, {
  3.7107863367678037`*^9, 
  3.710786337208829*^9}},ExpressionUUID->"5a98fa28-1427-462f-ae09-\
f8bfc2a3686a"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Rfieldup", "[", "aa", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"RaiseFermionIndex", "[", 
      RowBox[{
       RowBox[{"RfieldHolder", "[", "aa", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "/.", 
     RowBox[{"RfieldHolder", "\[Rule]", "Rfield"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709572420892702*^9, 3.709572489071602*^9}, {
  3.710786365343438*^9, 3.710786366705516*^9}, {3.7113893711554823`*^9, 
  3.71138940258228*^9}, {3.737159871111721*^9, 3.7371598948638387`*^9}, {
  3.7505088494222317`*^9, 3.7505088624065228`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ba1680ee-57fd-4b56-af80-cc5d20099ad0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rfieldup", "[", "1", "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.7095732760606146`*^9, 3.709573280965895*^9}, 
   3.7107863679595876`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"f7153694-c184-45ea-98af-0a3322d2ce92"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.753926197157126*^9, 3.7634170677921753`*^9, 
  3.7634172689877567`*^9, 3.763767535517733*^9, 3.7637790093185263`*^9, 
  3.763780524146407*^9, 3.7638176506685257`*^9, 3.763850357750648*^9, 
  3.763851936289536*^9, 3.76385212144057*^9, 3.7638529223413877`*^9, 
  3.7649514466325703`*^9, 3.7656360157779984`*^9, 3.765728671931255*^9, 
  3.7658406251077375`*^9, 3.7689328893558407`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"4341f3e2-2fd4-4bc5-b750-43ed1082754d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rfield", "[", "2", "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.70957328226797*^9, 3.709573285860175*^9}, 
   3.7107863690306487`*^9, {3.7371600088761597`*^9, 3.737160009001132*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"5ad5e3ce-bf63-4e38-8f87-1c04b4fe5653"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7539261971840463`*^9, 3.7634170678567677`*^9, 
  3.763417269059038*^9, 3.763767535590156*^9, 3.7637790094666853`*^9, 
  3.76378052428198*^9, 3.763817650759283*^9, 3.7638503579057083`*^9, 
  3.763851936448509*^9, 3.7638521215213947`*^9, 3.763852922495788*^9, 
  3.7649514466676245`*^9, 3.765636015795951*^9, 3.765728671946876*^9, 
  3.7658406251858444`*^9, 3.768932889413686*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"2e1cb62e-818b-4534-b7dd-a1609b5b3018"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Rfield", "[", "1", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"Rfieldup", "[", "2", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.737160069679016*^9, 3.737160084743952*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"249992e0-316c-4067-81b7-06db41259129"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.753926197203992*^9, 3.76341706792393*^9, 
  3.7634172691264753`*^9, 3.763767535652883*^9, 3.763779009613358*^9, 
  3.763780524415183*^9, 3.763817650773208*^9, 3.763850358054941*^9, 
  3.7638519365973473`*^9, 3.763852121604151*^9, 3.763852922663542*^9, 
  3.7649514466898313`*^9, 3.765636015807918*^9, 3.765728671946876*^9, 
  3.765840625248329*^9, 3.7689328894745235`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"60967208-70a8-489f-bf4b-424e174cf82a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Gravitino Equation of motion:E\[Psi][\[Kappa]][c]:= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "\[Kappa]c"], "=", " ", 
    SuperscriptBox[
     SubscriptBox["\[Epsilon]", "\[Kappa]"], "\[Nu]\[Alpha]\[Beta]"]}], 
   TraditionalForm]],ExpressionUUID->"9c61f4ec-2fdc-4451-a59d-9db9f2656a0a"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "5"], 
        SubscriptBox["\[Gamma]", "\[Nu]"]}], ")"}], "c"], "d"], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Alpha]"], 
     SubscriptBox["\[Psi]", 
      RowBox[{"\[Beta]", " ", "d"}]]}]}], TraditionalForm]],ExpressionUUID->
  "66215ab7-55b2-4644-94d2-7e9c8cbf830f"]
}], "Subsection",
 CellChangeTimes->{{3.7619984446107626`*^9, 3.761998618171568*^9}, {
  3.7619987133088536`*^9, 3.7619987155988703`*^9}, {3.7633165120614758`*^9, 
  3.7633165124294863`*^9}, {3.7689308554192753`*^9, 
  3.7689308554192753`*^9}},ExpressionUUID->"7bb6d126-367b-4162-ba40-\
d4f6cc2596d9"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"E\[Psi]", "[", "kp", "]"}], "[", "cc", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Epsilon]downupupup", "[", 
        RowBox[{"kp", ",", "nu", ",", "ap", ",", "bt"}], "]"}], 
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]stdown", "[", "nu", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "bt", "]"}], "[", "dd", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"\[CapitalStigma]", "[", "ap", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bt", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"kp", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7619985802341485`*^9, 3.7619987325594473`*^9}, {
  3.761998778921033*^9, 3.7619987800602336`*^9}, {3.762000221120683*^9, 
  3.7620002215307317`*^9}, {3.7689308618338356`*^9, 3.7689308619583187`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"20db1a02-9ae0-4616-9654-c56ee60b7896"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"E\[Psi]stup", "[", "mu", "]"}], "[", "ai", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"RaiseSTIndex", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"E\[Psi]Holder", "[", "mu", "]"}], "[", "ai", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "/.", 
     RowBox[{"E\[Psi]Holder", "\[Rule]", " ", "E\[Psi]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ai", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7113885588580217`*^9, 3.7113886129791174`*^9}, {
  3.737159706297971*^9, 3.7371597127674866`*^9}, {3.761998820245697*^9, 
  3.7619988231425657`*^9}, {3.7620001785992255`*^9, 3.7620001971697044`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"af9c6d15-5468-44d3-aebe-378f92873b61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E\[Psi]stup", "[", "0", "]"}], "[", "1", "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.7620002014698877`*^9, 3.7620002094302845`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"69a22be2-8cb9-48f8-ad13-9db7ee995752"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7620002097698665`*^9, 3.762000248773962*^9, 
  3.7620206186354017`*^9, 3.763294669515007*^9, 3.7633163978333063`*^9, 
  3.763317383808934*^9, 3.7633203738403807`*^9, 3.7633996503048964`*^9, 
  3.7634064919850893`*^9, 3.764456318026292*^9, 3.764456880237712*^9, 
  3.7649508559217787`*^9, 3.7656352042487035`*^9, 3.765739165752406*^9, 
  3.768930838110838*^9, 3.7689308730984125`*^9, 3.768932889573332*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"62d8876e-3aa9-4edc-81d7-9d3ee92dd1fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"E\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "\[Equal]", 
  RowBox[{"-", 
   RowBox[{
    RowBox[{
     RowBox[{"E\[Psi]stup", "[", "0", "]"}], "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.762000251496269*^9, 3.7620002623321323`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"32643cc6-c5b7-46a3-adba-6addc748f3e3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7620002552550445`*^9, 3.7620002628518567`*^9}, 
   3.7620206186448293`*^9, 3.7632946695307574`*^9, 3.763316397847234*^9, 
   3.7633173838248587`*^9, 3.763320373871623*^9, 3.7633996508451653`*^9, 
   3.763406491994062*^9, 3.764456318041935*^9, 3.7644568802533174`*^9, 
   3.7649508559297504`*^9, 3.7656352042626657`*^9, 3.76573916577236*^9, 
   3.768930838186636*^9, 3.768930873193159*^9, 3.7689328896241236`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"c23c2ef4-0087-44d7-926e-4638fbc2879c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"E\[Psi]stupup", "[", "mu", "]"}], "[", "ai", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{"RaiseFermionIndex", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"E\[Psi]stupHolder", "[", "mu", "]"}], "[", "ai", "]"}], "[", 
       
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "/.", 
     RowBox[{"E\[Psi]stupHolder", "\[Rule]", "E\[Psi]stup"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ai", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7113900941898375`*^9, 3.711390151475114*^9}, {
  3.7371597436143637`*^9, 3.7371597764932556`*^9}, {3.761998828972556*^9, 
  3.7619988381928596`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"7f434676-4d60-4383-959e-ea8d8209cbe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"ad3ba858-0460-427e-9a73-10bcc2c75979"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7620002836825633`*^9, 3.762020618675846*^9, 
  3.763294669537919*^9, 3.7633163978712273`*^9, 3.7633173838547783`*^9, 
  3.76332037394978*^9, 3.7633996509947276`*^9, 3.763406492013588*^9, 
  3.76445631805756*^9, 3.7644568802689366`*^9, 3.764950855946705*^9, 
  3.7656352042960815`*^9, 3.765739165796302*^9, 3.7689308382684183`*^9, 
  3.768930873300871*^9, 3.768932889713885*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"3d0edab4-6990-40d6-9444-1871d8ebf30c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E\[Psi]stupup", "[", "0", "]"}], "[", "1", "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.762000270162223*^9, 3.762000275029333*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"3bffeaad-19df-4e49-93c8-2e2b88c3da6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7620002753425636`*^9, 3.762020618692317*^9, 
  3.763294669553537*^9, 3.7633163978861704`*^9, 3.7633173838727317`*^9, 
  3.7633203739653893`*^9, 3.76339965101068*^9, 3.763406492025565*^9, 
  3.76445631807315*^9, 3.7644568802845573`*^9, 3.764950855957675*^9, 
  3.7656352043120403`*^9, 3.765739165821769*^9, 3.7689308383352385`*^9, 
  3.7689308733956184`*^9, 3.768932889768737*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"3076530e-b685-4658-ae90-cc55ff19aec9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"E\[Psi]up", "[", "mu", "]"}], "[", "ai", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{"RaiseFermionIndex", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"E\[Psi]Holder", "[", "mu", "]"}], "[", "ai", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "/.", 
     RowBox[{"E\[Psi]Holder", "\[Rule]", "E\[Psi]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ai", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7113900941898375`*^9, 3.711390151475114*^9}, {
  3.7113902999156046`*^9, 3.7113903122923126`*^9}, {3.737159830451649*^9, 
  3.7371598338584566`*^9}, {3.7619988445257664`*^9, 3.7619988474149475`*^9}, {
  3.7620003045934696`*^9, 3.7620003312825594`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"a829e44d-e633-44f9-92c1-c0cbd69b8118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"01b90384-fae2-4e2a-9e90-81f7539b875d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7620002836825633`*^9, 3.7620206187160664`*^9, 
  3.7632946695821524`*^9, 3.7633163979130573`*^9, 3.7633173839056883`*^9, 
  3.7633203740122924`*^9, 3.76339965104758*^9, 3.763406492044509*^9, 
  3.7644563181356363`*^9, 3.7644568803158*^9, 3.764950855974629*^9, 
  3.7656352043339815`*^9, 3.7657391658456984`*^9, 3.7689308384160223`*^9, 
  3.76893087349934*^9, 3.768932889846529*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"642e6e37-de8f-4f50-b229-75cfd0c78add"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E\[Psi]up", "[", "0", "]"}], "[", "1", "]"}], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.762000270162223*^9, 3.762000275029333*^9}, 
   3.7620003506781764`*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"ca234c34-005d-4652-8ed4-543487bd1997"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7620002753425636`*^9, 3.762000351110572*^9, 
  3.7620206187322593`*^9, 3.7632946695821524`*^9, 3.763316397931555*^9, 
  3.7633173839245896`*^9, 3.7633203740435033`*^9, 3.763399651064927*^9, 
  3.7634064920564823`*^9, 3.7644563181356363`*^9, 3.76445688033145*^9, 
  3.764950855985606*^9, 3.7656352043499393`*^9, 3.7657391658696833`*^9, 
  3.768930838485836*^9, 3.768930873595085*^9, 3.7689328899083633`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"06bc2f56-4977-425a-a79b-8f5648f332b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"I", " ", 
        RowBox[{
         RowBox[{"\[Gamma]", "[", "kp", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
        RowBox[{
         RowBox[{
          RowBox[{"E\[Psi]", "[", "kp", "]"}], "[", "bb", "]"}], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"kp", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bb", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rfield", "[", "aa", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"aa", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.768930879362439*^9, 3.76893094982699*^9}, {
  3.7689309863779297`*^9, 3.768930990345152*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"5ab7ba20-f5ef-4dd3-88ec-e6ebb7a796da"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7689309507518716`*^9, 3.768930993222632*^9, 
  3.7689328899662957`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"a02209ba-74ab-4ec8-a199-11d5963ae445"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Check UD[Field_,\[CapitalStigma][\[Mu]]] := ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[PartialD]", "\[Mu]"], "Field"}], TraditionalForm]], 
  "None",ExpressionUUID->"047be2ec-8829-43d8-a753-3113041c4e68"],
 "   ,   Lap[Field_] := ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[PartialD]", "\[Mu]"], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Mu]"], "Field", " "}]}], 
   TraditionalForm]], "None",ExpressionUUID->
  "db38b415-c818-4f8a-8c9f-bb2cf22429c6"],
 "defined in SpaceTime2.nb. Doesn\[CloseCurlyQuote]t matter in which order \
these are taken when strung together."
}], "Subsection",
 CellChangeTimes->{{3.55718713999227*^9, 3.557187201431784*^9}, {
  3.5571879488795357`*^9, 3.5571879957402163`*^9}, {3.7113858177912416`*^9, 
  3.711385874307474*^9}, {3.7371600993718157`*^9, 3.7371601203114777`*^9}, {
  3.7371602125397243`*^9, 
  3.7371602221970606`*^9}},ExpressionUUID->"bb19045b-74ec-4b3f-8efb-\
4dcdf1cdddaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"UD", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}], ",", 
   RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737160138359976*^9, 3.7371601545178967`*^9}, {
  3.7504701686996937`*^9, 3.7504701689352293`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"d7cc60fc-1c89-46e8-83bc-162b97bc0e68"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7539261972239385`*^9, 3.763417076851428*^9, 
  3.763417269693007*^9, 3.763767536217763*^9, 3.76377901071754*^9, 
  3.7637805254941683`*^9, 3.763817650968686*^9, 3.763850359238091*^9, 
  3.7638519377477617`*^9, 3.763852122258486*^9, 3.763852923782577*^9, 
  3.764951446942822*^9, 3.765636016010379*^9, 3.7657286721343327`*^9, 
  3.765840625873463*^9, 3.76893289003146*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"89085f69-6652-485a-829d-88b1b7a25aed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UD", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}], ",", 
   RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7371601608311815`*^9, 3.7371601624873357`*^9}, {
  3.7504701718274107`*^9, 3.750470171988984*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"e2ba90f7-933e-4baf-86ff-94003cb86798"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7539261972448845`*^9, 3.7634170770225163`*^9, 
  3.7634172698232317`*^9, 3.763767536261073*^9, 3.7637790108723373`*^9, 
  3.763780525630845*^9, 3.7638176509846516`*^9, 3.7638503593694077`*^9, 
  3.763851937929742*^9, 3.763852122340206*^9, 3.763852923933045*^9, 
  3.7649514469607706`*^9, 3.7656360160243397`*^9, 3.765728672149953*^9, 
  3.7658406259359474`*^9, 3.7689328900942907`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"456189b7-277a-41ec-ac58-14ad77d1cbb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lap", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.737160176567008*^9, 3.737160189584123*^9}, {
  3.750470174309432*^9, 3.7504701744532347`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"5c23ec39-3152-4134-a548-13a6cee022f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "0", ",", "2"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "2", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "2", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"3", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.753926197266824*^9, 3.763417077113855*^9, 
  3.763417269904896*^9, 3.7637675363228207`*^9, 3.7637790110139217`*^9, 
  3.763780525765151*^9, 3.763817651000602*^9, 3.763850359510091*^9, 
  3.763851938082343*^9, 3.76385212241957*^9, 3.763852924080904*^9, 
  3.764951446978712*^9, 3.7656360160432897`*^9, 3.765728672149953*^9, 
  3.765840626014057*^9, 3.7689328901581206`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"39ddd836-87c2-4e48-b352-f8d9a6e80893"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Lap", "[", 
    RowBox[{
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
   RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7371601998043656`*^9, 3.7371602303072433`*^9}, {
  3.750470176749444*^9, 3.750470176878984*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"695f96f3-f74a-45cc-9040-a5fd453a90ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "0", ",", "2"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "2", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "2", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"3", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7539261972897625`*^9, 3.76341707719578*^9, 
  3.763417269975926*^9, 3.763767536389716*^9, 3.763779011159937*^9, 
  3.763780525897565*^9, 3.76381765101656*^9, 3.76385035966117*^9, 
  3.763851938231245*^9, 3.763852122503375*^9, 3.763852924233905*^9, 
  3.7649514469976645`*^9, 3.7656360192019386`*^9, 3.765728672165575*^9, 
  3.7658406260921664`*^9, 3.768932890228932*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"cfd3466e-3241-4d9c-ab6c-d39d5c5185ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UD", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Lap", "[", 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"0", ",", "1"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
     RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}], ",", 
   RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7371601998043656`*^9, 3.7371602524808755`*^9}, {
  3.750470178963345*^9, 3.750470179295033*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"0a16941e-45c2-4bd5-b71d-b2d0c4e9a09d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "0", ",", "2", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "2", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"4", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7539261973117113`*^9, 3.763417077276128*^9, 
  3.7634172700410957`*^9, 3.763767536457143*^9, 3.763779011312598*^9, 
  3.7637805260627937`*^9, 3.763817651032525*^9, 3.7638503598114767`*^9, 
  3.7638519383822203`*^9, 3.763852122587142*^9, 3.763852924414764*^9, 
  3.764951447016613*^9, 3.7656360192797337`*^9, 3.765728672181196*^9, 
  3.765840626170269*^9, 3.768932890292761*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"0af9b865-c394-48cf-b564-476aa74b1fcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lap", "[", 
  RowBox[{"Lap", "[", 
   RowBox[{
    RowBox[{"hfield", "[", 
     RowBox[{"1", ",", "0"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.557187324200806*^9, 3.557187338928649*^9}, {
   3.5571873944078217`*^9, 3.557187453704213*^9}, 3.5571875139576597`*^9, {
   3.709575091516453*^9, 3.7095750917194643`*^9}, {3.7371602900941324`*^9, 
   3.737160292891345*^9}, {3.750470182222108*^9, 3.750470183064889*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"55c20961-33ca-4bd1-997b-b3abc6b7ee48"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "0", ",", "0", ",", "4"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "2", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "0", ",", "4", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "4", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"4", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7539261973366375`*^9, 3.763417077384548*^9, 
  3.763417270109384*^9, 3.763767536524322*^9, 3.7637790114597816`*^9, 
  3.763780526195139*^9, 3.763817651051465*^9, 3.7638503599615192`*^9, 
  3.763851938548438*^9, 3.7638521226714163`*^9, 3.7638529245645247`*^9, 
  3.7649514470375543`*^9, 3.7656360192966886`*^9, 3.765728672200142*^9, 
  3.7658406262483735`*^9, 3.7689328903914976`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"7f0372c5-12ac-47da-992b-f8b68c856587"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lap", "[", 
  RowBox[{"Lap", "[", 
   RowBox[{
    RowBox[{"hfieldupup", "[", 
     RowBox[{"1", ",", "0"}], "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.557189173032553*^9, 3.5571891733835735`*^9}, {
  3.7095750947426376`*^9, 3.7095751004289627`*^9}, {3.737160297063618*^9, 
  3.7371602996735845`*^9}, {3.750470185950301*^9, 3.7504701906018677`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"7e0f90e0-ec7c-4752-85c0-9b4c0338f734"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "0", ",", "4"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "2", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "0", ",", "4", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "4", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"hfield", "[", 
      RowBox[{"0", ",", "1"}], "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "2", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"hfield", "[", 
     RowBox[{"0", ",", "1"}], "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"4", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.75392619736257*^9, 3.763417077496119*^9, 
  3.7634172701766376`*^9, 3.763767536590118*^9, 3.7637790116266613`*^9, 
  3.7637805263273487`*^9, 3.763817651071411*^9, 3.763850360110993*^9, 
  3.763851938697173*^9, 3.763852122754319*^9, 3.763852924717882*^9, 
  3.7649514470575004`*^9, 3.765636019314641*^9, 3.7657286722150984`*^9, 
  3.7658406263421125`*^9, 3.7689328904503403`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"4c47de1a-39d4-4ba6-b200-98acfddecc93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5571886193348837`*^9, 3.5571886544198904`*^9}, {
  3.7036111242894974`*^9, 3.703611128972766*^9}, {3.7036111919493675`*^9, 
  3.703611211587491*^9}, {3.709575109461479*^9, 3.709575110109516*^9}, {
  3.7371603078616962`*^9, 3.737160308893036*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b19c0e75-94eb-45b1-97a0-580de32498a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.753926197384509*^9, 3.763417077627214*^9, 
  3.763417270240012*^9, 3.7637675366575203`*^9, 3.76377901178333*^9, 
  3.763780526463683*^9, 3.763817651087369*^9, 3.763850360274336*^9, 
  3.763851938865449*^9, 3.763852122842703*^9, 3.763852924884313*^9, 
  3.76495144707546*^9, 3.7656360193296003`*^9, 3.7657286722253428`*^9, 
  3.7658406264202137`*^9, 3.768932890513172*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"8ea2713a-43cb-4940-a675-3a597b6fe6a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UD", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"\[CapitalStigma]", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703611227692412*^9, 3.7036112418242207`*^9}, {
  3.7371603121589317`*^9, 3.7371603311293654`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"9b558225-fc97-4990-b667-f7762e9a8e51"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{
    RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
   TagBox[
    RowBox[{"(", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.753926197403458*^9, 3.763417077760317*^9, 
  3.763417270308571*^9, 3.763767536721627*^9, 3.763779011935836*^9, 
  3.763780526598383*^9, 3.7638176511013308`*^9, 3.763850360427595*^9, 
  3.763851939045034*^9, 3.763852122920279*^9, 3.763852925032423*^9, 
  3.764951447091446*^9, 3.7656360193425655`*^9, 3.7657286722253428`*^9, 
  3.7658406264985857`*^9, 3.768932890575007*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"bda1ec5e-033e-4310-b665-1d2c1c19fd67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UD", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703611227692412*^9, 3.7036112418242207`*^9}, {
  3.7371603121589317`*^9, 3.7371603390680017`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"d417cf3c-bdfa-4f97-8c26-5bfaa67ae295"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.753926197426399*^9, 3.7634170778934793`*^9, 
  3.763417270374588*^9, 3.76376753679072*^9, 3.763779012084365*^9, 
  3.763780526731686*^9, 3.763817651114297*^9, 3.763850360577063*^9, 
  3.76385193919903*^9, 3.763852123004471*^9, 3.763852925181883*^9, 
  3.7649514471074944`*^9, 3.7656360193535366`*^9, 3.765728672240965*^9, 
  3.7658406265610714`*^9, 3.7689328906234255`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"a914cab9-748d-4c23-9d1a-5637b904b2cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UD", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rfieldup", "[", "1", "]"}], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"\[CapitalStigma]", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703611227692412*^9, 3.7036112853307085`*^9}, {
   3.7095751183109856`*^9, 3.7095751274765096`*^9}, 3.7107863718748116`*^9, {
   3.7371603466787796`*^9, 3.7371603542730474`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"389d6dc8-1a95-40e5-b752-ceed2819e81c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.75392619745133*^9, 3.763417078050023*^9, 
  3.7634172704385567`*^9, 3.763767536902761*^9, 3.763779012233083*^9, 
  3.763780526861515*^9, 3.7638176511312513`*^9, 3.763850360724074*^9, 
  3.763851939348284*^9, 3.7638521230860786`*^9, 3.763852925328905*^9, 
  3.764951447127602*^9, 3.7656360193764753`*^9, 3.765728672256587*^9, 
  3.7658406265766907`*^9, 3.7689328906877675`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"d7567fc2-f123-456a-83f7-08c9fe30e731"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformation Laws", "Section",
 CellChangeTimes->{{3.4398675903125*^9, 3.439867599875*^9}, {
   3.440896666046875*^9, 3.44089674728125*^9}, {3.442439583875*^9, 
   3.44243963178125*^9}, {3.5367192257037*^9, 3.5367192280398335`*^9}, {
   3.536753484160329*^9, 3.536753546275882*^9}, {3.536757704238902*^9, 
   3.536757710183242*^9}, {3.5451474996309147`*^9, 3.5451475298776445`*^9}, {
   3.551718991736784*^9, 3.551719000776301*^9}, 3.551725337994161*^9, {
   3.5594360745480194`*^9, 3.5594361236078253`*^9}, {3.656692850180952*^9, 
   3.656692882738867*^9}, {3.657304404596758*^9, 3.6573044912612743`*^9}, {
   3.6573045252744436`*^9, 3.6573045310218406`*^9}, {3.657304897556283*^9, 
   3.6573049854921637`*^9}, {3.657305035499095*^9, 3.6573051007617607`*^9}, {
   3.6573052504640408`*^9, 3.657305397233671*^9}, 3.657305468476427*^9, {
   3.710965117301177*^9, 3.710965144304722*^9}, {3.711160008763324*^9, 
   3.711160009454363*^9}, 3.711395711891152*^9, {3.711395820764379*^9, 
   3.7113958271737456`*^9}, {3.763417974466936*^9, 3.763417976988555*^9}, 
   3.763767832775503*^9},ExpressionUUID->"a0702185-aeb5-46ac-88d9-\
97cfd42756b0"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qn8DdX/P/BvRaEkZc++ZgtZs1Mp+xqSrCGKSGVXWmRPyS5ZolKWkiJL
WYuQpSzJTpKQrUg1v17T736aO5+ZM3PvnZkz987r+Xic//f/C3feM3PvzJwz
57zfeTo82aTztf/73/96p/rn/2nSvk+Np55q36/pLf/8Hw/26N21S49Oj9bu
8XSnLp2eqtDhun/+46//tB4p//e/FP/8r0JERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERL7w559/KmfOnFHOnTsn
OxQiIiIiIiIiIiKihHX69Gllx44dyooVK5Q5c+Yor776qtK3b1+lQ4cOSr16
9ZQKFSoo+fLlU9KlS6f873//U1uKFCmULl26yA6diIiIiIiIiIiIKKHs379f
KVOmjHLNNdckjcdG0q677jrljz/+kL0bRERERERERERERAmjZ8+eUY3XhhrG
fImIiIiIiIiIiIjIOZ06dYpp3LZfv36yd4GIiIiIiIiIiIgoofz000/KkCFD
lM6dOystW7ZUGjdurFStWlW55ZZbbI3bLlu2TPYuEBERERERESVz9epV5cKF
C2ptbSIiokTx999/Ky+//LJwzBZ1yS5evCg7VCIiIiIiIqIwP/74o1K+fHm1
75omTRplypQpskMiIiJyzNKlS4XjthUqVJAdIhEREREREVGYLVu2KNmzZw/r
v959992ywyIiInLMqFGjhOO2ffr0kR0iERERERERkerSpUvKwIEDlRtuuCFZ
/7VYsWKywyMiInJMs2bNhOO2n376qewQiYiIiIiIKOCuXLmizJo1S8mRI4dp
//WOO+6QHSYREZFjsmbNKsxte/78edkhEhERERERUUDt3btX6d+/v5IpUybL
mtoctyUiokTx/fffC+955cqVkx0iERERERERBcRPP/2krF27VnnrrbeUbt26
KXnz5rUcq+W4LRERJSLU2hTd85555hnZIRIREREREVGCefTRR5V27dopLVq0
UOrWravcddddStq0aSMao+W4LRERJbKHHnpIeM9bsmSJ7BCJiIiIiIgowVx7
7bURjcemTp1aad26tdKrVy+O2xIRUSBkyZLF9H533XXXKefOnZMdIhERERER
ESUYO+O2KVOmVCpWrKhMmjRJ+fXXX9V/9+6773LcloiIEt7u3buF97syZcrI
DpGIiIiIiIgSUGjcFmOzqJVdokQJ5b777lM6deqkTJw4Udm0aZNy+fLlZP+O
47ZERBQEeGcput/17t1bdohERERERESUgK5evRrVv+O4LRERBUHLli2F97vF
ixfLDpGIiIiIiIgoCcdtiYgoCES5bbFmJZQ/iIiIiIiIiMgPOG5LRESJbs+e
PcJ73V133SU7RCIiIiIiIqIwHLclIqJEZ5XbtlevXrJDJCIiIiIiIgrDcVsi
Ikp0VrltP/zwQ9khEhEREREREYXhuK08f/31l7J//37ZYRAlrEOHDqm/MyKr
3LZnzpyRHSIRERERERFRGI7byrF69WqlQIEC6jEeMmSI7HCIEs7QoUPV3xd+
Z/i9UXDt3r1beJ8rWbKk7BCJiIiIiIiIkuG4rbcw969fv37q/K7QMW7RooXs
sIgSTuPGjcPmU/bt25dzbwNq/Pjxwvvck08+KTtEIiIiIiIiomQ4buudCxcu
KPXq1Qs7vpkyZVL27dsnOzSihHPgwAElc+bMYb83/P7wO6Rgadq0qfA+t3Dh
QtkhEhERERERESXDcVtvHD16VClRokTYscWY0q5du2SHRpSwdu7cqb4b0f7u
7rzzTvX3SMHw999/KxkyZDC9x11zzTXK6dOnTf/95cuX1ev0xx9/rIwbN07p
37+/MmrUKGX27NnKN998o34+ERERERERkRs4buu+gwcPKnny5Ak7rqlTp1Y2
bdokOzSihIcxN/24Xd68edWaZZT4tm/fLrzHYRzfyNq1a5UOHTooadOmFf57
vH9r06aNsnnzZo/3jIiIiIiIiBIdx23dhbXauXLlSla7fMGCBbJDIwqMDRs2
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
1KhRowzroRq1G264QVm0aJHssMlDuXLlsvxe1KtXT3aYRETkIY7bRq5ly5aG
x+qee+6RHRoRxah58+aGv2/M4ST/27Ztm/CeVr58eVe2i/FizI0Sbbt3796u
bDvRYD2x9rgtXLhQdkhEJMHPP/+ccOO2IUuXLlXSpElja5/wvvHtt9+WHTJ5
AHmN7XwnRo4cKTtUIiLyEMdtI/PZZ5+ZHqvVq1fLDo+IYrRnzx7luuuuM/yN
r1q1SnZ4ZOG1114T3tP69OnjynbtrOfFHCuy1qFDh6Rjhty2p0+flh0SEUmQ
yOO2gFqVWM9jZ7+wFmjChAmyQyaXmeXh07dNmzbJDpWIiDzEcVv7sLapdOnS
hsepevXqssMjIoe0b9/e8HdetmxZ9TpA/tW0aVPhPQ21vd2AepRW/Szcb8la
3rx5k45ZiRIlZIdDRJIk+rgtbNmyRbntttts79+wYcNkh0wuatOmjeV3IG3a
tMrVq1dlh0pERB7iuK19eBY0O06ch0eUOJBf8/rrrzf8rfu55gkpwnrdmEd9
7tw5V7bbvXt3y74W859b068RffLJJ2WHRESSBGHcFrBez26+WzTWuExcOXLk
sDz/999/v+wwiYjIYxy3tQe5C4sUKWJ4jKpUqSI7PCJymHattrblz59f+eOP
P2SHRwZ2794tvJ9hvYRbKlasaNnXwvsAEtPPW2Y9HqLgCsq4LUycONH2PqZK
lUrZsWOH7JDJYfv377d1/ocOHSo7VCIi8hjHbe3R10nRtuXLl8sOj4gc9uWX
X5r+5seNGyc7PDIwefJk4f2sV69ermwX4/ipU6cWbht5Wjneb02bowTH7MyZ
M7JDIiJJgjRuC127drW9n0WLFlV+++032SGTg6ZNm2br3K9fv152qERE5DGO
21pDX1ubb0/b3KpNTkTyFS9e3PB3nylTJuX8+fOywyOdRx55RHg/W7BggSvb
XblypWU/q1KlSq5sO9HkyZMn6ZiVLFlSdjhEJFHQxm3R3yhTpoztfcU4LyWO
1q1bW57zNGnSKFeuXJEdKhEReYzjttZEa5cwv4uIEtNrr71m+tsfM2aM7PBI
p1ChQsL72cmTJ13Zbu/evS37Wvy+WDtw4EDYMevZs6fskIhIoqCN28LWrVvV
XOx295e5ZBJH9uzZLc93zZo1ZYdJREQScNxWDHlt8+XLZ3hsbrjhBuXs2bOy
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
oYLKzpqsUqVKOb5dfd/Q7TkvWsjxod02+lXkL1u3bjX8LmJ+1tmzZz2Nxerd
G9YikFxBHbfVrlmwalgfjbUzfoLnaW29Cv1vvXXr1moOdjNYDz506FD174b+
Her4fPvtt+qfI2e62fHwci24HnLB2Kkjh7l3XsP1zM73Ce/co4EcHdpnQLef
gZEvQLQfbua01NfX1jfkcnUanrNjWWuPc+NVPiKzOVCh9sMPP3gSh9+g9jry
W+D9Bua+4xmczfmGY1uxYkXlkUceUd59913Zp50c9uyzzwqvL126dJEdYsIp
Xrx42NjOvffeG/ZMJyPX3auvvmp4/vPly+d5LOR/nTt3Fl438H3yi6D2oYKs
aNGils/xbsxHQX9Fuw2v1oJifCdz5sxJ202fPr1y4sQJT7ZN9qHvqZ2PrW0z
Z870NBbkPxL9Pryam0Tmgjhu++mnn0a0v9GOs7ll6tSpSrp06QxjxfN+JLWe
MS9Pe70oUKCAmtsHzx9mx6NFixYu7p0YajDZOWeoE+UlzE01u+5qG94B4Hkv
GsiLoP0sfI/d1K1bN+G+uJl7R5/XT9/cGivCeibkjcXz+ldffaWsWrVKmTNn
jrrGzag2i7ah3+0FPHeZzYFCw9paIooergOYfx/UnL145hFd6+rWrSs7xISj
fWeIuXzad7QYX5KhUqVKhue/a9euUuJxAmusuqdBgwbC64Zf1mcHuQ8VZNr1
imYN32GnNW7cOKwPiPlHbsMzDPLteNFvsoM1ncUefPBBw++jl7ll8LyrzYOs
b3gmOX36tOm/x/d6165d6pyvcePGqevwUM9x9uzZap86qM/TTgvauC2+V7iv
2t3XNm3ayA45jGgeDHLYRHM/wNgUaheGPidr1qzCY/LMM8+4sGf2PP/887bO
22effeZpXKivaCeuVq1aRb2NMmXKJH0Ocny4nQeiSJEiwn1BvTC33H333cJt
Hzx40LVtm7Gao+9VfVb9u3t9c3MeNFEiQe6jxYsXq79dzG/EuxfMTwm9o8H/
4jkWa9hxTcIcrIkTJ6rrHtEvSlRWtT/z588vO8SEg9wIZsdbxhwXPF8gl75R
PFh7G4+CVGNVBu0zqlHDdVO2oPehggzj5VZ9NIx1OgnPCdo6n9WrV3f0883o
5748/fTTrm6PNZ1jg/zaRscF64u9GtO2yvWIY2YEz4vIHaOtrWrU8GyNMTWs
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
bduULFmyCM/bTTfdFNXYYoMGDZI+I9bctlgTYFTLqVmzZq69g3ACazpHzmxe
MMbq3GAnt60T7xz0kCfXbHuYKxVva9PchlpkmDMbSR5Yfevfv78rtTjN4kXe
WuQfKV26tDDvu1nDWnXkscJ31K/s5HCdM2eOK9ueO3eucLterGUwg++anXMs
I7ctIDeD6LcUSZ4k1JrNmDFj0r/F+hfkDvOK1ZpCN9du4p2erG2bwbioKCY3
cyLhuqd/t65tbtVDJopH+lySmJviJTz727lPYW5aPOnUqZNwf5iLLHb6Onoy
a0iIcuyVK1dOWlzRYI1V91nNK8b7eK+wD0WRwjwws/UF2tanTx/b89Xw97Rj
YZHO3QlB37J3795KypQpw2LB723EiBFRfaaXWNM5cjgmZrFevHjR8e3p83no
m1vvm/r27SvcrhtjxX4zatQoNRdLqA0ZMkQZMGCA2kfAuDbey1SpUiVsTCjW
hvp7tWvXVnP6YGwN29TGEGnDPbdbt27q+1DkPsC691jjxZxzHBu89/E7q/wr
mIOJ98lusOqbffjhh65s1w70FazOs6zctiHoZ5nFlj17dlufgdzg2vrdeOfk
Zb0pqzWFOXPmdG3byDMteh/jdT3iEDxviY7JBx984Mp28X4J12vR933Tpk2u
bJso3mC9sb4+JK4nuP9jDdjy5cs9iaFQoUKW9yqszYyn9dGoTy3aHz/WQok3
+vW6O3bskBYL5oObnWsna+t4gTVW3Yd15KL99HI+BftQFI2TJ09a5qJGu+OO
O9T7ndX8L32dp0jXxWEOKsZEjPLmoz8cL8/+rOkcOVG8eMfgNP1aH33D+Kob
MNYno2/tJ5jLb3XNCVLDO4KxY8fGTe1b/RpPo1a9enXXti/KEY0xIrxTlwH9
W/27RqMmK7etVt26dU3j27x5s/DfYj2fdm4l1il6vXbDak3hI4884tq2rXLb
tm/f3rVtm8G6JqxvMovJzTU+Vnni/ZJjnMgPvv76a+HvBfkJ8Jtxe7zUao5d
qPmtryCCepHavD36hudvip7+u4vnrVjW1MYKYwJm57phw4bS4ooUa6x6Azm7
zfYT/VLUCfMC+1AUi6tXr6pjWOnSpbP8HqEu2GuvvWa6FlL//L5u3TrL7ePZ
ZOPGjWrOeKOaGpkyZVLefPPNuHrny5rOkTOrCYrmxrs+3NNFx2jZsmWObxNQ
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
VnxerHVYkbNeFJMTa3zeeOMN09olqMO8bNmymLdBFERYX4Vchm3btlXn4OL5
0631AnpW6wNDzc1aym4zyskaatOmTZMdXtwwmhs0ZMgQ2WGpOZHMzi/mNfod
a6y678033zTdx9atW3seD/tQ5AfaOeh4j3nx4kXZIXmONZ1jIxrzdvL7hHdZ
omuXW+/eRHXXQm3MmDGubJvIKffee6/wO4w5RG5APjrRdu3mZdLmY/Gyhiw5
wyq3Ld6PuaVMmTLCbdtZF4I5Ltp1F1u2bIkpppEjR7o65oK+udln416KegVE
FH+s1geGGnJDxivRfAk8y5A1szmhflhjgXX8ZucXc4H8jjVW3VejRg3TfURN
V6+xD0V+kD179qTziByeQcSazrGpXLmy4b44WcsW68JE60KwhsAtVjmM0Jjb
lvxOlM8EDeNIbsCaN9F258yZY/kZyD2qrUnoh/kiZJ9Vblu048ePu7LtX375
RXjvwHpGO7ltkT8s9G/wLhefGwvkaRQdj2jX+KBmgei9cJ06daTXpCGi6N13
332W11PULYn3eThmeeRQg9jrNdLxCM9WXt5rI4H7lNlaEHy//Y41Vt2FOaZm
3w83a9mIsA9Fsh08eDDs3A8cOFB2SFKwpnNskNPLrD/slJ07dwrPEa6nbjhw
4IDl87GsewhRJJD/WfQ9njJliuPbxLpR7btBo4a1O1Ywt1H7b5AbjeKH1ZpC
3PvcqguG/K6ibWM9rh3t27dP+jdYLxcL5EkS1UxHf+Xnn3+O+HO///570z4d
njv69evn2VpuInIenkkxbmn1XNqkSRPZocZMtE76hRdekB2e7xmN96Bunl9k
zZrV8Ny6VQfcKayx6j7RuIysuW3sQ5FsM2fODDuPbq5T9DPWdI5N3rx5DfcJ
/90potqjaLjGuwH5Aa2ej72uaUkUDe18QaM2e/Zsx7f5ySefCLdptw+BPIKh
f4Pxrlhzi5K3rNYUIp+7W5CPVrTtESNGWH4G+kHaPiZqvcTi66+/FsYUTb8V
z3Nm+Z5y586trF69OqaYiUi+xx9/3PKZFA35s+Md5mSa9S8yZMigXLp0SXaI
vpYrV65kx81PuU8rVKhgeG6Re93PWGPVXXi+N/vdI+eVLOxDkWzIbxE6j1hT
8/vvv8sOyXOs6RwbvAtC/Eb7Vb58ece2Y5WHfcmSJY5tS8tqPRrG4Z2svUbk
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

    "], {{0, 240}, {1390, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{420.5864583333327, Automatic},
  ImageSizeRaw->{1390, 240},
  PlotRange->{{0, 1390}, {0, 240}}]], "Subsection",
 CellChangeTimes->{
  3.750474015652021*^9, {3.763767657226453*^9, 
   3.763767658441578*^9}},ExpressionUUID->"1817741d-903d-47eb-8ece-\
1a088ad27611"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Da", "[", "aa", "]"}], "[", 
     RowBox[{
      RowBox[{"hfield", "[", 
       RowBox[{"mu", ",", "nu"}], "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "=", " ", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"\[Gamma]stdown", "[", "mu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], ")"}], " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "nu", "]"}], "[", "bb", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], " ", "+", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"\[Gamma]stdown", "[", "nu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], ")"}], " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "bb", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"bb", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4409037866875*^9, 3.4409038785*^9}, {
   3.44090461503125*^9, 3.440904621953125*^9}, {3.440904947515625*^9, 
   3.440904969359375*^9}, {3.4409051451875*^9, 3.44090525384375*^9}, {
   3.440909808765625*^9, 3.44090981728125*^9}, {3.4409099853125*^9, 
   3.44090999059375*^9}, {3.44091901765625*^9, 3.440919020578125*^9}, {
   3.4409964151784945`*^9, 3.4409964182566195`*^9}, 3.441069709609375*^9, {
   3.442440919984375*^9, 3.442440947984375*^9}, {3.4424410274375*^9, 
   3.4424411276875*^9}, {3.442441159421875*^9, 3.44244115990625*^9}, {
   3.44244284021875*^9, 3.442442949609375*^9}, {3.442442988578125*^9, 
   3.442443047015625*^9}, {3.442443149421875*^9, 3.442443226625*^9}, {
   3.442443355078125*^9, 3.442443372625*^9}, {3.44244341146875*^9, 
   3.442443418265625*^9}, {3.442443546984375*^9, 3.442443554828125*^9}, {
   3.442443894265625*^9, 3.442443895796875*^9}, {3.44244397071875*^9, 
   3.44244397115625*^9}, {3.442444024296875*^9, 3.442444120140625*^9}, {
   3.44244496321875*^9, 3.44244504725*^9}, {3.442445196453125*^9, 
   3.44244519890625*^9}, {3.442458397421875*^9, 3.442458398078125*^9}, {
   3.44250559428125*^9, 3.442505594546875*^9}, {3.44250981*^9, 
   3.4425098115625*^9}, {3.442511247578125*^9, 3.44251124778125*^9}, {
   3.442512580578125*^9, 3.44251260809375*^9}, {3.44251270825*^9, 
   3.442512712421875*^9}, {3.44267159815625*^9, 3.44267164171875*^9}, 
   3.442963751390625*^9, {3.443374553421875*^9, 3.443374554234375*^9}, 
   3.443397868109375*^9, {3.5067783147218065`*^9, 3.506778315469849*^9}, 
   3.5067791851785936`*^9, {3.520647102794715*^9, 3.5206471039717827`*^9}, {
   3.5206472271208267`*^9, 3.5206472462169185`*^9}, {3.520647382525715*^9, 
   3.520647395004429*^9}, {3.5367565781434927`*^9, 3.5367565787995305`*^9}, {
   3.5367566723238797`*^9, 3.5367568352551985`*^9}, 3.536756995713376*^9, {
   3.545148998884667*^9, 3.5451490369018416`*^9}, {3.5486894340328465`*^9, 
   3.5486894617984343`*^9}, {3.5486898294514627`*^9, 3.548689830962549*^9}, {
   3.5517191369728885`*^9, 3.5517191438042793`*^9}, {3.5517253776874313`*^9, 
   3.5517253789575043`*^9}, {3.5523159209725757`*^9, 3.5523159229646893`*^9}, 
   3.7114227919129744`*^9, {3.7114303678206325`*^9, 3.7114303706097918`*^9}, {
   3.711716375093913*^9, 3.7117163758239546`*^9}, {3.711843211531074*^9, 
   3.7118432118230906`*^9}, {3.71200756535756*^9, 3.712007566125604*^9}, 
   3.712062662793547*^9, {3.7504743882031507`*^9, 3.750474407026243*^9}, {
   3.750474921215657*^9, 3.7504749373810577`*^9}, {3.7505090721347995`*^9, 
   3.750509085846735*^9}, 3.750526557021371*^9, 3.750536831138297*^9, 
   3.763767676368286*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"3594755f-f61d-4860-a2fb-ccd95e1f9169"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Da", "[", "cc", "]"}], "[", 
     RowBox[{"htrace", "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], " ", "=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Eta]", "[", 
        RowBox[{"mu", ",", "nu"}], "]"}], 
       RowBox[{
        RowBox[{"Da", "[", "cc", "]"}], "[", 
        RowBox[{
         RowBox[{"hfield", "[", 
          RowBox[{"mu", ",", "nu"}], "]"}], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]}], " ", 
      ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7505118512049007`*^9, 3.7505118924131927`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"ff90f72d-5d6a-4001-aa60-9a2be038fdaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Da", "[", "1", "]"}], "[", 
  RowBox[{"htrace", "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7505119066957054`*^9, 3.750511912244731*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"a3182889-eda8-4e8a-b410-3962b1b57bb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
   RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7539261978313456`*^9, 3.763767686371999*^9, 
  3.7637790124098063`*^9, 3.763780527059115*^9, 3.7638176511731405`*^9, 
  3.76385036089686*^9, 3.763851939513442*^9, 3.763852123175618*^9, 
  3.763852925502281*^9, 3.764951447174616*^9, 3.765636019408389*^9, 
  3.7657286722878294`*^9, 3.7658406266547976`*^9, 3.768932890900784*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"f6645774-9878-422b-84e4-139de89b76af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DColor", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"mu", ",", "nu"}], "]"}], "'"}], "[", "t", "]"}], "]"}], " ", 
    "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Da", "[", "Color", "]"}], "[", 
           RowBox[{
            RowBox[{"hfield", "[", 
             RowBox[{"mu", ",", "nu"}], "]"}], "[", 
            RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "/.", 
          "AdinkraReduce"}], "/.", "TemporalGauge"}], ",", "t"}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Color", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7111642994797387`*^9, 3.7111643860246887`*^9}, {
  3.71116538155863*^9, 3.7111653936173196`*^9}, {3.7111655855452976`*^9, 
  3.71116558768242*^9}, {3.711165720831035*^9, 3.7111657746961164`*^9}, {
  3.7111658925908594`*^9, 3.7111659100938606`*^9}, {3.7111659532613297`*^9, 
  3.711165964095949*^9}, {3.7111661704557524`*^9, 3.711166175682051*^9}, {
  3.711166416651834*^9, 3.7111664467495556`*^9}, {3.7111667797356014`*^9, 
  3.7111667803906384`*^9}, {3.7113967945240746`*^9, 3.71139679758925*^9}, {
  3.7114228343934035`*^9, 3.711422841005782*^9}, {3.7114228938768063`*^9, 
  3.711422900277172*^9}, {3.7504751286145773`*^9, 3.750475139150803*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"bbc230e0-b673-4cb2-917a-8321eed9b0ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintDColor", "[", 
   RowBox[{
    RowBox[{"hfield", "'"}], "[", "t", "]"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DColor", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"hfield", "[", 
             RowBox[{"mu", ",", "nu"}], "]"}], "'"}], "[", "t", "]"}], "]"}], 
         "[", 
         RowBox[{"[", "Color", "]"}], "]"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", "ap_", "]"}], "[", "c_", "]"}], "[", "t", 
           "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Psi]", "[", "ap_", "]"}], "[", "c_", "]"}], "'"}], 
           "[", "t", "]"}]}], "}"}], ",", "Simplify"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Color", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
    "fields"}], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.7111645574354925`*^9, 3.7111645699712095`*^9}, {
  3.7111646601143656`*^9, 3.7111646956723995`*^9}, {3.711165016059725*^9, 
  3.71116508975994*^9}, {3.7111651864034677`*^9, 3.7111652049845304`*^9}, {
  3.7111652473169518`*^9, 3.711165256065452*^9}, {3.7111657311796274`*^9, 
  3.7111657569270997`*^9}, {3.711167161224421*^9, 3.7111672595240436`*^9}, {
  3.7111673443098927`*^9, 3.711167345364953*^9}, {3.711396805714715*^9, 
  3.711396808857895*^9}, {3.7114228544625516`*^9, 3.711422914006957*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"5be685a7-62bf-4192-9cbe-94edd282dea8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "12"], "2"]}]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "11"], "2"]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "14"], "2"]},
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "13"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "22"], "2"]}]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "21"], "2"]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "24"], "2"]},
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "23"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "32"], "2"]}]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "31"], "2"]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "34"], "2"]},
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "33"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "12"], "2"]}]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "11"], "2"]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "14"], "2"]},
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "13"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "12"]},
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "11"]},
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "14"]},
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "13"]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "14"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "22"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "13"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "21"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "12"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "24"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "11"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "23"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "11"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "32"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "12"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "31"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "13"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "34"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "14"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "33"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "22"], "2"]}]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "21"], "2"]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "24"], "2"]},
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "23"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "14"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "22"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "13"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "21"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "12"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "24"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "11"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "23"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "24"]}]},
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "23"]},
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "22"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "21"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "21"], "2"], "-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "34"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "22"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "33"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "23"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "32"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "24"], "2"]}], "-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "31"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "32"], "2"]}]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "31"], "2"]},
          {
           FractionBox[
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "34"], "2"]},
          {
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "33"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "11"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "32"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "12"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "31"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "13"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "34"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "14"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "33"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "21"], "2"], "-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "34"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "22"], "2"]}], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "33"], "2"]}]},
          {
           RowBox[{
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "23"], "2"], "+", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "32"], "2"]}]},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              SubscriptBox[
               OverscriptBox["\[Psi]", "."], "24"], "2"]}], "-", 
            FractionBox[
             SubscriptBox[
              OverscriptBox["\[Psi]", "."], "31"], "2"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "31"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "32"]}]},
          {
           SubscriptBox[
            OverscriptBox["\[Psi]", "."], "33"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             OverscriptBox["\[Psi]", "."], "34"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.75392619788021*^9, 3.7637676908177834`*^9, 
  3.763779012599883*^9, 3.7637805272213783`*^9, 3.7638176512190533`*^9, 
  3.76385036107623*^9, 3.7638519396767397`*^9, 3.763852123266367*^9, 
  3.7638529256912937`*^9, 3.7649514472202573`*^9, 3.765636019451275*^9, 
  3.7657286723190727`*^9, 3.7658406267641726`*^9, 3.7689328909944725`*^9},
 CellLabel->
  "Out[86]//MatrixForm=",ExpressionUUID->"e9a64a62-a7b2-45b0-8fbe-\
a09473c6957e"]
}, Open  ]],

Cell["check symmetry", "Text",
 CellChangeTimes->{{3.536930469244959*^9, 3.5369304708770523`*^9}, {
  3.559437895570176*^9, 3.5594378961532097`*^9}, {3.7114229263356624`*^9, 
  3.7114229270157013`*^9}},ExpressionUUID->"4465f086-7e0b-4223-9d3c-\
45b0290483a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Da", "[", "aa", "]"}], "[", 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"mu", ",", "nu"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Da", "[", "aa", "]"}], "[", 
      RowBox[{
       RowBox[{"hfield", "[", 
        RowBox[{"nu", ",", "mu"}], "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7111677387304525`*^9, 3.711167783014985*^9}, {
  3.711422929457841*^9, 3.711422937497301*^9}, {3.7505081196240835`*^9, 
  3.750508139853622*^9}, {3.750508863391631*^9, 3.7505088648440113`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"87641264-a408-4b90-b4a5-d344d2964785"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.753926197902126*^9, 3.763767694885322*^9, 
  3.7637790127504168`*^9, 3.763780527348205*^9, 3.763817651242953*^9, 
  3.763850361229905*^9, 3.7638519398315897`*^9, 3.763852925850423*^9, 
  3.7649514472382097`*^9, 3.765636019474214*^9, 3.765728672334693*^9, 
  3.7658406268266315`*^9, 3.768932891035139*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"887affa1-3f4d-4d01-840d-9c5223dff5ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DColor", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"mu", ",", "nu"}], "]"}], "'"}], "[", "t", "]"}], "]"}], " ",
      "-", " ", 
     RowBox[{"DColor", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"nu", ",", "mu"}], "]"}], "'"}], "[", "t", "]"}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7113968485791664`*^9, 3.711396891845641*^9}, {
  3.7113969304148474`*^9, 3.71139696140662*^9}, {3.711397014172638*^9, 
  3.7113970153867073`*^9}, {3.71139705511798*^9, 3.7113970880308623`*^9}, {
  3.711397173584756*^9, 3.711397218552328*^9}, {3.711422946122794*^9, 
  3.7114229975437355`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"ba740a32-435a-491e-a057-0ab5388e5510"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7539261979270597`*^9, 3.763767696837034*^9, 
  3.763779012900181*^9, 3.763780527481818*^9, 3.763817651256918*^9, 
  3.763850361392242*^9, 3.763851939982337*^9, 3.763852925996593*^9, 
  3.7649514472551675`*^9, 3.7656360194901714`*^9, 3.765728672350314*^9, 
  3.76584062690475*^9, 3.768932891097624*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"c6c9341d-2927-4da8-8b6f-775b857aa868"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qn8DWXfP/CnxB3xF8m+bxW39bFHUVHZhUiILBVZW+xuWyFLZKeQLOG2
RPYspWyVXXaRhBb7rpp/n+k5p5nzO7OdMzPXnJnP+/W6niXMfM+cmTMz1/e6
vleeFzs90/bO//mf/3nt7r/+xzMtu1Xp2rVlj/r3/vX/NOz42isvdWzT+umO
r7d5qU3Xci8m++s/fvNX2/6v//mfu/763xIRERERERERERGRz/3555/SuHHj
pGzZsknoFo1syZIlk/Llyyc9/fTTUsOGDaUSJUpIqVOnjvp30f71r39JAwYM
kG7duiX6oxEREREREREREREREREREen68ccfpapVqybJfefJk0caNWqU9N13
30k3b96M+m9PnTolzZw5U8qdO3fU/HmRIkWkI0eOuPyJiIiIiIiIiIiIiIiI
iIiIzJkzZ46ULl06Va67QoUK0n//+1/p999/N72dGzduSEOHDpXSpk2bJHeO
OewHDx508FMQERERERERERERERERERFZ88cff0itWrVS5bfTpEkjzZo1K67t
fv3111Ly5MmT5M4zZ84s/fDDDzZFT0RERERERERERESUuG7fvi1dvnzZ0vw1
IiIishfuw02aNFHltUuWLCkdPnzYlu0PGjQoas326tWr27J9IiIiIiIiIiIi
IqJE9dNPP0lly5aV+81TpUolTZ48WXRIREREgYMxbA0bNlTls1955RXN9ctj
gbx8xYoVo+bO453PTkRERERERERERESUqL799lspe/bsqn7z8uXLiw6LiIgo
UG7duiXVq1dPdT/u1KmTI/v66KOPoubN//3vfzuyPyIiIiIiIiIiIiIir7p6
9arUu3dv6V//+hf7zYmIiARr166d6l7ctm1bx/a1a9euqHlztN27dzu2XyIi
IiIiIiIiIiIir0Ct1xkzZkg5cuTQ7DN/8MEHRYdJREQUGDNnzlTdh5s3by79
+eefju0Pc9uTJ08e9RmgZ8+eju2XiIiIiIiIiIiIiEi0gwcPyn3hGTNm1MyX
M29ORETkrj179kipUqUK34PLlSsnr3PutKJFi0Z9Bqhbt67j+yYiIiIiIiIi
IiIicsOZM2ekjRs3StOmTZPrvubNm9cwV868ORERkbsuXbokFSxYMHz/vffe
e6Xvv//elX2XLVs26jNAqVKlXNk/EREREREREREREZFdWrduLbVo0UJq1KiR
VKNGDalkyZJSmjRpLOXImTcnIiIS46WXXlLdf+fPn+/avrNmzRr1GSBz5syu
xUBEREREREREREREZIc777zTUj48ZcqUUtOmTaUuXbowb05ERCTQ119/rbqP
t2nTxrV9Y31zrWeIXLlyuRYHEREREREREREREZEdzOTNkydPLlWoUEGaOHGi
dOHCBfnfffzxx8ybExERCfLnn39KZcqUCd93M2TIIJ0/f961/R87dkzzGQDr
qxMRERERERERERERJZJQ3hy58SxZskjFihWTqlatKs9ZmzBhgrRt2zbpxo0b
Sf4d8+ZERETiTJkyRXXfHT9+vKv7X758ueYzQP369V2NhYiIiIiIiIiIiIgo
Xrdv347p3zFvTkREJMaVK1fk+eWhe+6///1v6ffff3c1hlatWmk+A4waNcrV
WIiIiIiIiIiIiIiIRGHenIiISIzRo0er7rmrV692df9Y2zx9+vSazwBHjhxx
NR4iIiIiIiIiIiIiIlGYNyciInIf5pXnzp07fL8tXbq06zHo1WgvWrSo6/EQ
EREREREREREREYnCvDkREZH7Iu+/s2fPdj2GF154QfP+P2fOHNfjISIiIiIi
IiIiIiIShXlzIiIi95UqVSp8r82ePbt0+/ZtV/d/7NgxKVWqVJr3/j/++MPV
eIiIiIiIiIiIiIiIRGLeXBzkJI4ePera/jZt2iR9+eWXtrSdO3e6FjcRkd8c
PHhQda8dPHiw6zFUq1Yt6n3/jjvukNauXWvrvnbs2GHb/WfLli22xqbn+PHj
HD9AREREREREREREFBDMm4vx+eefSwUKFJCPcf/+/V3Z57/+9S/d79pK+9//
/V9XYiYi8iPkyZW/qSdOnHB1/zNmzND8fe/UqZPt+/v3v/9t2/3n//2//2d7
fNG8/fbb8v5wr8Y9m4iIiIiIiIiIiIj8jXlzd2HeWo8ePaQ777wzfIwbNWrk
yr6ZNyci8obSpUuHf09Rr91Nv/zyi5QhQ4aov+2VKlWSrl+/bvs+EzFvXq9e
vfA+cc/u3r07554TERERERERERER+Rjz5u65fPmyVLNmTdXxzZgxo3T48GFX
9s+8ORGReD/88IPq9/Stt95ybd+///67VLdu3ai/6xUqVJDvU05IxLw51n/P
lCmTat+4hzt1jIiIiIiIiIiIiIhILObN3XHy5EmpWLFiqmOL/vjvvvvOtRiY
Nyc9yKfhPN20aZM0d+5cafjw4XJthGHDhknTp0+Xli1bJn3//feiwyRKeB98
8IHq93Tfvn2u7BfXeOPGjaP+ppcpU0a6ePGiY/tOxLw57NmzRx7fptx/0aJF
5d9KIiIiIiIiIiIiIvIX5s2dh1xjnjx5VMc1ZcqU0rZt21yNg3lzinTo0CF5
rmvx4sWlZMmSmfrucS6/+OKL0oIFC+Q8HBFZ06xZs/D1lDlzZlP/BrXTd+zY
Ic2cOVMaOnSo1L9/f3lcS69evaSBAwfK41wmTJggffrpp3Ku98aNG6p/f/bs
Wal69eqav+fnz5934qOGJWreHDC+LbKufd68eaXjx4+7GgeRX5w7d046cOCA
tHXrVmnNmjXSkiVLpM2bN0snTpyQbt26JTo8IiIiIiIiIiIKMObNnYU6r7ly
5VIdU6yTunDhQtdjiZY3x5z3N954w3IbPXq06/GTPY4ePSoNGjQoSf2DWBpy
R2PHjpWuXr0q+mMRJYycOXOGr6FGjRrp/l2sRd6pUycpRYoUlq5N/P3y5ctL
/fr1k6ZNm5ZkznSoYf65k/PMQ0aMGBHTvSbaOuxu580BdTgw3k0ZB+7t+D0l
In3Ij3fr1k166qmnpGzZsun+dt1xxx3y7xXG89WoUUMe24cxfkRERERERERE
RG5g3tw5R44ckXLkyJHkmGJeoAjR8uacNx4cP//8s9SuXTvprrvu0rzes2bN
KrVs2VKey4ra7JhTPmrUKKlz586680Vxnq9bt070RyTyPIylUl4748eP1/y7
qFWSLl062+ZpK9s999wj14v3umi/OyLy5vDf//5XHvemjCV79uzyvZ6I1DB3
HDlvvEfY8ZuF9REGDBjg6vpGRERERCRJFy5ckPuTiIiIiIKCeXNnnD59Wsqd
O3eS4/nKK68Ii4l582BCfechQ4bIuaZo13iaNGnkuutr166V/vjjD91tITf+
yCOPRN0O8kmYH3rz5k2XPhlR4pk6darqutHLAb3++uuqv/vQQw9JHTt2lMaM
GSPfu5cuXSrXLkHt9nHjxsl/VrhwYcP8E3LR+/fvd/FTx85LeXMYOXJkknjy
5csn18EnCro///xT/j2qUqWKPG/ciTE/aPidmzdvnuiPSx6BZ1fU/v/hhx/k
9TNwHhIREZE9sL7k3XffLT+DNWjQQHQ4RERERK5g3tx+V65ckfPRkcfy6aef
FroeNPPmwfPJJ58kWSdA2Z599lnpzJkzlraJc7hLly6a26xVq1bc65NOmjRJ
fifr27evdPv27bi2ReQlzZs3D18rqEWs56WXXlJdW1gXAdcF6kYgp96nTx+p
Z8+ecr68bt26ute6smF9DvR/JAKv5c2hQ4cOSWIqVaqUfO8nCiqsWVC5cmXd
3x785lWvXl3+/UItmzlz5sjPKYsWLZLv+6h1g9+3Rx99VLc2Tqg9/vjjnH/u
Uzdu3JBrFqDG/+LFi6WJEyfK645g/HH9+vWlSpUqye+o6dOnTzJGA2sBIH9O
RN6AdTpQu8xPrUePHtLgwYPlulGzZs2SVq5cKY/dIfKjtm3bquZcEBEREQUB
8+b2Qo4PfYKRxxH1JS9duiQ0NubNgwNzbZBT05rvhdrCS5YsiWsf6APR+t1A
bi/WMSLoJ02WLFl4W1hXmMgvlGubN2zYUPfvbty4MUldcKsN9dhTp06d5L+n
SpVKzld5nRfz5pjbWKdOnahj4zjOh4IG1wNy4PhNibwm8AxSoUIFuU4D1qiw
4vz589LcuXOlZs2ahec4RWvJkyeX8/CXL1926BOS01A7oGnTpnI9I7x32rE+
yYwZM0R/LCL6P9GeQ/3a0qZNKz388MPy2FeMDUMtDKJEV6BAgfA5jnczIiIi
oiBg3txebdq0SXIMM2fOLJ08eVJ0aMybBwTGZ0TL6YQa/syOMRzIi+vNLWvf
vn1M2x0xYoRqO164dojsgPmYynN77Nixhv9mz549cl2IPHnyGObQ0Vf3wAMP
SM8//7xct3379u3ydbpjxw4pQ4YMSf4+tmcmBpG8mDeHq1evynXzI2Nr3bq1
6NCIXHP48GE5PxB5HSCXjWvhyJEjtuwHzwEtWrTQ/Q3MmjWr9Nlnn9myP3JP
5NoldrWDBw+K/mhE9H+ClDePbBgLjvoYWDMN7wFEiQZ1FOzo4yEiIiJKNMyb
2wd5imjHMN55vXZh3tz/0Eett75xy5YtbV0rYNeuXbq/H1gz3apy5cqF/z1y
gER+MW3aNNX1sXfvXkv//tq1a/I1jn/37bffSps3b5ZrFGNtbaN5zvg30XLn
mA+6bt26eD6Wo7yaNwfUuo9WS3rKlCmiQyNy3L59++S665HnP9aicKpWLcYR
oYa71jMHnnNR850Sh944z1hblixZRH8sIlIIct5c2TD2C3UJP/30U7lWC1Ei
mDlzpuo8XrBggeiQiIiISLDvv/9emj9/vvTll19KFy9eFB2OY5g3t8c333wT
NS/dpEkT0aGFMW/ub5hbEy0vFmqNGzeW67fbDXU1tfaJObJW1vxFX7uytnzX
rl1tj5dIlBdeeCF8bt9///2OXI963n//fVuuUzd5OW8OvXr1ShIfakpjrj+R
X2G8TqZMmVTnPZ4/Fi5c6Pi+b926JY8B1HruwFgW1uhOHNWqVbM9N4UaLUTk
HXnz5pXHWYUa1mLAOkIpUqRwJV+NfWGfyhisNrtjxbM35lxwfR/yOtQPCp23
6Kf59ddfRYdEREREAty4cUNesxfj1JXPtXg+6NChg2f7lePBvHn8Lly4IL8P
Rh47vGN56bmSeXP/+vnnn6V8+fJpXseoo4rfNydgfJHeb8iAAQNMbyuyRjvm
cxL5Ra5cucLndv369V3fP+a2lChRIup1+uqrr7oejxlez5vfvHlTKlasWJIY
8UyA9ZmJ/Gb//v1JcuYYP3f69GlX4+jXr5/mcwfe25CPIO/76quv5BrG2bNn
l8+r9OnTS2nSpDFcl0Sv8bsnShwYC/Xjjz/KdZRmzZolP49i3Y14ctJ4Bps0
aZI8pvz69eu2xfrbb7/JtVawJgjm4A4bNkzq3LmzXCstWv0hM61gwYKujDkj
ilX+/PnD52uRIkVEh0NEREQCYG6QXn1jNDwT+62mEvPm8XvmmWeiHrt58+aJ
Dk2FeXN/Qu3msmXLal7DqVKlkvsjnIJx8tmyZdPcP/o+0CdihrJGO8YBEPnF
sWPHVNfFe++9JySOxYsXa+aZUPfda7yeN4edO3fK6zlHxlm7dm3XawoQOQm1
uDJnzqw6zx9//HHp6tWrQuJ59913dd9hsJ4sJSa8b//yyy/Spk2bpEGDBsnP
smbzUFbXQCEib8FY7549e8aUh8a8cCffe7VcunRJrr/etm1b+TnVatwY4471
z4i85MSJE6rzFHPJiIiIKFgOHz5set0lUX3dTmHePD6jRo2KetyQS/ca5s39
B/2K9erV072G+/bt63gcvXv31o1hzpw5hts4fvy4qkZ7//79HY+byC3Tp09X
XRO7d+8WEgfG2aRMmTLqddqiRQshMelJhLw5IK8ThGdGCi48b1SsWFF1fqPG
Nn5TRNJ7BsIzxerVq4XGR/Ywqm0UalgvgOOViPyhTp06lvPPWMdDNIwlw3N/
+fLlLef8hw4d6rt5OpS4PvroI9U5ytoIREREwYJ5kKVLlzb9PFu5cmXRIduK
efPYYbxFtPwDagy6Xa/SDObN/adPnz661y/meruxvsSyZct046hatarhNl5/
/fXw30etu59++snxuIncgpx06Py+7777hPbr16xZM+p1iny0nfUs7ZAoeXPU
3ShVqlSSWLGmJuboEiW6wYMHq85tnO9e+L1A3dwcOXJoPn+gHs65c+dEh0lx
whxyM+/pGEdBRP6A2n1W8+aoQ+Ily5cvl4oWLWrpM2DtCj47khe0atUqfF5i
/RQvrUFJREREzsO6RFaeY9Hf7SfMm8fusccei3rMPvzwQ9GhRcW8ub8cOHBA
Hpeud/1OnTrVlVjOnDmjGwfqayKvpOXChQuqmnYNGjRwJW4it+TOndsz/fp6
zz1eW18kUfLm8OWXX0Y9pk888YTo0IjismPHDtXzBsaDHDp0SHRYYZ9//rmU
LFkyzd+1Ro0aiQ6R4rR06VJT7+moA0ZE/qD1XKXXPvjgA9FhJ4H54zNmzJDu
v/9+05/j3nvvldepIBIJ6+aFzkmM/yAiIqJgQX+mlWfxLFmyiA7ZVsybxwb5
yGjHC7l0r2Le3F9QH1Xv2i1evLirdd701jhH27p1q+a/feedd1R/d8OGDa7F
TeQ0zBnxUr/+zJkzNa/TunXrCo0tUiLlzaF69epRj+v7778vOjSimOA5okiR
Ip4/nxs3bqz7DDJr1izRIVIcRowYYeo9HWM8iMgf9u3bZzlvPnfuXNFha0I9
QqP3d2XDGLXPPvtMdNgUUFhDT3k+duzYUXRIRERE5CLMf8TzqJVncTP1hhMJ
8+bWnT17Vq7FHu14YVy0VzFv7h///e9/DX+r1q5d62pMtWrV0o1n+PDhUf/d
zZs3VTn3ChUquBo3kdNQg0R5LezcuVNoPOiD07pOc+XKJTS2SImWN9++fbu8
pnJkzGnTppVOnTolOjwiy5BvVp7LWK/12LFj0vnz50WHprJt2zbdZxDM3Tt5
8qToMClGL7zwguFzL75jrgtM5B94brKaN8c7spdhnSa8EydPntzU50H/zeLF
i0WHTQGEGgnKc3HRokWiQyIiIiIXIf9p9Vl8+vTposO2FfPm1mnNaXn88cdF
h6aLeXN/uHr1qpQzZ07PXbc9e/bUjenFF1+M+u8mT56s+ntYB47IT1q2bBk+
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
R0WHRxQVnidwrendy3HPx1pGXjN27FhTzyJY/4a8C+MxzHyP+I0lIv8Jat4c
Ro0aZelzDxs2THTI5ANHjx5VnVddunQRHRIRERGRMMyba0NeT2sdWOT9sP5j
ImHePLHpjeFAS5MmjegQ5VrURu/1OA+//PJL0aESOWrmzJmq837GjBmiQ5LH
euldm3379hUdYhJ+yJtDwYIFNY/7jh07RIdHFBXm+2KuUbTztnDhwvI6rF40
e/ZsU3mGfv36iQ6VdDRp0sTUM+X169dFh0pEDghy3hxzzrEGitnPnT59evnf
EMVj2rRpqvNqyZIlokMiIiIiEoZ5c216a0u1b99edHiWMW+e2Jo2bap7rRYq
VEh0iFKmTJl0Y8Q4FPzmEPld69atVee+F+Y1Yj1frWsT69dhjrzX+CVvPnDg
QM1j/8ILL4gOj0gTalDs27dPmjVrllz/HPPLv/76a9Fh6Vq5cqWpPAPXxfa2
rFmzGn6HlSpVEh0mETkkyHlz6NWrl6XPzjnnFC+8k4TOp2TJknFtcyIiIgo0
5s2jw5qH9957r+Zx2bJli+gQLWPePLG99tprutdq1apVRYco5c+fXzdGL85n
JXJC5LXw7bffCo1n/fr1utdmrVq1hManxS95c8zL1Tr2d999t3Tx4kXRIRL5
xrZt20zlGFKlSpVwtaOC4uDBg6a+w969e4sOlYgcEvS8+U8//aRZ+zBay5Il
i3Tjxg3RYVMCU67nVbJkSdHhEBEREQnFvHl0c+bM0TwmqLeaiJg3T2wYQ653
rTZo0EB0iFKpUqV0Y1y6dKnoEIkcd/LkySTn/qpVq4TGVK1aNc3rMnXq1PJ6
dl7kl7w51pbPnDmz5ncwffp00SES+cb+/ftN5xm8WGeDJGnSpEmmvr81a9aI
DpWIHBL0vDkYvVtHtokTJ4oOmRIU1qhUnkuovUlEREQUZMybR1e3bl3NY9Kj
Rw/R4cWEefPE9sUXX+heq16Yb/7EE0/oxog1n4n8DvWMI899keubL1q0SPe6
nDp1qrDYjPglbw4tWrTQ/A6efPJJ0eER+caOHTtM5xjwd8l7GjdubPjdJU+e
XLpy5YroUInIIcybS1KfPn0sff58+fLJ66sQWYX3QeW5xPkOREREFHTMmyeF
eqnRcsyhlqhzG5g3T2y3b9+W0qZNq3leoq6WaA0bNtT9PRk3bpzoEIkc16ZN
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
WahQofD2mjZtakOUpOTnvPmYMWN0rwGcW0ROOn/+vOo3TKsVLlzYkXtBPNq2
bRuOb9iwYao+YDPtscceE/0R6C87duyw3B/mVi0O9DMYxZI2bVpXYiEKIubN
1d59913LxwMNc5XJXsq6N2j169ePeVslSpQw/A4xdtFOyvGS5cqVs3Xb0WDs
OuoD6X1G1Hgh8otKlSrF9HvNFn/DepFEQYR67MproVatWjFvy0xdWvanBAfm
CuidC0uXLhUdoi1E5c2x/q9e/U/UUTl16pSjMaAedatWrTRjwPxW1Pi0y7lz
5+Q1bELbL168uG3bJooXr0l7rsnItc3ff/99GyIlJT/nzY3GrnB+EDnpxo0b
0qOPPmr4PoQ5VLt37xYdbhLKtafr1asnZc2a1VKfSt++fUV/BPrLyJEjLX1v
ZcqUca0eXGTfg1YLan2606dPy7WIjh49Kl24cIFze8h2zJurjR8/3vLxCLXf
f/9ddPi+0rhxY9Xx/eKLL2LajpnxWWhY88wukevadO/e3bZt6zG63+/atcuV
OCg6/Eagv8Rr42QTlfI9hc3dhrk/REGEfnzltRDrmqRYy87MtYZ5DOR/qA+Y
IkUK3XMB6wP4gai8Oca4RDuuiGfGjBmO71+pffv2mt+znXNFI+uozZ4927Zt
E8WL16Q91+T8+fNV2zxy5IgNkZKSn/PmkWsPRWvXrl0THSZF8EO/EvJbkX2+
ifY+hHxdKEbk9q32qaxatUr0R6C/1K5d2/R3hrFE33//vWuxoTaOmbgwhs7v
vvvuO7kf8plnnpHnHyjHIYYa3qcxbxH1ADAuDGNziOLBvLka6lhbPR5oqMNN
9sEzoLJfDb+JsTJbe3/evHm2xT9x4kQhz0O//fabdPfdd0f9fHiO4zuP/XDM
Mfb1s88+k2bNmiXXrMA4Cax3i1q+uGfny5dPrp0T+i5QnwLrmFL88BzZunVr
qWLFinK/O+ZtsNnfSpYsKVWoUEFq3ry5NHfuXNFfO5EQmJeGdehCv+WoFxir
3r17m3o2WbBggY2fgLzqhx9+MDwX8Hf8QETeHM9n0Y5ppkyZ5PUo3YZxElq1
PPG8jrkT8UI/kbL2VZ48eTjGmzyD16R916Qy5896UM7wc94c57bR8wfHYrgj
aP1KQ4YMMfUulCZNGuns2bOiw40K/aux5A/QUM8E75YkFu7/yIWb/d6mT5/u
anwYX2cmritXrrgal1tu374t5yCVa/haaVhf8s0335SOHTsm+qNQgmLeXG34
8OExXYusX2SvcePGqY4vnqlihX5to+8vZcqUtt5nlOMmMabCzXtYs2bNon7G
hx56yLUYggB1YEqVKiWvbRvLbwb6YIJaS4eIKBFhfWnl7/hbb70V87aManKj
oV+MY6SD4fPPPzc8H27evCk6TFu4nTfHsxbyU5H7RB5E5FgExPX0009H/a5H
jBgR9/Y/+OAD1TbHjh1rQ9RE8eM1ae81qezr4NrmzvBz3hzPFkbPH7HWfSRz
gtivtGfPHsM6S6GGeVBeZiXnqmyYl0Dima2DjvbII4+4Hl///v0N40I+w29Q
jwJ5oWzZsmn+7mEcEZ7bGjZsKK/NG23+eajh/XPAgAEJ91tJ4jFvrmZ2bnJk
y549u+jQfaVs2bKq4xvrGNdvvvnG1PeHtWjslDlz5vC2y5cvb+u2jWzYsCHq
Z0Qun+zTuXPnmH4rQg3vRkRElDhQ10L5O37o0KGYtrN161ZT9wnML6Fg+Pjj
j3XPBT+Nz3U7bz5mzJgk+0ufPr2rNRa1XL16Va7lEhlfvGseo6+pUKFC4e1h
DWnWnCKv4DVp3zWJOZjKXBty82Q/P+fNAfNe9Z5B7KzLSEkFrV8JeSvkuMx8
NuTBvF6L/oEHHojpe0M+lMTDuDgz3xfmw+3bt8/1+Bo0aGAYm99qzfz4449S
1apVk3xOjLkcNWqUXK9dazz5qVOnpJkzZ0q5c+eOeqyKFCnCGipkCfPmambG
8kRrDz74oOjQfQPrcijf/+J5T+3QoYOp78/OusP79+9XbbtHjx62bdsMPFdG
+4zxzNmnpNq0aRPX+43b5wUREcXul19+UfUrFi1aNOZtmX02iXXtdEo8U6dO
1T0XsmbNKjpE27iZN0e9J9R9Vu4L7xjLly93ZH+x+PXXX6POVUKt1lgtXbpU
ta1+/frZGDFR7HhN2ntNol9OuV3MWyX7+T1vnipVKt1nkMmTJ4sO0deC1q/U
t29f05/t5ZdfFh2uIcwbj+V727t3r+jQ6S9YA8HM94Va3yIg12QU28MPPywk
NifMmTNHSpcunerzYTwjnnesrG2Dmn1Dhw5VrWsRapjDfvDgQQc/BfkJ8+Zq
vXr1iumeV6ZMGdGh+0Zk3+GgQYNi2g7GMWItC6PvDr/JdtZBnTBhgmr7WH/Z
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
4ZTOnTubOlYbNmwQHWoSzJs7D3lxvdhQp9Mv3MibnzhxQnrooYfk3x6MY3Vy
/oLdpkyZojo2HTt2NPXvlLWm0qVLJ6zmFVE0vCZ5TSYyv+fNI9f4i2x+GruX
SPzSr2S2fzbUMI4jUTz22GOWPpuTdajJGvSTG31fmJ8sqm5eoUKFDONDPYpE
gz6hggULhj/DvffeK33//feu7FtrTRLUKybSwrz5P7DGViz9bHiXIu8wU2sf
Y5vsvv+NGzdOtY/PPvvM1u2bhfH7yjjsXsOd9GGuoN65t2zZMtEhElEUyjod
bPY21G5HvdKgQl2w+++/3/A4FShQQHSoUTFv7ryaNWvqxla/fn1hsdnNjbx5
CHJziVZzCeO4leNfzRybnTt3qo4n1lQm8iJek5SIgp43x5+T+/zQr4S51Tly
5LD0PD5y5EjRYZuCz5YmTRpLn23lypWiw6a/4DnEzHdXqVIlIfFhPVkz5xNq
myeal156SfUZ5s+f79q+s2bNGvU4Zs6c2bUYKPEwb/6P6dOnx9TPtn//ftGh
0//5+uuvTX1nTqzR1LBhw/D20Sd47do12/dhRteuXVWfNRHrtiQy3HO1zrtk
yZIlTM0poqCxOhaezXxr2rSp6K9XqIULF5o6ToMGDRIdalTMmzsP9eH0YkNe
3S/czJsnKqz9HDo2eHY0Guv78ssvh/8+8nvHjh1zKVKiYOA1GWx+z5tXr15d
9xnk+eefFx1iIPmhX2ndunWWn8dRwzkRIE4rnyt79uzS77//Ljps+suWLVtM
fWd9+/YVEp/Z3BTe0RMJ8jXKcYht2rRxbd+Yx6Dct7LlypXLtTgo8TBv/g/U
1bZ6LHh9eQvGcpv53pYsWWLrfjF2XjmXrGLFirZu34pixYqF48iWLZuwOIII
Y2j0zjvWfyHyto8//lheewU1RHG9Fi9enC2GhhwY6pNinsSkSZMCv46bUQ1u
NKz7hzq2XoTaaXgv93sT2f+oHHsZrVWtWlVYbHZj3tzYkCFDVMcH/c5aUO8w
derU4b9bp04dFyMlCgZek8Hm97y5Ua1pN3Mb9De/9Ct169bNUv865oMmivff
f9/SZ/Pq+OggGjx4sKnvbP369ULiM6pDFuo7OHv2rJD4YoGcSZkyZcLxZ8iQ
QTp//rxr+8f4Ra1jifXVibQwb/4PrKNi9Viw5pZ34HcYY/iMvjOsL4axRnba
u3evah+YtyhC5BrrGOtO7pk4cSJ/L4iIKAz1XbGeq9GzCfosKbiaNGmie348
8sgjokO0DfPmxrDWk/L4jBo1SvPvjh8/XvV316xZ42KkRMHAazLY/J43x3hh
vWeQTp06iQ4xcPzSr1SiRAlL/esYv54oEKvZz5UiRYqEynH63ZNPPmn4nd19
993SjRs3XI8N47ijvStFNsxVSCRY31gZP56V3LR8+XLNY+mn9dDIfsyb/w05
V+RTrR6LrVu3ig6d/g++CzPfmRNrgIwdO1a1j7Vr19q+DzPefPNNvqcL1Lhx
Y91zb+nSpaJDJCIiFw0bNszUs8mHH34oOlQSqEWLFrrnR9myZUWHaBvmzY2h
b1V5fFq1aqX5d4sWLRr+e/ny5ZPfaYnIXrwmg83veXPMXdZ7BunRo4foEAPH
D/1KyDVgTqyV/vVEeR/C+tjp06c3/bmCvmaZl2AO3T333GP4nVWpUkVIfGbX
R0uk3+UrV67I88tDseOe6vaaBXhu0zqWemMhiZg3/9uBAwcsHwfWaPcW3DfM
fG+ffPKJ7ftu0KBBePui1jbHfQd1jZTnZ9Br47pNbw0qrKVy4cIF0SESEZGL
HnroIcPnEtRzxfskBVfHjh11z5FEm1Ogh3lzczJmzBg+PqVLl476d7766ivV
cRw6dKjLURIFB6/J4PJ73rxIkSK6zyADBw4UHWLg+KFfacGCBZb72I8cOSI6
bFNWrVpl6XNt3rxZdMj0fzZt2mTqOxswYICQ+OrWrWsqvm+++UZIfLEYPXq0
KvbVq1e7un+MldAb55IovzskBvPmf5s2bZrl49C9e3fRYZOC2b7p69ev27rf
yLXNK1WqZOv2zVq8eLHqs7799ttC4ggqo7E3JUuWFB0iERG5aMuWLaaeJxOp
JiE5o0+fPrrnCJ5x/YJ5c3OU681iXkw0mL8U+juoAYr3eiJyBq/J4PJ73rxA
gQK6zyAjRowQHWKg+KVfqW/fvpb61zE2KVG0adPG9OdKlLXogwL95Ga+t40b
N7oe2+XLl+X68Eax5c6d2/XYYoX5fYg3FLvWuEMn6dVoR40gIj3Mm//t2Wef
tXQMUqZMKa9ZSd5w6NAhU99bw4YNbd/3nj17VPtA36cIqOGpfE/n+jnuMlqD
qkuXLqJDJCIiF7Vt29bUs8m6detEh0qCDR8+XPccyZs3r+gQbcO8uTlYT1Z5
jCKf63/55RfVsWzUqJGgSImCgddkcPk9b54zZ07dZxD0c5B7/NKvVK9ePUt9
7JhnmwiQB1TOmzJqixYtEh0yKVStWtXwO0uVKpU8R9ltH3/8salz6rXXXnM9
tlhFfqbZs2e7HgPmKGgdyzlz5rgeDyUW5s0l6caNG1KaNGksHYPOnTuLDpsU
xowZY+p7mz59uuP7FtH/jfXUlTE4sYY76TNag8qJ9QGIiMibsF5L2rRpDZ9L
sKYK1z6lyZMn654nqNfpF8ybmzNlyhTVMdq6davqz9955x3Vn+NdgIicw2sy
uPyeN8+UKZPuM8iMGTNEhxgofulXyp8/v6U+dvyGJgL095r9TFhnie953oFc
OHLiRt8bcusiKNd/1WuJVPcf9RZCcWfPnl26ffu2q/s/duyY5nf+4IMPcm1b
MsS8uX7NhmgNdTN++ukn0WGTQq1atQy/tzvuuEM6ffq07fuuX7++6tywuw68
GY8//ng4hrvuuks6fPiw6zEEndEaVOfOnRMdIhERuWTmzJmmnil79+4tOlTy
gPnz5+ueJ8mTJ/dNvxvz5uasWLFCdYwwXyME50K+fPnCf4Yau345P4i8itdk
cPk9b26UR8I61eQev/Qrmak3rWwbNmwQHbIp7dq1M/2ZsJYmeceXX35p6nsT
sebp1atXTeX0E2nM/cGDB1WxDx482PUYqlWrppkf4vhGMoN5c/2aDdFax44d
RYdMCqiTY6ZeAMb62Q33qwwZMoT38cgjj9i+DyNr1qxRfc5WrVq5HkPQ7d+/
3/Vzj4iIvEs5nk2vcZwbgZl+nN9++010mLZg3tycb775RnWMRo4cGf6zVatW
qf5s2LBhAiMlCgZek8Hl57w51tM1ev6IrK1AzvFLvxKeWa3mGc6fPy86bEM3
b940rM8QaiVKlBAdLkUYNGiQqe9u06ZNrsc2d+5cU7F169bN9dhihTy5MvYT
J064un/UStE6jlh7h8iMoOfNf/31V0vj4NDXc+rUKdFhk8KOHTtMfXdOrAO0
e/du1T769u1r+z70YMyA8j0O65ofP37c1RhIksaNG6d77vGe7AyMW8E6CZUq
VZLXmEqdOrX8e85mf7vnnnuk9OnTS2XLlpX69+8vZL0nokSB+zDGMBs9l1So
UEF0qOQRqCFndL6gL9UPmDc354cfflAdox49eoT/DGuAKt9Nsa4yETmL12Rw
+TlvjvGbRs8f6DMmd/ilX8ko/x/ZcufOLTpkU6ZOnWr6M3GuufeYGdcuam3z
mjVrmjqvdu7c6XpssSpdunQ4btRrdxOew5RzHJUN/cci6gRTYgp63jxyHSqj
9uqrr4oOmSJMnDjR1HeHGph2e++991T7WL9+ve370DN+/HjV/jt06ODq/ulv
ylr90dqiRYtEh+hLAwYMsHz/YrOntWzZUvTXT+RZGFti5jqaNGmS6FDJI27c
uGF4viRK/UojzJubg/4c5TEK1ZM6efKklCxZsvB/f+655wRHShQMvCaDy895
c6N6Nxg7Te7xS7/St99+a6lvAWOPvA5zNgoVKmTq82CuAXkLagWkTJnS8LtD
bt1tyMthvVWj2HD+JYrIsYZvvfWWa/vG/ELleEZlw7wF1FkhMivIeXP8bmJc
m9nPjX6eH3/8UXTYpl28eFEei7Rw4UJp+PDh0n/+8x9p+vTp0saNG301ZhRj
Gcx8f3intdszzzwT3r7ba5tHjp/KmjWrdOHCBdf2rwXn1rx58+S8AX4rcM/y
s8ha/ZENcw71aquir/y7776TPv30U3nudM+ePeXr9aOPPpJrKSTK2jUilCxZ
0vL9i82ehnOe5yZRUrgu8ubNa3gN4Zkhnnv2lStXbIyavAA1PfTOGTxb+QHz
5uYp16HCOwfgfU557PwynoIoEfCaDCY/583RX6P37IHPnkgSuQ/UT/1KqO1v
pW+hT58+rsUWq6VLl5r6LFiDHut6eA36ZdEnjhrkqAmOcwN1U7CuCK6RZcuW
Sd9//73oMB2D3wAz3x/6sd0WOR9Pq8WTe8Ycejfn0X/wwQeq2Pft2+fKfnGe
N27cOOrxK1OmjHyP8IKg5U0SWZDz5pFrLRi1RJhrjrrhqN2TOXNmw3s5xt98
8cUXokOO21NPPWX43TnxXvPHH39I9913X3gfjz76qO370BN5L/BCHSDUlYqs
TYt709WrV13ZP+qMoXYSrm231qTZtWuX7rlXtGjRqP8Oz20vvviiqv8lWsP6
Sc2bN/fks7doqK9j9f7FZk/LkSOH6K+fyJM+//xzU9cQ7uGxQJ/Xww8/LG+j
YMGCCbEWIJkTrV9e2caOHSs6RFswb26ecnx31apVpdu3b8vjZEP/7cEHHxQd
IlGg8JoMJj/nzY3qgteqVUt0iIb80gfqp34lM/X/lQ3rEHvdI488YuqzvPTS
S6JDDTt06JCcay1evLiqLopey5Mnj3w+LViwwFe5PLO1KkWMfcN7kFFc6GeP
dU3W5cuXy2u6Jk+eXBoxYoTN0UfXrFmzcOz4bTYD8xAxxmfmzJnS0KFD5Zwy
xnb06tVLGjhwoDzWY8KECfLYoD179shjhZTOnj0rVa9ePerxwzH2Sr9JEPMm
iSyoefMTJ07I61aY/czom/RqLYdLly7JtcqVa0dYaY899pjm2EuM1cRvVfv2
7aX3339fnqPvNWbmnJYoUcL2/UY+12Isq1swfla57wYNGri2by24t2kdf6eP
DebdRRtT9tprrzm6Xxg1apTuuRdZOx/Pn/g9ieVaxTMAzjv62+TJk2M6jmzx
N4xfJ6KkWrdubeoaWrFiRUzbX716tWo76Csjf6hTp47uOZMIc3HMYN7cvAce
eCB8jMqVKyc/QyqP28iRI0WHSBQovCaDyc95czxb6D17dOzYUXSIUfmxD9RP
/UqY02klni1btjgWix0Qn5nPgXlVejUB3HD06FFp0KBBUrFixeLu80ENNYzb
dSuf5yRc80afF+8obq97bTReJtTimadXsWLF8HaqVKliX/A6cubMGd5no0aN
dP8uauli7BNy+1bOT/z98uXLS/369ZOmTZsmZcyYMerfQ67AK/PMg5o3SWRB
zZsr62sbNayBgTGMXoQ1u/XGVeK3tXv37nKNDHxvqMGCsWN4zlf+PfymYQ2a
EMxnwnNZ5BgY3Hu9Vhu0cOHCht9htWrVbN/v6NGjVftwa1warlmMFQ3tN126
dNLp06dd2bcWvEvkypXL1eOvhHEDWvtGjSgnGfVz430GDhw4IB+HyD9PnTq1
HD/G0KE+EupodenSRZ5LHXn9oaG2L/LF9LdVq1bJeSo8C6LfHWNk2OxvOLZY
CwjjRj/++GPRXzuRJ+E9O23atIbPJNmyZZNr1sQC66mGtmNUr5ESy5tvvql7
3nhp/ko8mDc3r0iRIqp3sCeeeCL8/2POyK+//io6RKJA4TUZTH7Om7dt21b3
2ePdd98VHWISfu0D9Vu/UrTnPa3m9d9Oo3XnQ01kPx36idu1a6e7Tjbqo7Rs
2VIeF4JzBOcUxmt07txZt+4Vag2uW7dO2GeLF+Yl43w3+v5wrbgN+WIz5xbG
8MQCaw0rr383xkIdO3ZMFfv48eM1/y7WBkBOw+xvhZV2zz33yPcBrwhy3iSR
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
Vq1atXTjGT58eNR/hz5zZc69QoUKrsT72WefmXpuErG2OWDOs15cjz/+uKXt
YWwffjNC//7JJ590KPLoPvzwQ1X8yMuIpPf9o0a+W4KaN0l0R44ckeeMW1kH
PLJhHBjWeHIrXowVefXVV+V+FaOxYNEafqexZoCb47GsQl01o++kcePGjuwb
tTv09uvUujpOwdgKoz5stG7dupkeA4K/hzonsd7HQjCHDOv7JE+ePMkzIsbh
JQqjNTqw3qtTOnXqpLtvp8YjA+7/evtGvR0n4Lcrsi5BZMN5RURE7kOfit7v
88qVK01vC8+7yn+LWopetWPHjiTvoTdu3HBt/0888YThsx7GWe/bt8+1mOzQ
pk0b3c/kZs09uzFvbg76MpTHaMaMGaJDIhcYrXVr1GKZn0Tm8JoMLr/lzVGj
Ua8mNfpa3BLkPtAg9ishh4p8nt6+MZYBtaychO/eaM0nXCMTJkxwNI5oME86
Z86curE9+OCDrseFHJBeTC+++GLUfzd58mTV37Nag82peENNxNrmgLyA3m8f
xjaZhbne999/f/jfYs3XEydOOBh9Ui1btgzvH59L5NrmoPc8jfEFbuUGg5o3
8SKM7cG6zaHWv///b+9OwK+a8ziOP8PwVHiSraKiVEZGYSxFqWxJGXtIWSuS
Jco6lKwNMmQspRDZFYYMIhP9x1ZjSSWlSLYWJQymzJnnc8y9zj3/s9z7/99z
fufc8349z3nG8L/3/O69Z/md3/f3+35H2GN4yr8zaNAgew1rp06dCs6l2m7q
K3bv3t3ObaNrkvbpbEOp2+WXX26PDapfpJwkypdR2/aqvqK+mx9++MH0TxRK
nz/s86juShSU0y1ov2effXYk+43SV199ZR9DYd+p+hwPP/xw6HVz1qxZBa+7
6qqrSmrP8uXL7ePcK6/onnvuab355pu1+bixC6vREWW9t7Zt2xrbt/I4Be1b
czGioDH/sGPZb44nACBaGuMIyoNUTJ40zc87//zzC16nMR1Ttf6K4c4prNoz
cdLYSzHPA3oeSpPHHnss8POo35pWxM2L46479d5775luEmKgPLA77LBDjcc+
6tatm+h1AmnGOZldlRY3V83CoOtInHGkLI+BZnVcSXn5u3TpErh/5e1X3CsK
Wv+52Wabhe6/lDnP5XTrrbeG/j46b+I2evTowDYpN6ubYsNbbbWVkf6+xtjD
vkdTtc1zNP/Or21NmjQp6j0Up1Cu79zr6tSpY689j1vz5s3zbVD9CdPctXXc
W1y1SLIaN0ki5Z2u6fNVJW6aG6h6CmvWrDH90xTNeZ3x2jQnRvMxoxC2ruWp
p56KZL9R09iDcqrVr18/9JjR85D6rn7zsty1QmbMmBG6f82xUp0X1cPR/cu9
T/Uhxo8fb3wuVqnCanRofmRUVq5cGZhzIuqcK0cddVTgZ49q/qQ7743XluZx
dABIO+XL87s/eY0lOK1YsaLa2umuXbvaY0tJpb6L7rnONuvza86qcvlNnTo1
ljYUE2NSvCNNfS3VI3Pm2nNvSc5BEIa4eTjlKHV+PxrXS/L8GZTXtGnTajUO
EvcaoyzgnMy2Soubq36N3/VD48px9j2zPAaa5XEl5Z/v0KFDYBt0LE6ePLls
+1TNq2LyVPXp08fuh5uiPANhbXz33Xdjb5eOiaA2aS6Em3s+uGrcx0HPfO78
rl6bqdrmTj169PBt38yZMwNfqzkgztwRquce13p+p48//rig3YrBmBaWH/21
116LvA1ZjpskEXHzX+6rqpdSTDwzadx5Lou9D5VLq1atfPer50LlckozrT1X
3phic/xr/E45FHSt1XxMxd+d9Vx0b/KqU6D5/aoroNcpT4lz3pdz0/1MOTPS
+r2G3YP69u0b2b7DanToe49SUA6MKOcrar5z2HGbxmsfAFQSvzE43R9073RT
nkCt2VY+NeffaywpqpqG5eKOI7g35UdXXaio49XuMRm/zcTc+9oIyh+58847
m25ejRE3D+eu+6C5IcgWzY0pdgzEPX+JddDlxzmZbZUWNw+qbR1nvdOsj4Fm
fVxJ8yF69uwZ2hYdr8rbVZM6UJoD8uSTT1r77LNP6H6UF1R/a9KCBQtC26k8
9iaErd919+U/+OCDgtj1IYccEltblW+4mP6TnsFN07pnv3V+HTt2tOfWO+m5
WjlB3Ll1dc2YNGmSkc/gXjcfVa6IUoTlbYhjfn+W4yZJlMW4uWKg7dq1s/PX
aF52muf8Dhs2LPTzRjVnR9fpoP2WUlcj6ebPn29dcskldr37Uo41jfE51/1o
LZWuM7169bLnh6k/r2NRufGC3kf7VX53xfHTLKxGR5R1MgYPHhy4b82fjcq8
efMC9x3luO/ee+8depxqnh8AwBzFuvUM5Hed1jOu/rvqHG2//fae9SU1BzQN
8+qUN7OYPlQ514p4+dvf/lZUO4YOHRppO8otaD2QnoFMroWpDeLm4fRM4fx+
wvJVoDKp5mFQDdp69epZV199tR1LcOacraqqMt30isM5mW2VFDcPW4MWZ57J
LI+BMq70q4kTJ1qbb755aJs0z0BzZXVvfPHFF+0YszOWrn9esmSJne/zL3/5
i11H3Svnp3tTbPe0006rFp804Yorrghtr+ZxmRA2z8U9n8w5/1ffseLocVI9
1qD26thISn4e5ULYbrvtPNup2INiDr1797Z22203z36h1i1PmTLFWPu1RjHX
lk033TQR9YLCaoB8+OGHkbchq3GTpKrEuLmuY8pj3bJlS/v6oJrnWqM7ZswY
e/5bWseLvHj1xeM6r9VPCdqv8jhVGl3HVa9GOXjctcrKvWl8UH22Rx991F63
XgnCanToOSAqQfOjtUVZo0PXHhPninIbhM3J0Lo+rxwIAID4qXakauOV0l9Q
DapXX33VdNOLNnLkyKI+l9Z4REnPA8W045hjjom0HeWmdUZB431prc1C3DzY
p59+Wu37SducD5SP4gKKjR9++OF2rUvFFjp37myPiSg+kKP/ljtenn/+eYMt
rjyck6ikuLnmMvr1K7TmsSZremsqy2OgjCsV0roi9dNLHWvVHJBGjRrZsbpS
X6v4o2JLznupaUE5EHLbO++8Y6RtWoMW1C5nPW7lB3D+N813iNuQIUMCj5ux
Y8fG3qYgmnuvXEPF5sjVpjy2Whf4/fffG217ixYt8m1Snt4kGDBgQOA1Lo51
t1mNmwDlVkwuFs0fiEq/fv0C920q10ec1FfS+OM555xjderUyc53V0w9FK9N
44Ea+1b+I835Mn0PK7ewGh0az4mKxsZ1j/Pbt2IUUQpaQ6gtqjV1qpkbdtxF
HZcAAJRG+QfPOOOM0LEczQ+9+eabrXXr1pluckkGDRpUdL8o6lztWncZ1g7l
vk+boNqXRxxxhOnm1Qhx82BeY+lRrkdAZdB6pNzx8sorr5huTkXhnEQlxc2D
1r+dfPLJsbUj62OgjCt5Uw4prVN25vos96b75YgRI+zcC0miOFZY2zVHwBSv
OWTOrUGDBvbfqW6pc12n1lGvWbMm9vZq7oez1mpu05ixV+20pFA+fNW4D4qf
a161ngPjXsPvRWv2nW278cYbTTfJprW3ft+fc45HVLIcNwHKTX2ysPtjlHN2
NF4btO9ly5ZFtu8k05r0zz//3M7zo1yque9DOVU1D0wxds01v/baa60777zT
roWjOXhpG/culeYXmDpWlTcsaN/HHntsZPsW5R4K2n9U+feD5krmtqhymAEA
ake5ZqZPn27ddtttdk5KrW245ppr7Ln4SXjerali6++q3xT1+iV3fV9Tz8jl
9vjjjweOmURV+zJKxM2DKf+z+/shDoowWnOUO16iXL+SRZyTqJS4ueJIzjk2
7u3vf/97bG3J+hgo40rB9PlVn1hzXot51gjbtK5JY7cvvPCCXfs6iYqZ06Dc
M6Yoj31Q29QP0TOvYr65f6fYnen7pXK5DR8+3M5vr3i5at6ngc6Bhx56yLr+
+uvt8/biiy+2brnllsStzbv//vsLjoOZM2eabpK1fPnywHkHWisZtSzHTYBy
07Uv7P6o/GxRCJszprwSWaf8Hc4xvkqq914TWjsXdMyMGjUqsn0rv0/QvhWT
iIr6V0FztjS3Iiph+V20UdscABCnP//5z0WNVe28886Rt2XXXXcNbYfWrqSN
xvY0Nu/3me677z7TTSwZcXN/eubwqr22evVq001Dguk64TxeklCjtVJwTkIq
JW6uGkJ+/QnVLoxz/UeWx0AZVyrNokWL7ONFuet79eplr4fXGmbnfDFtyhe6
zTbb2M8EWrOumuWK6WndZxq4c5t7bXr2MkXHbVj7Lrroomr/H5VN51nu91at
jySsI9T8iKDjNI7cKlmNmwBRuOCCC0LvP1OnTo1k3+65Qe5N53rWab059/5f
/e53vws8Zv71r39Ftm+Nqwbt+/33349s37Nnzw7cd+/evSPZr54Twq4PjDcD
AOKmNY1h9ydtygkaNWdeIL8tlz8wbZTfyO8z9ejRw3TzSkbc3N+0adOqfTfN
mzc33SwknDMXpPJ7RF0XI0s4JyGVEjdXzNGvP6E8SHHK8hgo40rloXud1uQq
56dyrqf93qc10WG/j9bLm6LvN6x9zjW+7dq1i6WGNMxyPoMn5bm0f//+gcep
1mNHLatxEyAKxx9/fOi9J6o5zc65QV6b8oJknWqOOr+T5557znSTjFHe+rAx
aeW3j4LOgaB5uVtuuWWkfWX1UYM++8iRIyPZ71//+tfQ/mncz7kAAIhyxgXd
n5o1axZL/cBNNtkk9F6p59c0Up1Av/6P1taohlmaEDf3d+GFF1b7btJaxx7x
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
tc2zgLgJgCxp3rx5/vqmmhtZFlajY8yYMaabCAAAKoRqa+2zzz6efQ7V6CPH
WWkGDBhQ7Xts0KCB8fWqxM1/oc/s/h7eeecd081CQsyZMyd/XGyxxRbWP//5
T9NNqnick/CTxLi5aqM2bty4WrsGDRpktF0AgMozcOBA1lB7IG4CICvceUdG
jx5tuklGhdXoMD3uCgAAKsM333xjdejQwbO/cdxxx9n1zlGadevWWYceemi1
73P77bc3Wh+ZuPkvGjZsWPAd7LHHHqabhIS54IILrKOPPpo5QzHhnISfpMXN
1WfSfEJ3mw477DDr559/NtYuAEBl2nHHHfP3mhNOOMF0cxKDuAmArNCYRO7a
VqdOHTuOnlVhNToaNWpkuokAAKACrF692tprr72q9TXWW289a+TIkaabl2qa
b+D13Xbs2NH68ccfjbSJuPkvFHNxfgdJqT8PZBXnJPwkKW6+du1aOy+iuz26
1zPHEABQbl9++WXB/eauu+4y3aREIG4CIGumTJliDR061Hr55ZdNN8WosBod
xx57rOkmAgCAlFu1apW9ps9rPJpa5uWhteW77LJLte+4T58+RtpD3PwXhxxy
SP7z77nnnnZ+AADmcE7CT5Li5l45YXfffXe7PwUAQLk9+uijBfecBQsWmG5S
IhA3AYBsCqvRcfvtt5tuIgAASLGVK1d61pNt1aqVNW/ePNPNqyhff/21Pa7u
/q5HjBgRe1u84ub169e3c8qXup133nmxt79cXn31VTvPbpcuXawPP/zQdHOA
zOOcrHxnn312je41m2yySSLi5jfccIPnOnPl7QEAIApnnnlm/p7TpEkT081J
DOImAJBNYTU65s6da7qJAAAgpbQGetddd63WvzjggAPKumZq9uzZ1vjx4+3t
nnvuKdv7ppHG1du3b1/tO58wYUKs7fCKm9d0y+I6dQBAzXitG6/pFnfcfNKk
SXb9GmcbOnToYNc6BwAgKm3atDGeryyJiJsAQPaE1eho2LCh6SYCAICUWr58
udWuXbtq/QvN2VbdznIaPHhw/v1btGhR1vdOozVr1hTkIta2/vrrW4899lhs
bSBuDgAwIa1x86lTp1p169Yt2P9hhx1mfffdd7G1AQCQPe7a5uPGjTPdpEQg
bgIA2fTggw8GXv+p0QEAAGpi2bJldh5cZ79C66duuummSPbXrVu3/H569uwZ
yT7SRjV7zz333ILfYMMNN7Sqqqpi2T9xcwCACWmMm8+YMcOqU6dOwb6HDBli
/fzzz7HsHwCQXZpb7bz/LFy40HSTEoG4CQBk04ABAwKv/3fccYfpJgIAgJTR
fPWddtqpoE9Rr14968knn4xsn5rrndvXhRdeGNl+0ujuu++2Nt5449jnFRA3
BwCYkMa4+eGHH16wz/vuuy+W/QIAMGjQoPw9qGnTpqabkxjETQAgm1q3bh14
/f/ggw9MNxEAAKTIF198Ye24444F/YlGjRpZM2fOjGyfS5YsKdjfvffeG9m+
0uqjjz6yunfvbud/jSvvHnFzAIAJaYybq++y0UYbWT169LAWL14cyz4BABDn
nHdqm/+KuAkAZE9YjY6tt97adBMBAECKfP7559YOO+xQ0J9o06aN9fHHH0e6
38cff7xgn2+++Wak+0uzcteVD7JixYqybatXr46t3QCAdFu1alXZ7j8rV66M
rd2qrwIAQJy++uor6ze/+U3+WXr8+PGmm5QIxE0AIJvCanT07dvXdBMBAEBK
LF26tNp87C5duthj11Hr379/fp965v/2228j3ycAAAAAAGnmnoOuPGUgbgIA
WXX66acHXv8nTpxouokAACAFPv30U6tly5YF/YgTTjjB+umnnyLf93//+197
rnduv9tuu23k+wQAAAAAIO3OOuus/LN0s2bNTDcnMYibAEA2tW3b1vfar7Va
y5YtM91EAACQcJ988onVokWLgn7ExRdfbMez4zB9+vSCfauGNwAAAAAACPb7
3/+eNdQeiJsAQDY1btzY9/p/8MEHm24eAABIONUtb968eb7/sP7661u33357
bPv/+uuvrb322qugDzNkyJDY9g8AAAAAQBqtXbvWfobPPUvfc889ppuUGMRN
ACCbevbs6XntX2+99ayqqirTzQMAAAm2aNEiOye6sw/Rpk0ba+DAgWXbzjjj
DKtfv37WSSedZPXu3ds64ogjrP3228/6wx/+YOeQU5/F3Y8ZP3686a8GAAAA
AIDEmzp1qnX++edbt912m/Xzzz+bbk5iEDcBgGyaN2+e1aBBg4Jr/wYbbGA9
8sgjppsGAAASbOHChVbTpk0D632Z2l5//XXTXw8AAAAAAEgp4iYAkF0rVqyw
Ro0aZZ177rnWhAkTrCVLlphuEgAASLAFCxZYTZo0MR4f99u++eYb018RAAAA
AABIMeImAAAAAIAg8+fPt7beemvjsXG/TfF8AAAAAAAAAAAAAACioDxljRs3
Nh4bD9oOOugg018TAAAAAAAAAAAAAKACrV692tp2222Nx8XDtsGDB5v+qgAA
AAAAAAAAAAAAFWj48OHGY+LFbGPHjjX9VQEAAAAAAAAAAAAAKtApp5xiPCZe
zFZVVWX6qwIAAAAAAAAAAAAAVKATTzzReEy8mG3VqlWmvyoAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAABCB/wFMQDXe
    "], {{0, 204}, {1998, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{505.9536458333326, Automatic},
  ImageSizeRaw->{1998, 204},
  PlotRange->{{0, 1998}, {0, 204}}]], "Subsection",
 CellChangeTimes->{
  3.750474185614663*^9, 3.750524171978232*^9, 3.750538150759222*^9, {
   3.763767721633321*^9, 
   3.763767722489798*^9}},ExpressionUUID->"80c25574-c28f-433f-b5f2-\
ed0352df0f5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Da", "[", "aa", "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "bb", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], " ", "=", 
     "  ", 
     RowBox[{
      RowBox[{"-", " ", "I"}], "  ", 
      FractionBox["1", 
       RowBox[{"2", " "}]], 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"CommuteGammadown", "[", 
           RowBox[{"ap", ",", "bt"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"hfield", "[", 
             RowBox[{"bt", ",", "mu"}], "]"}], "[", 
            RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "ap", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"bt", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.44089626328125*^9, 3.44089637846875*^9}, {
   3.44089642415625*^9, 3.440896495890625*^9}, {3.44089657190625*^9, 
   3.440896662046875*^9}, {3.4408967804375*^9, 3.440896870796875*^9}, {
   3.440897205890625*^9, 3.440897242203125*^9}, {3.440897309890625*^9, 
   3.44089731115625*^9}, {3.440908108171875*^9, 3.440908109046875*^9}, {
   3.44091498821875*^9, 3.4409149941875*^9}, {3.440918974453125*^9, 
   3.4409189904375*^9}, {3.44244558234375*^9, 3.44244573665625*^9}, {
   3.4426716670625*^9, 3.442671710828125*^9}, {3.442710621890625*^9, 
   3.442710690765625*^9}, {3.4427114799375*^9, 3.44271148175*^9}, 
   3.4429637571875*^9, {3.442968274875*^9, 3.44296830234375*^9}, {
   3.4433745575625*^9, 3.443374558359375*^9}, 3.443397886515625*^9, {
   3.443708388078125*^9, 3.443708411328125*^9}, 3.44370851709375*^9, {
   3.443708548734375*^9, 3.443708553453125*^9}, {3.455046150046875*^9, 
   3.455046233453125*^9}, 3.455384991875*^9, {3.506778333651889*^9, 
   3.506778334296926*^9}, 3.506779194679137*^9, 3.520647426065205*^9, {
   3.520647558388774*^9, 3.5206475930507565`*^9}, {3.520647626489669*^9, 
   3.5206476282817717`*^9}, {3.536930486296934*^9, 3.536930491023205*^9}, {
   3.536930535285736*^9, 3.5369307318879814`*^9}, {3.536930778157628*^9, 
   3.5369308566581182`*^9}, {3.5369309230769167`*^9, 
   3.5369309999173117`*^9}, {3.53693103451029*^9, 3.5369310433197947`*^9}, {
   3.5369316121663303`*^9, 3.5369316209108305`*^9}, {3.5369316913818617`*^9, 
   3.5369317715824485`*^9}, {3.5369401425560164`*^9, 3.536940147587304*^9}, {
   3.545150039100164*^9, 3.5451500409652705`*^9}, {3.5451500789954457`*^9, 
   3.5451501188347244`*^9}, {3.545150386932059*^9, 3.5451503976686726`*^9}, {
   3.5451504792953415`*^9, 3.545150565795289*^9}, {3.5486497044453716`*^9, 
   3.5486497048823967`*^9}, {3.5486498550369844`*^9, 3.548649897540416*^9}, {
   3.548649939848836*^9, 3.548650005988619*^9}, {3.550786780608042*^9, 
   3.5507867972639947`*^9}, {3.5507869371899977`*^9, 3.550786949571706*^9}, {
   3.550787006870983*^9, 3.5507870339005294`*^9}, {3.5508444250440493`*^9, 
   3.550844431156764*^9}, 3.551719224204878*^9, {3.5517254094302473`*^9, 
   3.5517254109363337`*^9}, {3.55231620515283*^9, 3.5523162071649446`*^9}, 
   3.711423682997941*^9, {3.71142408388387*^9, 3.7114242030136843`*^9}, {
   3.711424236650608*^9, 3.7114242624080815`*^9}, {3.7116552739119287`*^9, 
   3.71165534876621*^9}, {3.7117164960118294`*^9, 3.7117165103516493`*^9}, {
   3.7118433048494115`*^9, 3.7118433049714184`*^9}, {3.7119020276271133`*^9, 
   3.7119020298492403`*^9}, {3.712008034705405*^9, 3.712008035151431*^9}, {
   3.712062320738983*^9, 3.7120623739140244`*^9}, 3.7120624095150604`*^9, {
   3.712066474980592*^9, 3.712066478489793*^9}, {3.7505081923042955`*^9, 
   3.7505082503114595`*^9}, {3.750508289103134*^9, 3.750508334847291*^9}, {
   3.750508380488282*^9, 3.7505084534399567`*^9}, {3.7505188622798834`*^9, 
   3.7505188679108458`*^9}, {3.750519390456581*^9, 3.7505194048062615`*^9}, {
   3.7505195559522*^9, 3.750519585519608*^9}, {3.7505199358627377`*^9, 
   3.7505199514304185`*^9}, {3.750520105480631*^9, 3.7505201074999685`*^9}, {
   3.750525938141924*^9, 3.750525942518308*^9}, {3.7505381667572556`*^9, 
   3.750538207779673*^9}, {3.763767746562501*^9, 3.7637677567376127`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"252fa00e-3548-40ec-b81e-6327a71e0848"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DColor", "[", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "bi", "]"}], "'"}], "[", 
       "t", "]"}]}], "]"}], " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "I"}], " ", 
           RowBox[{
            RowBox[{"Da", "[", "Color", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "bi", "]"}], "[", 
             RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]}], "/.",
           "AdinkraReduce"}], "/.", "TemporalGauge"}], ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Color", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"bi", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7111642994797387`*^9, 3.7111643860246887`*^9}, {
  3.71116538155863*^9, 3.7111653936173196`*^9}, {3.7111655855452976`*^9, 
  3.71116558768242*^9}, {3.711165720831035*^9, 3.7111657746961164`*^9}, {
  3.7111658519165325`*^9, 3.711165855041712*^9}, {3.711167498395706*^9, 
  3.711167510553402*^9}, {3.7111675536138644`*^9, 3.711167601211587*^9}, {
  3.711167647155215*^9, 3.7111676491123266`*^9}, {3.711168046768071*^9, 
  3.711168058862763*^9}, {3.7113744420398703`*^9, 3.711374449652305*^9}, {
  3.7505085101828227`*^9, 3.750508532877696*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"451ebd9f-69f5-4f3a-94ce-2f941deee97a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintDColor", "[", 
   RowBox[{
    RowBox[{"-", "I"}], " ", 
    RowBox[{
     RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DColor", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "aa", "]"}], "'"}], 
            "[", "t", "]"}]}], "]"}], "[", 
         RowBox[{"[", "Color", "]"}], "]"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"hfield", "[", 
            RowBox[{"ap_", ",", "bt_"}], "]"}], "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"hfield", "[", 
             RowBox[{"ap_", ",", "bt_"}], "]"}], "'"}], "[", "t", "]"}]}], 
         "}"}], ",", "Simplify"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Color", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
    "fields"}], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.7111645574354925`*^9, 3.7111645699712095`*^9}, {
  3.7111646601143656`*^9, 3.7111646956723995`*^9}, {3.711165016059725*^9, 
  3.71116508975994*^9}, {3.7111651864034677`*^9, 3.7111652049845304`*^9}, {
  3.7111652473169518`*^9, 3.711165256065452*^9}, {3.7111657311796274`*^9, 
  3.7111657569270997`*^9}, {3.711165857127831*^9, 3.7111658599129906`*^9}, {
  3.7111676552636786`*^9, 3.7111676649382315`*^9}, {3.7111678861268835`*^9, 
  3.7111679136514573`*^9}, {3.711167949206491*^9, 3.7111679707537236`*^9}, {
  3.711168109839679*^9, 3.7111681108197346`*^9}, {3.7113744574197493`*^9, 
  3.711374488532529*^9}, {3.750508865943837*^9, 3.7505088676846824`*^9}, {
  3.763767781946999*^9, 3.763767797596356*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"6729dff4-8c61-413d-be27-4b66a886ca33"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "13"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "11"]},
          {"0"},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "12"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "11"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "13"]}]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "12"]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "12"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "13"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "11"]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "12"]}]},
          {"0"},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "11"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "13"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "23"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "12"]},
          {"0"},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "22"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "12"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "23"]}]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "22"]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "22"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "23"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "12"]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "22"]}]},
          {"0"},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "12"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "23"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "33"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "13"]},
          {"0"},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "23"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "13"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "33"]}]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "23"]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "23"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "33"]},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "13"]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "23"]}]},
          {"0"},
          {
           SubscriptBox[
            SuperscriptBox["h", "\[Prime]\[Prime]",
             MultilineFunction->None], "13"]},
          {
           RowBox[{"-", 
            SubscriptBox[
             SuperscriptBox["h", "\[Prime]\[Prime]",
              MultilineFunction->None], "33"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7539261989762797`*^9, 3.763767800520932*^9, 
  3.763779013090912*^9, 3.7637805276449013`*^9, 3.763817651304829*^9, 
  3.763850361786701*^9, 3.763851940218498*^9, 3.763852926197001*^9, 
  3.7649514473040333`*^9, 3.7656360195390406`*^9, 3.7657286723971786`*^9, 
  3.7658406269984922`*^9, 3.768932891206937*^9},
 CellLabel->
  "Out[91]//MatrixForm=",ExpressionUUID->"1b8e2ed2-6a8c-4055-ad84-\
d9fa8c280ed8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DD", "Subsection",
 CellChangeTimes->{{3.7308122301647825`*^9, 3.7308122628657265`*^9}, 
   3.731162255630625*^9},ExpressionUUID->"d8420746-1d2b-4a6e-a5cd-\
c35854950310"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUSYTransformFields", "[", "Operator_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FieldList", "[", 
      RowBox[{"[", "FieldIndex", "]"}], "]"}], "\[Rule]", 
     RowBox[{"Operator", "[", 
      RowBox[{"FieldList", "[", 
       RowBox[{"[", "FieldIndex", "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FieldIndex", ",", "1", ",", 
      RowBox[{"Length", "[", "FieldList", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.73163077582885*^9, 3.7316307863152466`*^9}, {
  3.7316310047349997`*^9, 3.731631006157134*^9}, {3.7316310576169453`*^9, 
  3.7316310811664886`*^9}, {3.731631162459132*^9, 3.7316311655688095`*^9}, {
  3.7316312115596952`*^9, 3.7316312122785935`*^9}, {3.7316312737246857`*^9, 
  3.7316312835694857`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"6102afe2-4a3c-46ab-bb7e-aba4b9b0d66e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUSYTransformJusth", "[", "Operator_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FieldList", "[", 
      RowBox[{"[", "FieldIndex", "]"}], "]"}], "\[Rule]", 
     RowBox[{"Operator", "[", 
      RowBox[{"FieldList", "[", 
       RowBox[{"[", "FieldIndex", "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"FieldIndex", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.737977589831004*^9, 3.7379776211947985`*^9}, {
  3.7379778794295683`*^9, 3.7379778794755707`*^9}, {3.750529529835253*^9, 
  3.7505295359938507`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"00d27ef3-f697-4141-a854-cb469a5df2d5"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"SUSYTransform", "[", 
     RowBox[{"Da", "[", "ai", "]"}], "]"}], " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"SUSYTransformFields", "[", 
       RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformFields", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "t"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformFields", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformFields", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "y"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformFields", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "z"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "t", ",", "t"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "t", ",", "x"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "t", ",", "y"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "t", ",", "z"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "x", ",", "x"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "x", ",", "y"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "x", ",", "z"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "z", ",", "z"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "y", ",", "y"}], "]"}], 
      ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SUSYTransformJusth", "[", 
         RowBox[{"Da", "[", "ai", "]"}], "]"}], ",", "y", ",", "z"}], "]"}]}],
      "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"ai", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7316312511900773`*^9, 3.73163130008272*^9}, {
  3.731631344322698*^9, 3.7316313603565207`*^9}, {3.737164630292021*^9, 
  3.7371646368411665`*^9}, {3.7378177847175355`*^9, 3.7378178743956647`*^9}, {
  3.7378180399131317`*^9, 3.7378181686244936`*^9}, {3.7378183040052366`*^9, 
  3.7378183290146675`*^9}, {3.7379150778530035`*^9, 3.737915156950527*^9}, {
  3.7379775135876436`*^9, 3.737977516081786*^9}, {3.737977639111823*^9, 
  3.7379776821352835`*^9}, {3.750529558692335*^9, 3.7505295639229546`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"5330f017-66fa-44b5-ac61-77cf73a1b0b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DD", "[", 
    RowBox[{"LeftOperator_", ",", "RightOperator_"}], "]"}], "[", "Field_", 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"RightOperator", "[", "Field", "]"}], "/.", 
   RowBox[{"SUSYTransform", "[", "LeftOperator", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.73163149613336*^9, 3.73163156604972*^9}, {
  3.7316317148186707`*^9, 3.7316317149435616`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"b1602277-9dba-4572-92f4-ad3bd60b11f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AlgebraDD", "[", 
    RowBox[{"LeftOperator_", ",", "RightOperator_"}], "]"}], "[", "Field_", 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"DD", "[", 
     RowBox[{"LeftOperator", ",", "RightOperator"}], "]"}], "[", "Field", 
    "]"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"DD", "[", 
     RowBox[{"RightOperator", ",", "LeftOperator"}], "]"}], "[", "Field", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.731631998334331*^9, 3.731632038105353*^9}, {
  3.73163219706538*^9, 3.731632198143784*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"b46f1bd2-7107-43aa-8ce3-75564bbc196c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AlgebraDDTable", "[", "Field_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AlgebraDD", "[", 
      RowBox[{
       RowBox[{"Da", "[", "ai", "]"}], ",", 
       RowBox[{"Da", "[", "bi", "]"}]}], "]"}], "[", "Field", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ai", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"bi", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7371651794635396`*^9, 3.7371652120755053`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"0ca8b793-2ae8-4b16-b431-64fa309077ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoloraumyDD", "[", 
    RowBox[{"LeftOperator_", ",", "RightOperator_"}], "]"}], "[", "Field_", 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"DD", "[", 
     RowBox[{"LeftOperator", ",", "RightOperator"}], "]"}], "[", "Field", 
    "]"}], " ", "-", " ", 
   RowBox[{
    RowBox[{"DD", "[", 
     RowBox[{"RightOperator", ",", "LeftOperator"}], "]"}], "[", "Field", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.73163208190874*^9, 3.731632106083152*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"cdc6b9a6-193c-4a24-9ddc-92d6d26fe4aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoloraumyDDTable", "[", "Field_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"HoloraumyDD", "[", 
      RowBox[{
       RowBox[{"Da", "[", "ai", "]"}], ",", 
       RowBox[{"Da", "[", "bi", "]"}]}], "]"}], "[", "Field", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ai", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"bi", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.742225289456066*^9, 3.74222531191052*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"5f37f0cc-af02-4538-9fdb-c1924caaaace"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Closure", "[", 
    RowBox[{"ai_", ",", "bi_"}], "]"}], "[", "Field_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"2", " ", "I", " ", 
     RowBox[{
      RowBox[{"\[Gamma]down", "[", "m", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"ai", ",", "bi"}], "]"}], "]"}], 
     RowBox[{"D", "[", 
      RowBox[{"Field", ",", 
       RowBox[{"\[CapitalStigma]", "[", "m", "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730807214417533*^9, 3.730807331182398*^9}, {
  3.7308074030266314`*^9, 3.7308074197801876`*^9}, {3.7308075808302245`*^9, 
  3.7308076139482484`*^9}, {3.7311621764190855`*^9, 3.731162176850258*^9}, {
  3.731606137574524*^9, 3.7316061481783457`*^9}, {3.7371646510922794`*^9, 
  3.7371646525301905`*^9}, {3.7371649720973473`*^9, 3.7371649806451817`*^9}, {
  3.737165124894317*^9, 3.7371651456635303`*^9}, {3.7371652459852505`*^9, 
  3.737165258017502*^9}, {3.7371660194119587`*^9, 3.7371660208653927`*^9}, {
  3.7379145580492725`*^9, 3.737914585006814*^9}, {3.7379155040703816`*^9, 
  3.7379155065685244`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"1919641f-cd20-4d44-80ff-57490c7afb9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosureTable", "[", "Field_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Closure", "[", 
      RowBox[{"ai", ",", "bi"}], "]"}], "[", "Field", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ai", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"bi", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.737914721265608*^9, 3.7379147450069656`*^9}, {
  3.737915477761877*^9, 3.7379154839432306`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"98af9837-98a6-46f0-b742-d2997bec9a6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Closure", "[", 
     RowBox[{"ii", ",", "ji"}], "]"}], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "0", "]"}], "[", "ki", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ji", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ki", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.730807563261525*^9, 3.7308075648818583`*^9}, {
  3.731162203432887*^9, 3.7311622145514655`*^9}, {3.73116262807957*^9, 
  3.731162636318469*^9}, {3.7316057578588743`*^9, 3.7316057585991187`*^9}, {
  3.7316061552178035`*^9, 3.7316061686856403`*^9}, {3.737165004444684*^9, 
  3.737165007788499*^9}, {3.73716515302348*^9, 3.7371651582582507`*^9}, {
  3.737166026709774*^9, 3.737166027584793*^9}, {3.7379145974845276`*^9, 
  3.7379145994926424`*^9}, {3.7379155245055504`*^9, 3.7379155317829666`*^9}, {
  3.763783507693712*^9, 3.763783512087421*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"7fad9241-a970-4a27-a4d5-593c425d9233"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7539261995487247`*^9, 3.763767810542584*^9, 3.763779013307599*^9, 
   3.763780527888657*^9, {3.7637835007777967`*^9, 3.763783513037222*^9}, 
   3.7638176515013275`*^9, 3.763850362009014*^9, 3.763851940461372*^9, 
   3.763852926481926*^9, 3.7649514475751057`*^9, 3.76563601972255*^9, 
   3.7657286725788975`*^9, 3.7658406271859217`*^9, 3.768932891530403*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"b9269617-486e-48e2-9561-c8b838951972"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Algebra", "Section",
 CellChangeTimes->{{3.550920278304533*^9, 3.550920282240758*^9}, {
   3.5509221619582715`*^9, 3.550922211396099*^9}, {3.551793495341796*^9, 
   3.551793495906828*^9}, {3.5594927244525585`*^9, 3.559492746318809*^9}, 
   3.559499496819916*^9, {3.7113930579483547`*^9, 3.7113930664148393`*^9}, {
   3.711393103948986*^9, 
   3.711393104741031*^9}},ExpressionUUID->"231a1b16-656b-454b-bdf7-\
3325c412556f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["D", "a"], ",", 
       SubscriptBox["D", "b"]}], "}"}], 
     SubscriptBox["h", "\[Mu]\[Nu]"]}],
    FontFamily->"Arial"], 
   StyleBox["=",
    FontFamily->"Arial"], 
   StyleBox[" ",
    FontFamily->"Arial"], 
   RowBox[{
    StyleBox[
     RowBox[{"2", " ", "i", " ", 
      SubscriptBox[
       RowBox[{"(", " ", 
        SuperscriptBox["\[Gamma]", "\[Alpha]"], "  ", ")"}], "ab"], "  ", 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Alpha]"], " ", 
       SubscriptBox["h", "\[Mu]\[Nu]"]}]}],
     FontFamily->"Arial"], 
    StyleBox[" ",
     FontFamily->"Arial"], 
    StyleBox["-",
     FontFamily->"Arial"], 
    StyleBox[" ",
     FontFamily->"Arial"], 
    RowBox[{
     SubscriptBox[
      StyleBox["\[PartialD]",
       FontFamily->"Arial"], 
      RowBox[{"(", "\[Mu]"}]], 
     SubscriptBox["\[Zeta]", 
      RowBox[{
       RowBox[{"\[Nu]", ")"}], "ab"}]], " "}]}]}]],ExpressionUUID->
  "277b53da-afe0-4aba-84d9-18ea9b108afe"],
 " \nwith ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Zeta]", "\[Nu]ab"], "=", " "}], TraditionalForm]],
  ExpressionUUID->"5162c03d-f9cc-4655-8b4a-7cb58dfa61e7"],
 Cell[BoxData[
  RowBox[{"i", " ", 
   SubscriptBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "\[Alpha]"], "  "}], "ab"], 
   StyleBox["  ",
    FontFamily->"Arial"], 
   StyleBox[
    SubscriptBox["h", "\[Nu]\[Alpha]"],
    FontFamily->"Arial"]}]],ExpressionUUID->
  "dbc8ffa9-6fa7-47fd-ae19-4332d29d2363"]
}], "Subsection",
 CellChangeTimes->{{3.5509202888331347`*^9, 3.550920307842222*^9}, {
  3.551726509418762*^9, 3.55172651497108*^9}, {3.55172724701795*^9, 
  3.551727256939518*^9}, {3.551740442654239*^9, 3.551740446534461*^9}, {
  3.5517456641776905`*^9, 3.5517456679599066`*^9}, {3.551746828906309*^9, 
  3.5517468399309397`*^9}, {3.551746922910686*^9, 3.5517469644400616`*^9}, {
  3.551747029989811*^9, 3.5517470380702724`*^9}, {3.5517471351348248`*^9, 
  3.55174713698293*^9}, {3.552135516245191*^9, 3.5521355169382305`*^9}, {
  3.5523184664433665`*^9, 3.5523184702165823`*^9}, {3.5528445658676643`*^9, 
  3.5528446946870317`*^9}, {3.5528447662901278`*^9, 3.5528447806259475`*^9}, {
  3.552844883411826*^9, 3.5528448852739325`*^9}, {3.5529249041473083`*^9, 
  3.552924922026331*^9}, {3.553299276425318*^9, 3.5532992830266953`*^9}, {
  3.7114276771497345`*^9, 3.7114277302217703`*^9}, {3.711427762959643*^9, 
  3.7114277951934867`*^9}},ExpressionUUID->"ee839256-59c0-4af4-808f-\
2eeb0ddadb4a"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Zeta]Gauge", "[", "Rep", "]"}], "[", "nu", "]"}], " ", "=", 
    " ", 
    RowBox[{"I", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]down", "[", "ap", "]"}], 
        RowBox[{
         RowBox[{"hfield", "[", 
          RowBox[{"nu", ",", "ap"}], "]"}], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ap", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711427734571019*^9, 3.7114278664925647`*^9}, {
  3.7637682858396177`*^9, 3.7637683123753223`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"4aaacd2a-c87d-4178-8429-0d34896bd975"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosureResult", "[", "1", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"AlgebraDDTable", "[", 
        RowBox[{
         RowBox[{"hfield", "[", 
          RowBox[{"mu", ",", "nu"}], "]"}], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "\[Equal]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ClosureTable", "[", 
         RowBox[{
          RowBox[{"hfield", "[", 
           RowBox[{"mu", ",", "nu"}], "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], "  ", 
        "-", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Zeta]Gauge", "[", "Rep", "]"}], "[", "nu", "]"}], ",", 
            RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}], "+", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Zeta]Gauge", "[", "Rep", "]"}], "[", "mu", "]"}], ",", 
            RowBox[{"\[CapitalStigma]", "[", "nu", "]"}]}], "]"}]}], ")"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ")"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.737165038807296*^9, 3.7371651069241114`*^9}, {
   3.737165285723156*^9, 3.7371653236966653`*^9}, {3.737166072620324*^9, 
   3.737166083371173*^9}, {3.7371664781159277`*^9, 3.7371664922267447`*^9}, {
   3.737166597004206*^9, 3.737166633087201*^9}, {3.737166738894637*^9, 
   3.737166787775541*^9}, {3.737166826249361*^9, 3.737166843063713*^9}, {
   3.7378157496841383`*^9, 3.7378157594706984`*^9}, {3.737915329230381*^9, 
   3.7379153297804127`*^9}, {3.737977916071664*^9, 3.7379779177727613`*^9}, {
   3.7501001982145677`*^9, 3.7501002006611834`*^9}, {3.750528941739594*^9, 
   3.750528945826005*^9}, {3.750530027234779*^9, 3.7505301164897203`*^9}, 
   3.7505385929377003`*^9, {3.763768317829911*^9, 3.76376832953308*^9}, {
   3.763817698868245*^9, 3.7638177016739407`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"d9ca9bdc-8da2-4819-83f8-678eab661f08"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7539262259790688`*^9, 3.763768332907206*^9, {3.763779013566998*^9, 
   3.763779028431937*^9}, 3.763780528191225*^9, 3.763817651644884*^9, 
   3.763817702999132*^9, 3.763850362475148*^9, 3.763851940736701*^9, 
   3.763852926870183*^9, 3.7649514477698207`*^9, 3.765636019863175*^9, 
   3.7657286727587557`*^9, 3.765840627483001*^9, 3.7689329007232656`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"58575858-6b0a-40e5-9a76-f620d0f6dd90"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QeYZGW17vFzj96jXPUIouJRUaIICAaSBAmSg+QgSEZAJEgUkCCSc85B
QHKQHAYQBBGQHAYVBSSIkkEMmN2X3zdnjzVF9dDTXamn3//zlCPTPVV779r7
C2u9613Tb/yNVTf7z//4j//Y4Z1v/M+qG+282Pbbb7TralO+8R9rbLPDFptv
s+lXl91mx00333T7z2/8tjf+8uY3Xle88atvf+PPKoQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgijln/84x/V73//++r++++vHnvsservf/97
9a9//avXhxV6yD//+c/qlVdeqZ544onqpz/9afXHP/6x14cUQugj/va3v1W/
/vWvqzvuuKN66aWXyjwSRifWC6+++mqZL8aOHVvWEyGEEEIIIYQQQgghhBBC
CCEMBbknmpVnn322uv3226uDDjq4+v73v1/96U9/Sk5ylCNH/eijj1aXXXZZ
dcQRRxSN0+9+97vom0IY5dC4/fnPfy7jw8UXX1ztueee1diHxlZ/+ctfen1o
oUdYLzz++OPVlVdeWR1yyCHV3XffXXQtmS9CCCGEEEIIIYQQQgghhBDCpCL3
9MILL1RnnnFmteyyy1af+9znqr333rvoFehbwujlr3/9a3XfffdVu+66azXz
zDNXm2++eXXVVVfFqyeEUQ5vpl/84hfVTjvtVC2yyCLV/PPPX91www1F/xhG
J//4+z+qBx98sPr2t79dTT/99NUmm2xSXXrppZkvQgghhBBCCCGEEEIIIYQQ
wiTx2muvVQ8//HB15JFHVqusskr1yU9+stpoo42qSy65pNTaq7nvBxwHbxB9
Cmhu9LHgH6OPxR/+8IdJ8o2RT3v99ddLvpVOo1/OsRnH5Rid429/+9vqxRdf
LLnjdhyv71a/oLfSKbmuv/nNb6rTTjutWnLJJav55puv2nDDDatzzjmneuqp
p8p3EkIYPRh/nnvuueqaa66pdthhh2reeeetFltsseLHYi7phzHhreaLSdFn
mi+Ml8ZiXjP9Ol/AsZrTzOu+I6+XX365HPdwdSTO2/tOrLec3zFXfe97Z1VL
LbVU9fnPf75ad911qzPPPLP4tDi2EEIIIYQQQgghhBBCCCGEEAai1nLoE3PU
UUcVD5aPf/zj1eKLL156Asj99fLY6hykPNwTTzxR/exnPys9Cm666abq8ssv
r84999zSy+Lqq6+ubrnlluqhhx4qeTKaC7m2gfJldBnymGrGnTsthhxlr3A8
tabEsf/qV7+qfvnLX5bzdYy33nprOccLL7ywuuKKK6of/ehH1dixY4sPgt99
5plnSt+Gwfby8Hn0MN77xhtvrF55+ZVB/buf//zn1THHHFPNM8881QwzzFDu
k/PPP7968skny3um1j6EyR/jsrGKhoU30wc+8IGifdxxxx1Lf6FeebHQpRjX
zRfGJOPVPffcU/3whz8s42Y9X1x11dXVzTffXD34wIPVY489VsZcvmMTmy+c
kzH3/vvuL3ORebPX+B6cr3n6qaeeLudiTvjpT39a5kljOx8UetRrr722uuuu
u8rPfEeuz/PPP1/0KIPVf7oGTz/9dJmPzLVvhTnspJNOqhZccMHiy/KFL3yh
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
3XZbR8aMiWGcoqGpe9zwR9lll12qn/zkzo5+7k033lR63hi/ZppppmqzzTYr
PiHDxZhMP7nXXntV0047bfF6aRyb+ZTtu+++RfvYjf5zreDjdd9991ULLbTQ
+OOitVl77bWLxqWdvZzcU5tuumnpfWe+0MtJD8R29C4KIYQQQgghhBBCCCGE
EEII/QfdBA8Q/XrUO/PHoB2Za665qhtuuKH6/e9/39XjUYfOH+Too48uuSp9
BOTHpp566lLn/8ADD3T08/m9yMPR8fBlcRw0HkNBT4QXXnih+NysvvrqRRfS
WFPvnOQAaXaeeuqpNp/J4HEP/OEPf6gOPvjg0o/DMboP5pxzzupHP/pRR/qD
6LGkH4l7rs47r7XWWkXvE0Lob/72179VzzzzTNE+fuQjHym90fiR8EQx5nVL
W1HPF+YvGkHjVz2e7LnnntW9997b0c/Xc27dddct14Cn1GGHHVb96le/GtZ7
mo+Nj3vvvXeZg1zbet6g4ZhuuumKd5Zz+93vftemM5l0fMe8YJZaaqkyTztG
34F7oN29CJ944onqrLPOKtpW10HvKD0Qza0hhBBCCCGEEEIIIYQQQghh8oNG
QY5I7XqdL1PzTMvRi1pn2o+XX365+s53vvOmHjfyknfffXdHP/+6664rego6
Fj2AxowZU45nKPAruPnmm0sd+Tve8Y5yfeuadXk/eU/n6fr3GvngE088seQh
HRufFOc/3J5KA0E3Iw+rJ4fcs9eMM85Y7b///uWedDwhhP7klVdeqe64446i
szCeeX75ofBU6ia0Eo6FBq9xvqBj2XnnncsxdhLj+1e+8pXS/46e4+qrrq5e
eP6FIb+fcY8OhmZDv55al+Nl/qAx5f9y4YUXtvEshg4dDT2J601joy/hAQcc
0PbPoe35+c9/Xq4xDYvPmmGGGao99tijzBe98DELIYQQQgghhBBCCCGEEEII
nUN+SE8b2o06X0ZfQU/QC48QOSm9jHbaaacJ8pL6RXz1q18tOpNOcuWVV1bL
Lbdc8UrZYIMNqscff7z0+5lU5NWeffbZaptttqlmmWWWCXxY5OB4F/iZnOVQ
3r8TnH322cUfRU5y9tlnr3bYYYfiC9AJXB+9J+SA9eRwfWh9Nt988/L3PBZC
CP0JTcFRRx013k9J35svf/nLpb9PN6F7NIbSMzTOF1NMMUUZv6+66qqOfj7/
Lno/ukdzqLmLfnGo6CdkPl500UXLHNQ4b/DI+sQnPlH8u55/7vk2nsXQ+cPv
/1DG7I9+9KNFX7LMMstUZ5xxRts/p9YrbbLJJkUzVM8X6623XvEFamcPoxBC
CCGEEEIIIYQQQgghhNB7eI3su+++1bzzzjs+X0bHcdlll1Uvvvhi149Hr4Kf
/exn1XbbbTdBXlKedL755quOOeaYovvoVP31D3/4w+prX/ta9cUvfrE68MAD
i2+IXOmkot/CRRddVC244IKlhr45x7r00ktXZ555Zl95j6jxdx/QDPFJOemk
k0qOsFPIS8o/170ivOSE5YaH6oETQug8xsnah8Rza4zbbbfdqrvuuqurx/GP
v/+jeuSRR6pdd911gjGWjwk/k0MPPbToSoYyhg+G2267rfT4WXLJJau99tqr
9OGjRRkK/t19991Xfetb3yoaFrqQxnOaaaaZqs0226y6//77O3Y+kwodrLl6
5plnLnO04zN+dwLz/j777FPNPdfc46+J637ttdeWXlYhhBBCCCGEEEIIIYQQ
Qghh8oAW5Ne//nW1zjrrlD4yde8Cdezq7YdTVz5U6Dp++ctfVjvuuOMEOTzH
9Z73vKfUY+t1o59BJ7Qseil997vfLX0qhpKPo0lxDjfccEO14YYbjr+ujefx
gQ98oOTj5CP7ie9///tFdzPllFNWK6+8cnXTTTcVrUmnoBE6/fTTi26q0QuI
fqgfei2FEN4MvcV5551XesjQr/DG0Pft1FNP7ajurRX0HDxQdt999wnGWcfk
2NZdd90yzr76yqsdmS/MVcYwepmrr756yO/jPF599dXq6KOPrhZbbLEJzqX2
8NJTh9/Nc88918YzGB50LLzTPvnJTxYfr/32268aO3ZsRz6LRxfPsJVWWmn8
daGB3Hvvvcv3EEIIIYQQQgghhBBCCCGEECYP5KDuvffeav755y/16zQWcn/y
UjQsnfI8mRg+Uz5v3332naCnQp3Lky/Tx+DOO+8sx99u9CfgQ6Mn0GuvvTbJ
//7vf/9H6Ytz0EEHlX45zTX1ekPMMcccpT+Sngz9xPnnn1999rOfLX4sG2+8
cdE4dbK/j2t9yy23FG1SfX2mnXbaao011qgeeuihjn1uCGFoGJ9ffunlotvg
v2HOMMZ9/OMfr8aMGVP8tLoJ3SBN42GHHVaOpVkzyCdko402qn784x8X3Vy7
MYa99NJLRVviOIYKHxdjHv3gVFNN9SZNjr/7+te/XnxHun2NJ4ZruvXWW1cz
zDBD9d73vrc666yzyvXoBPRTvkf+N/W14QfEw+vuu+/uyGeGEEIIIYQQQggh
hBBCCCGE7qN2/uKLLy519XUvBr0LDjnkkJ71uqn9TE455ZRq+umnL7nSxpwe
T5ZZZpml9C844YQTSn8LfSX0oVHT3usePbQ1runqq69edDfNWpxPfOITpW+R
3km90AlNDB4yvHj4oxx55JEd7d8Eecknn3yy9COprxMdFS3NrbfeOuT+HCGE
zuCZpLfYYYcdxo9peuDoQ3bHHXf0ZPw1X9BPzDjjjEUn2Dje8gjx93R5xx13
XHXjjTeWsZdWsR/mixo+YDzAzMXNehzz8qKLLlqdeOKJfXXMMEccduhh1Zpr
rln0JHQmndLZmIv069MHsZ4vfN/WA+auzBchhBBCCCGEEEIIIYQQQgiTB/KR
erjMMP0MJSc0xRRTVIssskjpq9Nrrr322mq11VYrPXiaeyzIYclfzTXXXNUW
W2xRHXPMMdU111xTzkePCT4i6tb5qaiXL1qMLqT+fI66/G222aboVZqPW35y
2WWXLf17HF+/oZfUmWeeWTREt912W8c/Tz5WzpNmhqdDnb+dZpppqssvv7x4
FIQQ+gf+TFdddVX1la98Zfy4Rm+43nrrlX5vvUIPtLXWWutNfdwa54tPf/rT
Rf941FFHlXNwvI8++uj4+YKfSj1fdFMrQpty5ZVXlrlXf6bmY6fd3GWXXaqf
/OQnXTumwVL30LNm0F/p10//uqOfZ744+eSTq3e84x3j5wvXh5fYUPzTQggh
hBBCCCGEEEIIIYQQQv9x8803l7xenfvjhcFHhM6i19CjnHbaaaWPULOnSa0J
kZukc/nYxz5Wfm/eeectPWm++c1vFq8WvXt+8YtfdK1HkhyouvrFF1+8aIJa
5VK32mqr6vnnn++r3hA1dY8MXgWd6MHRCvniU089dYIeTPwdeCc8/vjjXTmG
EMLgMJYaW5dYYonxY9unPvWpMubyxeoVTzzxRHX22WdXn/nMZ95yvtC7jIfH
3HPPXbSSvGWMN7STtHzOkbakGxj/6PWOP/74asoppyzeK81eLHrnXHTRRcPq
W9QpHD/9iDnDq9Pzms8799xzy5qFlqX23Dn88MOLJimEEEIIIYQQQgghhBBC
CCGMfC699NKSj5xqqqlKPui9731v6Xnzgx/8oNeHVnJ7DzzwQPXVr3619Dpq
zku2ylPKa8lvzTHHHNViiy1WNC38Wvbcc8/q2GOPLf1+br/99tLLphM6jaee
eqo677zzyuc351LlI3m06B2h/0E/9YboNa7ZnHPOWXRUrpV87q677tqX/gMh
jGaMy/qAGePqsY1+kI6AlqRXGM9pULbccsuiURnMfEE3Rz9Hh6NvDw2n+W+P
PfYoHl+0I/rk/OpXv+qYN5S54N5776223377ckzN88b73//+4tPCH6vf+tD1
issuu6z0nvvv//7v8T5ytEi+qxBCCCGEEEIIIYQQQgghhDDyOeOMM4q2ovYO
0dNADu+uu+7q9aEV5CZpT/SsUEcv79iq1n5iL79P3zLzzDNXyy23XLXTTjuV
3jnygvpJ/PGPf2xb7T2NzLbbblvq/ZuPgxfA8ssvX2rJw4ToqbHUUkuN76lB
z7LBBhtUV199da8PLYTQAE+QjTfeeIL+PTSDxrXf/va3PT02PY/0I3N8H/zg
B8u4P5T5guZwxhlnrJZZZpmiL9Ez59Zbb62efvrpMie106uFB5Z5eIUVVmh5
PLN8YpaizeHzFcZx/fXXl/58dc9B37M+V3S5IYQQQgghhBBCCCGEEEIIYeSj
PwTtwNvf/vaSD5IXOuqoo0ovnn5A/fkrr7xS+j18/etfr6abbrrxxzoULQu/
GfX33kfvn5133rm6884729av4cILL6zmm2++8XXijS8eI9ttt131ox/9qC2f
NTlx0003Fa2S7yaanxD6F+PxqquuOt47yYsG44c//GH18ssv9/TYeFy9+uqr
1Q033FB94xvfKNrF4cwXxvFpppmmzBf8Wmha6Fl8RrugizEvONZWx7LAAgtU
J598ctHQhHHwXdloo42qj370o+O9zpZeeunq9NNP7/WhjXj0heI9pEcUjS+/
oBBCCBNif0qHaj3w4gsvlj/1JPzb3/4Wv80QQggjCrUg3erDHvoH+77XX389
33sIIYQQQuhr1JQfccQRJV+nn4F8EB3B9773veo3v/lNrw9vAtT50zoceOCB
1brrrlv6WHz4wx8e7yMzlJdeSp/+9KdLHwmeLy+99FKJPw4FMUs5HxogfSDk
1Zo/jz8A3ZAeFWFC7rjjjpLL/djHPlau1Tvf+c5q4YUXrk499dReH1oI4X8x
zr3wwgtFM9CoD9GPZ+zYsR3p1TYUnnvuueqWW26pDjnkkGr99devPv/5z1cf
+chHij5uqPMFDaT+Q/rc6YMmzy/2Mxz8e55gq6yySkvtIz3NiiuuWPqrtVM7
M9LRh4kGlWeO6+ReXHDBBavjjjuu14fW99S5V5oz6zy9EK1JfvnLX1Y/+9nP
qrvvvrusta644orqnnvuqZ599tnENkMIoQnrnYcefKj04TVeXnfddUXnet99
91WPPPJI9fjjj5f5/fnnny/awOhbQggh9BPW97Qr5iq93M1f9ghh9PDkk0+W
ms5HH3207A3lB7JWCSGEEEII/YT1qX0KXUhj3uzD//Ph6rLLLis19/2GdbX1
tbr/fffdt1pjjTWK94lclrpsXjJygXQ5b3vb2waVm6TfkZ/kBXLzzTcPOVeo
ZllOSE+mVp8jzzbDDDNUY8aMKfvFMCH3339/tffee5drVPeJmGuuuapjjz22
14cWQvhfjHNiXbxJGsc3PV38fT/FvmovL3mlAw44oPryl79c9CzN8wXN3GDn
C7oS88Waa65Zcv20j8NBbkvccKGFFhrQE2aTTTYp5zFUjeXkyMMPP1zWLp/8
5CfHz6+f/exnq0MPPbTXh9b30Nvy2zv//POr73znO9VWW21VrbPOOqWHFn3w
HHPMUXpNzjTTTEUzfNZZZ5UazRBCCP+GdtfaZ+655y7jJU+1WWaZpdRH6LW4
9tprVzvuuGPZx9i3PvPMM23tSRhCCCEMB3sC+1A91/Vrte63nw+jh+OPP776
whe+UNYz9oZiDlmrhBBCCCGEfsL6VA5ur732mlDH8uEPlx4+/VJX3whpuDyq
3B9/FrVu6tS///3vVwcffHDxVVlyySVLPLFVbftALzlM8ccNN9yw1CMPRYOu
rl5ubdttt235GXo3yf2qdU5t85sRD/Yd+u7qPhGzzjpr8pIh9BE0eMbIZt3F
Bhts0BZ/knZjnjOX8ZQwX9x1113VpZdeWsYVferk7uXsaVMmZb6YfvrpS+5f
3dpwapbUaeuBRD/Q6nM+/vGPF21kaqMm5Oc//3l15JFHVrPNNtv4ayV/uM8+
+/T60PoO6w19E61PLr/88urwww8v976+ffKvrpv7jBeaOZd+VDxTPNv68MYb
b4yGKoQQmlDDfNBBB5Ued0sttVSpqzCe2kdPPfXU1bTTTls83BZZZJHxmhYe
qFdddVXREmZcDSGE0Av+/re/Vy+9+FLxEtOH9zOf+Uz1xS9+sdpzzz3L3jS8
NbW/pT0WH1j+ljxNfvrTn5b4gJjvQw89VOLW7dKFiIPXe7qf/fRnRXM03NjL
RRddVK222mplveJP2ltrFBqnEEIIIYQQ+gH7FzG4XXbeZYLcmd4L8hYjpf5W
P085SjoI9fEXXHBB6S2gznibbbYpucYlllii1BiLK7bq9+P1rne9q6zfzzjj
jHJdJhX7GHX/ek60en85orXWWqvsO8KbkZfUk0lOua6vd8347oQQ+gN+VbSD
fE0ax7eNN9646EX6vX7HOC0+ZxxWH33hhReWOiT6B3E8tUjyUeqp9Yf7r//6
r5bjuf5EtI8nnXTSsPrEmWvOPffcEj9s5eHFY+Swww5r4xWYPBAnPPHEE8u8
XvuqyRnutttuvT60vkGs0zP5xBNPlHvdfSQ+yY+I7sf99e53v7us+fjayLVa
v+y+++5lLj777LNLXyF652ioQghhQuw/H3vssbJntnfcf//9i7/VyiuvXH3u
c58r+sApp5yyjLX81Xi/2dfwhtNjVn5Ln0b77YyxIYQQuoH9QV1HoYbvf/7n
f4r+cttvbFv2+Oa20Bpxjtd+91rRrIg964uut6AaGfsme1P1Ajym1aHQrj7y
SPs0IWLe4s0+Qz2HOMbTTz89LD9cfWX1cVfb4D5Qz3DyyScXPU7WJ2E4eF7c
+zx+aL1417tfxSbUl/nTs8Sv0M/57ht/jFEhhBBGD3WfS/OFNepbzRdi1H4/
88XoovYPkbtrzJ3JBVkf93s+8q2wZnKf33LLLdVpp51WffOb3yz1xeqN6Vnk
J8UVG8+dh8umm25aepxP+uf9qdQ0iE+2ynuq0dtyyy2Lvr0T2GN4hl977bXq
lZdfKetAOWeafX+nFsBLXsu1aXz5Oy8/97u/e/V3ZfzwHv60nuz0/WAPdeKJ
J43vEyEv6XuSUwsh9AfWFNdff32JdTT2v9lss81KbfFIjXVYAz3z62fK3Hf6
6adXu+66a/GrmH322cfrWZrniymmmKL40KitHir0e0cfffR4X5HGl8/Um+CU
U05p45lOSF1L1jjeN88b9fzQat4YP2e88fv+Xf0+/s4ao1PeY7RD8ob0RvU9
yPNs++2378jnjUR8Dz/60Y/KGs/zKn861VRTlV5Vrpf5le8KDZe1y4MPPlj2
B/YGnnP/PnuDEEJojflNjsc8KJbCJ9S+85FHHqluv/32kmeiabGGUENhX2Ne
N1fZE37pS18q8zstTMbZEEII3cAa/+qrry5xUboFvXb5NIp/2t/FN3pg7HWv
ueaaoln97Gc/V/bvavDUCPBqpV8VS3dd6YPmn3/+8VqTdnDeeeeV+ITP8zkL
Lrhg9d3vfrfUdwwV6xjrEJob3uHvec97Svxjv/32K3/fb167YWRgHLE+5kvk
GaC72uvbe5W4BB9DORNxNM/St771rVJvo7ZLPEIMIoQQwujAfGH9ee+991YX
X3xxddSRRxVfcL1O1EubL9Zff/2STzdfHHLIIdVZZ51V3X///SUGE0YPcld3
3nlntfnmm4/Pm4mxTTfddEVbPlLzkTWeBetu6yf9Lvgu0pW7362Z7NnUJDfm
DeV35HvU508qPud73/tetcIKK7TUsci3qRWnJesEcsieYTnm88+/oPQ3veSS
S6orr7yyGjNmTKkXpOn58Y9/XL5f370eG/4Ub/UzvzPm2jElp6VXk/ew7lRv
ID/ZSVwXeck6nyvPJk/MhzuE0B8YR40NfEIa+9+If43kOaOeL2gzjKPOU/8k
Y+Amm2xS5sXm+WKcX8rnSq5qqFh78XCu+6k1z0crrbhS2dN3At/Xn1//czlP
PmbOlbfwZZddVuKb5hI+HrQQt912W6nRM194+f/mEj/3e37fv7vowovK8apN
cw2HUx82MeQKxfLq+7CudXcfhnH6KOsRax1zqrm01mHRsoh7brfddmU9xPua
J0DyqCGEMHzo/mkA1YpYL/GV5PP2gQ98YPw6gp7Ffy+99NLFx8X+1D4yDIz4
ltwG3WzyaiGEMGlY59vj2u/xq55mmmmK9mL11Vcv+zi1r2Hi6MVUXz86EvM4
T29ze3O9S13HKBY73F5N5jzfj/zNBz/4wRKDqH3U1fyJ6Q4HaxbxXu+vplBt
p1oH6xd7yvQYCoOBJkqdvLyCuD5/fDlIum33E68fGimexjRfxh/PCF9isYnl
lluueMN++9vfLh5BvPbFfKKtG1nYB9X1beP8uvP9hRAmxLpGDPrHt/64xK3V
Vhr/V1xxxfHzhX4p5gu5mHq+kFdfYIEFqmWWWabML3IpPOTkH9Rkmi9GcFoq
vAWv/+n1sjaQ56jX2urF3BvDXQv3K+ZUfRzsJ2i55pxzzgn2GvYg9nS0X5O6
XlJ/zktSD6NWOhZ90+nGrMU6gTUjHcoWW2xRtDTLL79CtdJKK1WrrrpqtcYa
axQNmz3XuuuuW7Rsvvf6td5665V+Gn5njdXXqFZZZZUyftD760PgvMY+NLYj
x13jush/Gqsav4+tt956RPs8hDA5QW/Gr6Tu51LrB/Rwm9wwX9Bi0AGqHWnU
7tS6T7GknXfe+X/XS5M+Rplr6Qmsy5rnDNfVeH355Zd34OzGnZ+6ceP7uDlj
+RJnUD9u3F9zzTWrtddeu8wN5ojGOcPLsfm53/P7/p1/LwbhnMREO9VjnWcI
nab1beN8QXPUSR+YfsdcKWYg9uM7pYVq9pzTE8xaRLyyX6+T8xAzFW9/4fkX
yvqmX172W3UuVd6ZX53j7ddrGfqLCe7tF3JvT+7UPpnm2SWXXLLoCOv8U73v
thc99thjy5gcD//WuCY0t/pg0NK6X0MIIQwO87j5XezX/o3nhpd9Gz+PTter
TS7IzYoLyLPT/7h+8ikzzDDDm3oRm+v1GORHMdxeTdZlcjRiuo2fwfdlp512
KjWJ7YAnj7zQhz70odJDWVyWb5x4gfVM1iehFaXf1htrXfeJuiZxQboUnkS0
Xu7TcTnIT5Y1r+fCi6al9hZyz9W+sTxjaVvUW8sP8AXy7EXDPDKgXeFxffPN
N5e9TXrVhRBqaq8u/Tj42vNTX3jhhct8Ibfy7/lilpJzqucL6xHzBY9x8wV/
W/kSf/o9Ghh6GO9rTZv5YvJEHPXaa68t2obG+m/rCevtXtCtpbG51LxqbVRr
6OucrJgi/yK69EmJ3dpfHHfccdUXv/jFljqWRRZZpOwDOlXrIL+stlofitrT
kucMnb6xoF4betblX1sdo793PWh5/BvvoZabzl89fifht8n7pc6P1y+6HN/F
SO9zFSYv7ONrvye5+l7nnyb15ZjlrBz/pGgw9EU74YQTJvBNeve73110C12n
S/OFPB7vEXty59roy2K+0ItuqGMUXxPvO93Hp3vTeMxD42tf+1rJ23QC58Wb
a5dddikaZ2vCxnmjXkuKczbH5hp7SonTmVvMMf6t96GDFBdtl49yM+ZRvmGN
/a28aDStbUbrfKGvBU8dcdX3vve9b6oNXHzxxYuvr++ln2MKzsO9aS9iXcXz
qB9ePLdPPunkElOz71Jvxv/Y8fbz9Qz9w7PPPlvGfev1fru3TzrppOqcc84p
Wv/c2+3B2sp8RHvJJ9ce0bzaOIfad+lLQF+oZ168sSak7pt7wAEHlPosay5e
cCGEEAaHvKJ1tboDez17BLp2Gst4Mg6eOl9vHyq3rp+PGKk1lNhp455LbmWF
5VcovzdcPbA1hFrleeaZZ4LPoJ9RhzycvkKN0DrxWdVfiJZADED+iNaW/nq0
7q/DxPFM0Fltt+12RadSx4TUgKmH2nvvvcveWTztgQceKB6EPAv9N99CPbbV
hdFpuafV3dBR0cB4jw033LDEfdSXhf7GWGc8MteIR/nujV8hhAB5E/v4b37z
m0WvWPe3NHfwVeApcfbZZxdP+Mb5wlrr0ksvrY455piSv1BPy6vFelbeRB9n
Xi3mHPMK/4ow+eH+kR9TZ92YkxNLU+vUC6yNu1H3V2vAzjzzzLKHs1ZqjCnq
2SiWOCk9Ebwf/zy16K3yfTyl9W7oVH26OLO1HQ20WPRRRx1VHXrooSXux9Pv
m98ctzacddZZS8y0lYZFjlYfVzoeeyV7stNOO630vuh0nQYPKOMVHVXjcekT
4XtIPWjoJ+q8hLome3vPSq/zUJPyksumR3H8k6LBeOzRx4rXQ+2b1Es/FmNC
N8YFORTxPz7Caq5oNhrnC+stMSrXcVLR04VOsFVfIft3fdU6pSF0XvSX99xz
Txnn5VTdxwcffHDpie24+NDQRlpbtprX6t4IatJ23XXX8m/FIuRBaSU61VfI
XCcnKLbWeDx8YkbrfGENYL3PH4eWqPl7srbnuyg33e9xSLEq65Bll122xFIX
Wmih8lLb1atXfQyLf3Hxss7jdUcHTvtPx3fQQQcVbYIxVR2AZyt1i6EZ+if3
i3uo3+5tGovme9tzeOCBBxZNGc9HWlb39mgcY4eDHKF4ivWTObVRD1vXUIj3
2pdab4R/Y063nnA/yr+KT8mXhBBCOzCf8cIS66JPUBuml4q1nPjUs799tngB
GItG2rqu1lKq39thhx1K3YKYv328OOFDDz004s6p33CPqN1o3iurJd5qq62G
XcPo+5PD4XuqxqRxb6eeQz7I/dkO6viW2JY1oRgPLYv6FHHuF198Meu/MJ7a
K8/9LwYjJ6kWyjpXDInG6pprrqnuvffeErtpjDn6t/6bvt94S2dn/y9Gab1H
s/Wud727xMOMW/zi5TfkJYYScwvdwVhkv6g22fi0xx57RH8UQihjvjiSmBIP
dXF8mkd+D9ZKdNXiZHIT9v2Ntan1fKEem++XmjC/K+/Am6LO6ZsvxAqsWQ47
7LDyXomrTF7IedDAWic0ahmsE+TN/tnFPnZ1r5/jjz++qzVW8g30vZ6fxn0H
bY/11KSskTxndF+0p63yffoN0SF3ygu59oewV6KB/fnPfl49PPbh6sEHHixr
R2tD8VH1/daXrWr/1Wrr084HTn6V9s1enkan03kvsQL6Gz1ZG+9H+fH4WIZ+
w9hw5hlnVptttlmZe7+w0Bd6moea1JyVmlZ7THpXmr3B1lsbq88777yidW3s
52Jc6dZzal2jZ421Tqe8SlpRz5fWRo1jJw2HsXIoayRxKTXYjeNeo46Fz57x
uFOIRclJugesK52HmKYYgZ5H4p60KXSYreY1NTM8UNTwW0/6t+ZONfyd7O/j
eMXTGu9D84U18WidL/Tms4aacsop3+S5pqZOztx6fyTEH+mpaGpppOjGxNzt
TcRSPRditwP5yg3kGeTfeQ/v5RoN9uX3aX/5FfrMZo+b+iW2bGw1FvoePDu+
k26sn8LIQQ0JPSRPjn66t83jA93b9kiOWZyA3tE+zVrg96/l3p4U6r5v5nV1
2s3fsxyYPak1jt8N4xATN57K4dFoysVab4QQRj7iZ2Jj4k32Ib/8xS/LGGjt
1Km1vPe17335pZdLfk1M3J5HTxXewPSG8qXWcnrp8jn0M7E0exzzn2PmQdDv
vuWOjy7Bfr/ufWMctXcTL8xcM3zUB9D7NseTxVrsZ2g/hoNnQV5YLWJjX0Lr
SLl9z047nxX3jOfCPSMv4J7xWfrVyhGIG4Rg7KBBEY+TQ3D/G2PUoNBBiQlN
asyhzmfok6UOV57TfqXen9iLqNEVrzJ3hP7DeGQO1RdEjNy9kF6gIYxuxOeN
AzSP8gry0dYXei7TLso9j+sRMPj3rOcL63c57Pnmm6/E1ur5ghaSH5Q1WrQs
kw/qDuSqttxyyzfF0eg7/Lxb8C/Uq1VOyr3WLfgU7bvvvmWeba7pVl8/KV7a
fld9mH/bKg5sHjend6qv0GCoe4KoD2g+PjFV19490Qvkc9WF8Iaq4/Ni6+K9
IfQT8jbmYWOWHlyDyTcNlH9S5yIHJZckjzWUXFSr3JTa3oFyUvXn+2w11+Z2
MZLBQJ8gFz7XXHNN8H70A93q5yKfYZy1t/3Wt77V8c+rMUbRdDRrTvhf0OEN
ZT9tr2c919xPrdYW8qPqZd2xGMXNP7y56LVa3UfiFvz9ur0/NZfJBzf6d4mz
0RCMVq644soSl/ZcN39PfBr1NbSuGQnQjNF30RTzhhA7XXrppcs6ynMvBt/K
V67Vq46/+nf2Td6LRn+llVZ6yxd/hGWWWabsg6wTedY1xpAbX8ZcP6e90duR
poVfppx/vFlCjdis+hDPavO9bV5177iPBntv157bQ72355133hJ3tv4Y7L0t
jswrzNwUb5bBU/fH4X9m7mweq32f6onGjBmTmG8D9s1qevXOtv5S82DNFUIY
uVgSmTto0qz3eAarrxDT5gMmby8+3e61Uz0Ojx07tvgAW6eZD62TeVKbD8XW
1SxYa/r/M844Y4lP+R1zrb0GfYJaCvn+fl7f2berV3VtxdXs/9dYfY3ie5C1
aXsQx1bnIpbaOKerbbz88suL3mk48LuQ55H3aYztWC/I6bfb67vODfH43Gmn
ncraz/rQ86C+UN/JMLpxj9CwGAfV6tKwqD/h5ysf6WdD7Ula+yBb59ERLr/8
8uPjmvYivKR4fETP3J/4XvT8UN9jDLSnifYthNGLMV1fQpo2OkdxWZqTb3/7
28UvxT5/qB5b3lsORo0rnxc1L/V8IVYs780zXmw5TB7IT1kfqGtqXHPrTyVP
Odw196TAi93ekM6clqpb/OrxcTXdPrfxGtifvvrKq5PUK9Z6X40G3UWrOLC9
hti1+txecffdd5fn2J68Oadt/aneRF/UXkA/U9eKOCZ1ivLxjjeEfoLmw/0q
72SeHIqGRSxJXMDcyoPT+OD95JXE0waTh2r1ksPyHp7nRt/65pd4hM9W6+B8
BjvWWYOIX8h9Nb6fnJy8y1/+0vm6NOMUzaNxW5+UbmHs5kXj+2o+dzXWQ6lp
05OcbtRarvk7kuOSxxdr7BX0rPopybe2uo/1VHJdhhqrGCriz9YKtSbTsdCA
9aK/Vb9gbyC/3JyLNg6IX0+KXq3XGEuMsddee22JAfO6UyPL94fu6+ijji5a
NvqvgXLvXnxo1EO6V+SO9Xb0XpdccknRX73Vy+8Zb8TR6KbEi2nn3Gf6T9IN
0BDU2sHGz6YLcHyeYfFn+oXh1mSGkY98Aw29uF7Le/voo4snhz3RxNYX8iX8
1Wjxh3Nv2wMZO9zbu+22W7m3N95o47IOqesgm49DHNm9rb+LPoXqc81lYXCo
6d95550n6Glbv8xpxhr7yTAOngFiFXIXtF7WTNaiIYSRi30Tb03PtrWr+KN1
kzlnttlmK7VVau7bWVdn/jX+qunaeuutSzzdXFbn6b3Mb+ZXfzbPfX6u1pOm
hVZZHYN5U+xcPWi/zYPOV08P/QLlFNXNuLbqxuhv4sXSHsSx7bOaNchbbLHF
G/vVh4fdY9dakc7LXqPe87oX7YPU9nSqztj9Y60qvkRDo77GPMx7Rs6o372I
QucQ+7F3EXN0T9AZ2+vygG9Xf2djv/ob3lg8Zc0P7n/jmH419j9qzLodgwoT
R48F45UYjJyafGOn+oyHEPof683LLrusxJbMFzSP9OvWze2aL6xnrUus79UK
2UvU+RSxWjkjsfD4eI185C1pn+y/Gtfc9jnWJd3Yi7lnrb3pO+qaQmuVbqGm
m2eo+otaO2F/Kk8xqTUgzsWeXL2+fUZzbkVM2vuqv+8VPFGtK2jgGo+NVk1e
mO6+V3vaO++8s9R3qvWsc2+Os5t56hAGAz9hOadWHhrNL2OKdbzfVXMt76P/
nzoCcSRzLZ8mPb/OOefcN8bei0ouajB5qFYv4yddBV+tgXoTiEPQsqlBE/8Y
5+E2uLGOvlGdhZhj43uuvfbaZWzrZL/aWm9rzH7/+99fxqyDDjqoY5/XjL20
fGH9vYsjWSNtu+12Q+6hY+8tR6PWxL688ZrSOlnvudd6heMzpzV/385dnFfv
4z+/3p7156TgHqRxnGmmmcY/Z9YQ6sZGK8YU82fzc29+Vw8zudVd0nfxxPKc
DDT+WlPSx/7+939o27nTAvG8v+eee8ta2XXXQ17+2TPRrB90fPIGapPqHvaT
0/cQ2o9aAvmJ5jmh8WX+23333dv6XNuPubfFoWlc1Mmosxzo3uYfwh/DWkLt
vHs73ixvjdyQed06pvl7NYarh0id6Tjc23Rf1kLWrcZaa7HkX0MYudgziSfT
bNb1S80vuXM6+uHW1dXeEvwBaDpoCMXRxfvMseo+jC3mOfNqXVNSe6T5e+Oy
8drvN6+x/b09kvmY9lpsVf6113Oh86afdr6O0XHTItBW2PuH4eMa+57FsXk2
WhPVe2T/3xrKGm2oXrX+nT0HnXHd38f701e5b+lJrLs66YVrvVL3jan7T6qZ
sv8R985+ZnRRj6c0iMbvuu8oHxb9yzox7ulPJOcpX1M/A160LXT4Pjc9TvsD
94eaDHOneUeMRGy41/NhCKH71PMFz7pNN9205KfUQovN0px0YlzgX6cmzDq/
MUZsnlJ7JY+X+WJk476x9lXv0Lgf0ydDTtWaoNPUuil7LFoptYW877sFHyP7
zlo7YW1kD+veHyo8SuUsmj3v7W/EpdWW9GLN7zPPPffccn7N9QK0S/YkYgq9
4tYf3VptvvnmZY9d17zYs3XTnyeEwUA7Kl/e7GvUmOOvY2P2XOJh8jzqnmnF
nnjiibKmb+c44L3ESuqaneYezY21ZGKGfDTUpE1qnRvNLN2FuovG91199dU7
7vdgzWHtIS4khsPDxv61Wzg//jV17zPX0hqJzmM4uGbGPmu7xmtan6P5qFdz
hmOju2q+18WyzHNia72A7rHxuMRn+R3vvvsePTmefoCPgvr+5n5i7iv1MJNb
X1C6XP2uWvVRql+8UMTa2lnPaxyyJzOGi+GqMVAPZu1qXFUv1pjn8H3QDhqT
+Y4bo7vZtzOMPH5www/KMzux3ll6Aqp5a2eNm31h471tH2jPQr/p82j0m+9t
z597mz8RLW3qIt8ae1/9KFy35vHa37nWdEFh3HjLC9h6w9rVmC4fndxZCCMX
tfxijfbIA2mR+YHZ7w3Xx84YYt9tr6aexBhrTabGRK5NDJLnnj55fAB5Yakf
f+SRR0r+lOZDHl//XH6czWvO2sNFLI3uU1yV1q6X9ef/+ue/ij8qfwT9V11j
64mFFlyozC3xs2oP7i17Kzp190U9n7ve9qRiFH5nqPOVPbi4kXlPjLp+f/eu
WA89/3DefzBYE9JmeU7U7tj/21dap4gHTYp3eRj52L8aT9Xm6r0mh0Kr4O86
tbe1rzA2u+c8V/XYS4tI22yMTt+a3lP37DvooIPLPKvOQQwzGpYQRifiHXI3
1sXWDeYLOTT5/06tkb2vdTydZWP+QgyLD4z4sRhXGLnU+ij7usY4Gg8MHgHd
8A2xLrGfou+wp5QbFS/tFu7jtdZaa7w/ifwDLwO1kEPFPpjnQnMe2R7Xfllt
RLc1YL5r44j9VCuvGHtcvq72I73CfdB43ezXxAu66c8TwmCQF9W/WxyhlYbF
vSv+xl+It4paUrlOcSPxjk7UaXlPdWa0rvZ1rfoRyD+pqTbG0QGUOpp/Tlrs
w9il1zb/3Mb3poPTW4A2slOYr+xV5a5dY7pH3izdwmcbo3hfO2cxKz40cnfD
Qc5Qf+FmbZDvSy2Dsdn43e19oO9a/FifyWZfANefPos2qxfceuutZd1Qa3/E
1fjkdNOfp99QY9kYR61ftV9CJ72SeoE63VVWWWXAHIjrwM9NPqGTay7rK+/v
c/Rq4aUwzzzzlDVf83chZ2NfZczgexFCK3ih8FCyLxro3hZD7nQOob637Qf5
wVrT6IFnr9R8b9N3rrfe+uUZ6GX/1JGA66o/I91+c20/XzFzLi//MK6XpefB
usu6Wr4k8acQRjb6XFuftfKkql9qNvWNGKrmos6p/eSOn5SaKD0mjSNifksu
sWS13XbbFT9UNR1ysPKgfr9RE1D7RptraQ/pQozPA9WxiAuYI8XpxRj16u5F
3ScPG/o/+yRrUfMMX2h7AfNztAftQRxb7S+NU+OaSE0BPx/9HodKrb8y55n7
6ve257HfpZ3vRty2XgfqneWc3E/2muoiadHko8LoQVyI7o8m0F7AvanGi0+u
sbpTvaZ8rnueL1BjnMw6WpzMeBd6i1il+gd7RbFo94hYTQhhdGJdre8iT1W5
BLldvWB4Sej90qn5wueap+QqGucLMRZ1n/yxw8jG/oxOwH1V+0XbU/JHtC7v
NPZZ1iTmOetyOo/jjjuu458L587Xme+8Nbnzt791PdRgDJXG3hONHtz+P90y
vxZ54G5ivypnYi9Ue0I27rvt7U866aSuePAMBC/WlVZcqYwvjkn8fqmllir7
phD6AXt5ehF+ieoBmmuyjCPjcjnrVcccc0zRdagb/etfOts/2L5RHE4ee9ZZ
Z20ZW/Pc21Pow8ELVo3PUOJYroHP0wenMX+sxzjPuOHWzU0M8SIxkxVWWKHo
dKyF+MN1A/MFTZI5ihbQ9RSvpJtQrz4c7Pvsv/mL0Ic05rWcJ48H83G3/TSs
AfWXoK9pzrW59+mJrr/u+q4eU81NN91UrbrqquN1j66Tmpxu+rn1Gzx9Gv12
65fnRE3r5KZjof3yPDbrcuvxTu2pGlp9r7pVu+8aWwPKz7juxsjm9ZaaXfpp
usN2+3KFyQP1a3q/t9Kj1ve2NYY5sVv3j8+iZxGvtm9qpZnj57nmGmsWnxg9
AHNvDwwtpj1hc68me3DrK+NDqEpNlZgEDbZ4lPV3J33/QgidR12AvqT2pa10
mtZ14t7i36/9bmh9hf7857+UOlBzlnotcSU5T/tV+hVjy6RqTOxxaRPsy8x3
reZox268sifnpeH4u1mH8M9//LNoC6z7rZHr68nLQKxtcvNm7CU0ldY7emA1
3gO0UvwXh+OrRgN13ZjrSs2OuEP93u5h95/7t1M5oFaof6Kfrn3kxEDU9qj9
bNZ/hckT37N4lLHE+tVehG8wP0Z9f8QB654N7b4f6hp7sbLGvbW9iN5v8jfp
X9Nb7PvEvtVL2suYA8XrQgijD/OFtaj5gfbbGlydH321/MmYa8cUrW4n5gtr
o1/84hfVjjvsWOaIOo8hTi5Xpydj5ouRj7yPNXGdk7Qu5f1DV9tp5EN33XXX
UiNgL8gz2H3VaY9E7//cc89VB+x/QNlD29/xStQ3iz5rOPmeep1lT2Mf27iv
8Rk0qnKW3VzvOyZ7aXuqVjlux2qd0csaN1778pDvm+p94zUBw/XGCaGdmOvo
UvSANR/Weyh/Gj/1mJHbN4aIP3QaY4jcEg2LvOlMM800YO22/cRCCy1UfADo
X4cDzxU+JI3jGy/liy++uIyrnULsTTxS7YfcjzWR/oqdni98766ZvLlzNleJ
KTkOMUH7tuFQ9+8RV6WPaq7B973J3dAidnPeEIvQi04+vvmeErtQJzl27Niu
HU8j6hx5ItW1nJ4/9yQvgNHKaNKxeA7Uu9K9Nmus6vWDPhQXXnhRd/MHb3wW
raPnQu7V2rr5OzF+GEfUxapJpmMLoca9LVcw0L1t7KVXNTb34t7WQ0tNurmq
2QvJvW1PpTZS/8Vu5lhGGgPpWOzB6TWy9xmH9fTWW29d6tvFwvx3eleFMLIR
JzOP0IK00oGYR/T9pp0c6hrJnsl+nQ7AvGlduPHGG5f9gz4pYmOTuqcSlxcr
s/ejw6FXaJ6na92IParaEf0wuqkd8VnGSf7pxk3HYl5xLcRde+EPM7miLlFs
wD3WeA9YH4lnD6dfu/uUz4tnpHGdIGbLo6x46nYxJiCuxY+Yx6d7ynqPpmWf
ffapnn/u+Xj8jAKef/75Eq9Xq1vXXRlbxWL0i+ChxftdnLDd44w9iDGbXkUe
st5/OAZ5SjEQY+3kFOsYaRgj1B/Tiop/iIPYM4YQRh9037SN88w9zwTzhfWo
NRJNizHCWqbd6wdrI/MFnwY6xzq3UufsaGnU6kbXPbJRm09La6/j+61jkGJs
nUZOmKa83gfaY/psOb1O7rO8v7p+tR61P4m1F20Y3dhwYsP+rX0in4CFvzBh
nwjPDR9Gex7x3W7FoJ2vPKh1Rasct9igvied6ms5GOzJfAf1fShPLE9F1xtC
P+CZpQezV2qOudlTyUs+9tjjxWeqG/t5n2F/QNshH9LsD9OYW+J55RkT1xvu
sf3+td+X3hl6ZDRqLWgijSOdgj+IsaquBTJffP3rXx+yt8xgsQ4677zziv+H
79pnq0en46D1bcc4br4z59JB+S4bvz/na+zWk66bcSLrOzrTGWec8U33lHFa
nWSveqyrf7NuoQ2t63HElPVqGK2MFh2LdQq9nLGgld9J7QvB+12fx15A26Z2
cdtttx3QI8v9K69QPLuS7w/VuDWGOLH+gAPd2/ZL+vjJcfQC9zb9lb2aGvdW
97a1vHoIHo+5t1tjvhfHaaVjsV6LjmUc1l48+MS+rEfs0ZMvC2FkI24tvq1H
bWOPXrEfcTI1935ePOsmsf8t7HX5pnh/eyg9SMWt+WqqSxhujNG6zRxs3T3Q
Gs8cbp8sNiCW1a2YH792NR68/8RWxXWXW265ovOPhqW9mI+23HLLkidp/O59
72p76KUmFTpNPq+8971vna/nna7u8+CDDy51Jt1eW9GTiTmJ24tTWJ9av9DV
eNY62Vc69AfiQmKOdX/txpexxj0qLkdP0im9sTHcmrDRo8jLWH/CCScMu1Yv
DB3zorpKfqJih2on7WlDCKOPhx56qOh5W/XhrOcL2vJO6knkC8SDG/cZXrTH
NJFDWaOF/sE+sdaS+F71OuR5rhd6J5EbtE5fdNFFx+dfrYdXX3314jfaqfWw
vTP/AjUStMPyktZj1l32fu3wK5ZnqXOA1vqNmmHrLnXj+ux2w7NBDIAHoL12
s19Dvb/deeedy3qzV95KPlcPM99HfS+oV6bRU7MTQj/gWeKZ0dhrj0ZEzlQO
nX+se7kb9TF1/4q61qzRH6bx5XnilWKupjEx7g4XeaxDDz10gvojtRlqyH/5
y1+24ezejDFVvEgsrtbUmi9oEV33TukpaGd4k6mJmn766ct1FhP13+rN/bxd
WEvJXTnHxvWW79A8MtzarsHi/jVP6rtHn9Ts++3625+OGTOmJzlKx6ffru/D
GriO7+2///6juu5jtOhYrA1pROTyW+UOvNyfu+yyS1mH9Qpjg3y/9bRnpnl8
9nfibupmE3cLcM+YV2gmB7q3xQPkxfxer6DV9WzxlDf2Nt/b5iz9Su1zEsNs
TXQsb425Xk2IvLZ1CP+GoXgohBD6j6eeeqroHen05eu9Fl988VLDdM899w4t
DvivcTElGhN6UFr3ekz9wQ0/aOtay3wtXimmZ+3dag8u/ie2Zc/caS+U2q9A
TYm9m7nZntV6WDytV/6ZkyvmIXtO92/tDVrXNvFrtf6f1Fw+jabngqfFIoss
MkGsyZ5XDRFP716hhkBPS/2G62NzXBtttHH1yCOPRLc8mSM3ZH9S1xC1evm5
3GE742ON0ATytm/28rKelttRXxa9XvcxHuoR4jsw56j3MwZmTAhhdMK3cM01
15xgfdT80keZ3q1TeZw777yr5Keaa4Rp22kOaG0yX4xcxELpLcz/dfxxvvnm
Kz48ncRekoZGfKo550KDLl/XzrxL7S9kTj3ggANKDyPxQ7Exul45u3bmoD0T
+pt7Ruhk7Gvqc+TJSDdDTyMe3Ckcw6OPPlq8Z6wnmvv42nfz3re/7RWut+9Z
rNKeu/bHkSvmm54YeOgL3hgWfvfq70p8zTPj+XGf2kfpb0JL0S1vMnEOzzXv
Rp5srXLXXupXxQWPPvroturBan+SVVZZZfxnWR+sttrqpQajE1jf8MIxNzWe
o15OdX+O4fb3aaSeL5yP8VG9nbGJzpOO6bvfPb3tmiXvZz6gV6ERqj346rFa
fFf8SBypU95ZdRyU9wsvCbn25jybfhd6wP3kJz/pyDFMjHq+OPHEEyeYL+hD
TzvttFILMloZLToWHg/WNPLkA+2LrCtPP/2Mon3rFdZfrrn1phrKxjVgrSOm
SfC9xXcugEc9nyv6/oHubR4oxjo61l5R39uHHHJIedaa9xbubXtKvUzN2+HN
RMcyccz16r/VWfAVcN97NtLLOoTJA/ktc554Hy9FmpAHHnig1FyYX4YSWzY+
+Ld07dZX5ibzaV132U4vJ8en9o03p7G8eR6s4wTW5eoFr7jiirbUyg0EzYS6
tS222KL4ldb1rtbKYr3xT28v9uH2yup4Gr97dXgrLL9CWaNN6nwlNq53jxhA
o1ZAjw7xZN8jT9xe4dmih7K2q+MTtFr2OOJCNDhh8uXkk08u93tz/+vGl/vU
PdwpHQudynHHHTc+b9WoGRTv4MMab6DuYz5Un27sMveqNaJti+48hNGJPJUY
kXzUQPOFemRr4055O1iHiZnpm9CcA5cjE2tRuxtGJvKhtPt1jwgxNblZvnGd
nHvkVeXkmu8rey73ldi/Ovh2IR7mM+1t5SR9Dg0Lb3fej+3Of7l29iM33XRT
yXva1zTWKqrP0PPbeqsT19neyRqSz4ncr/1Qc62Ia6D2n4anV/herHPoA2pP
CWtR94A65aH2RQ6hnXiennv2uaLdqHtfyUuqw9Er9tnfPtuV+LrPMK7whVHv
I3/fqgbMy8/5tYg5tMOHpUbsUQ7ma1/72vjPEjOzty396DowbZinaCvpVhrP
0V7afsl8RcvSLuzH7JUPO/Swkj9xfq41PaDxslM+dGKs+sHLD9qjN/ZzdN/x
b9CXruTnO3Cd3SfiUDy9zc2tfH6sFegwe+F94nvh+cO3tD42a1E6KrrR0Vz3
MVp0LNYLtNfGm1bjnntCHEV8uR/2JjwpfDet4n7GFbpIuhw5hsR7Rjfmud13
3/1N+v7Ge9t63jzbDT/Ht4J+11zgPm6lo7XX0tM09/abiY5l4liL6J3Ac1hd
g5i4OT6EMHlh3a4OwTzxt78OL+Yj7kU7uc4665QYl9oDfqniie3cBzeillTu
to4NtHqZC9UGPPnEkx3ri0YTpG6lUeNtH2eOpg2KBrC9iBtfeOGFJQbRuE8W
v7SHnpQ4gfWR58Acx+9VvYg9rjiTNQEdFB9Se5perqXswdXb6G3E47v2G+fp
bp8j5h0mX+hHjCn1996sX7fP1WdL3LFTfYVefPHF4vfS7DHvJbdy/PHHd8wb
OgyMsUm8Q8xUrNZ8F11bCKMX8R/roVbxT2sm+XDrHVr2dtYiNyJWJlbVKmZM
7yCnkt4fIxffrxoIveysl2sdgTW4fGmndARieD6DxrzWz9B62Afae8pD6O+q
5puudijr9rqeS2yYVoUP3QILLFBirjxSxMWsd/igdWJf6T2tt+Qo+G+LWdZ9
c+SbzPVidJ5zORd70OHuT+xT1SvbS/AxdY5igDxG5WDpWeq6YNfa/tbz3Sus
c/lO8aGrxxW1d/R5vBAS+w79gDGIf5JxyfPj+fVM8erw3HbKH6MR4wlfEto0
ehp5ouYciJe6IPM1nxKxu3Z7Polj6D3OD7r2DHFNPLf61nbCY0ofke222258
j8W6JxptifmKHpGPl3HUnDaUfupwjWlExCXVAfPOdZ2dG82fGKH5pFNxyDqW
RZNDmyMe2ejHJ1bkmOg4+Ltae6nvG844WX8mXYo4GU2hPCrfMF5DPIMbtdTz
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
7SZcIrWd9osct/kin7vmc61xkuTFcTzNBcF3Mm/z6quvLph4kZEilrJ3YHLL
drU974MN0JvO2ctzkPwj9db6AMC6Z40n+37vQA9tNYnmPqo1xSvFaaF/cSKm
9dm8Y8/LF5gW4zcfhy+c+5r0qdzvsvT6s26eFTfAPtPv3owRXGC2S+9GvR0P
P/zwlS/f+OVZ3+5Ci3hUDzQxUO4r8N/e9a53zfoWZyr3/uze4B/D6NL3w3fe
fffdwzyEPiXOgTr44INDTJL3dnLhH+H0nXrqqb3q6cix0fMDv7sqpoYTuHf8
hyKron4R/vzc5z63kjtKT+KaNYnRPvKRj6y87GUvC9z6aT4nF2vNtuLyb775
5kFf486LedqMJYsUKdJc+KvsBfy1zl782q/9WujXpG6kb7+evVAPo1asCqfi
H+LhmXmzrMJXFufAm7wndkKfSThbkX4kniM1xuI4cbL6Xf2JxS4XXXRRmJWq
Xw6bKO9s3WYdJxcpUmQ+hc6hQ+iWV7/61QHbqrLf/k59lPofdrKPOmF2G4fy
mKOPCb3Tn/a0pwX/X26n7xm7RdoRtgrOqUabjVMfyMbJI+IsyPPj0rJxfDaz
jdW/Fxu3nMIfsifEDnHedlrLDxfgB80Db0I9vhr9ul4sLnU68gpD6jEDS5cj
xUGQn8nr2tS04TeaGcJPtRazOK9sgvfGPrBPsH71W/RNH5zLZRaYn57MVbMI
4/WSl7xk5f3vf/+gOFr2dpy3rs9czsGxt+Hw+L1wzrb3ttiuij9jXoxZ7VEP
xFykepL//I//DHvbHrfXYaFD9Ifcr/vUF72K34SDob/NLPvzwDj0kMp78Mjz
2q/8z0cenkxveBb9BOhDdmurrbYKMX1ba/SjH/0o2ES6WF5XfXhXed2oU+Ne
m5Vu71Lk3+Uo77131W6wddF28D/821B6akwq1kuP6dtvv33l1ltvDfvyi1/8
4tJdeF96cnsPoZ/WlOupf5eYWY/QtL+US6yqLpz+HoLYv56bHtaPnB8tzudr
mnvkfbQh9JI9Jp7zfdPMuNFbCscx9yf0YRQTLsts+pgDZSe9C/HOBRdcEHhH
OONsF37wZZddFt5/ke6E72XelXronOcMm8KFmIXws/jUbBWb9ZMf/yTYMX/X
Nn9vlPBB8DLUP6fvh++Hqw3vicKv4LeKzcI9P2Zz9dBwz23Vkjs3/LeqOVDx
4ne/8IUvDHmVPsW68DH0tXYPuQ2xp/R/FE9POsNUnOvzPT8dbN96z95vfNfe
c5vxsM/yXamf2IXo97PLLrsEvzrnktGP69evb7R//Ly9653HWs22fF2fw/9n
f3GTNtlkk5Uzzzyz9XMZZ81ZZ+vt94uGeUSurD3mORfJVy8yW7Fv1HPrtVJn
L/ANX/CCF4Q+rX1K7FFOv7EXOQaLX6Mvqx5Pbc0qoDvornnRJ/SpuUHr1q0L
XH1+MR4ovuCQ73vRxD6xDnwqfh+7hxdqlq24GPfefHZ2UL85nCNx46LhSkWK
FOle2Eb2Sa8y8/7UJuTxVJqn1NNWbUCTno1NhD5Uw0H/sdO4lbOYsVukPeEr
woLMcGDj9N6GM9hbbJzcERtnrfXkf8UrXhF6/xQbt5xCR+E64djJGaR6SV5U
z+Jjjjkm4ARD91XjDIuq2qt40cP45EOahS0ukrMx/0MOJOc5eh5n9mMf+1jI
L8zirEZ+nHpJeRQ9IPDg5Hv9GW9uSPyJRRMzheRaRnG09FVqu5/JtGJWlj2i
L3/V3vZ37BCuHEy87b2Nr4kjk3P0DjzwwDBPIOoB78w5ZAs/eulHw3wvvBqc
Yvw4e39oNlJew3uTL4XL5+9WPxE6Y5bnEuaBD5n7vXBy/KLAD5nwtVozPanw
TDbaaKOw79usN4ncJ30T1efr199V3x776pvf+GZYRz1f8NUWCSe2JtYm5t89
Jx71eeeeF/SC2EhOfV573Vivt7/97aHnkP4WuGPqEZbt8tzq88wjgAXL+U9z
HtWYwedwVnI7B0PVm8GemrXwieG4sPnY34SNFlPj2cRZbm0IvaTOxffwyfmC
TXUF27f99tuHGQzpu6VT4aPymcsi9ukhhxwS7JR3KwcKJ+aXPOMZzwjvSY/a
RdLLQxS28HOf+1zwW9I9qZeb/LeZ3H2LvcGHxU9UCxRrXdkxOIvz3de+EGPx
W72L9P3Yo3oHpdwzOWdcLLFurF3SZ8lz4NX98pfT6yT57q9//esrf//3f18b
k6hh15OKH9qneH7cM99dhbnq2bHjjjuufO2rX5to/ewHz81foSPZIPiJuEud
mDwnfxG3c5VnOD1m4jP48HhK9h0/Ch7TRTxCz+mBls+uZdfsOzM1mnBYxFdH
HHFEqFnwOXphtnX/eBY4MuI8/FEYUBc9E/CVxIK4qc4Vuz+keqhpxXrY1zAe
789+tpfV9NvX/A97cFl6tRVpV3A26Jf99t2v1l7QO6985StXLrn4kl7vzdkW
i6pvYi9yLIWfzA/E12/Ln/edbIg4gf2I3PQhSqzz4oOZPUrP6oc75HteVKF/
1VbpM4ffbS3kj8UvMCu9C8WgasXYW3EMX7VIkSJFJhWxFL+PbRQ3VfVhiXE6
LF5twKj5cm3Lz+/9eeDFb7zxxiFOcZ/uocj8inyL3ne4sqmNgwdHG8dXZOP8
nZ+TPymyvMKX1uvBnIcq/bTHHnsE7GRI3I8qEWub2YkvWPUc9K+cE3xvKP0V
4FMwA5haXgMV71k9W8xb9MlR8F2+09rrYcNW2Av43WJNuTuxnT+rXYVxwaH9
v9jXmT6CdeIHwEf66DO2iKJGGiZbx9GyT9QewtaGkm+xt/FvXve614XcY9U9
i7HwLXFY2t7b9qDPVkcTe5Wos+FvyYPKT+CuwBBOP/30MBMC35MOsa/96t7l
DmGw9AvdwUcbgsihez51F/l7xUvW3wnePYv94Dv5v7COKo6NfOE73vGORvpA
/Sx8Ve2lmUJmPrShV+Bs9oQ8vPvTD18fITOM2rZ9dKN9JC/BX8MnpkftM3ts
GmzIvscjgDvD99Wx4x3C4LuW2FvMDA48MN+NS40XJD/JbuAG+dX5MiMBt9Re
hZGxhW3Vu3Ut8kvwIfXxfOy6XtnLcMW5A3AzswPY/GlqxuVd9VsSp6TfQ6/R
dzBn+atRayPHhCMlvqEzuvCdbr755pUTTzwx1AV4dnE+Dgt77Tvb1L18MHxm
8Rs/ls5r6sfCn81vwQNM368/q4Wd1Ry6WQmdL1ehHw0/Cv+Vz6I22L9N2rOh
yOTCX3Cu1duke/LJT35y6B2kNqdriX0v6C/5anN11Ryb28P/5heyX+y1v8N/
cl9+PnIW6D32F2dE3ovdnbp/xqOrHAPfz+9J9SFfRdzFd3Gu8VaOPvro4LdG
m+v/ea/uGRdGnzx+7zQ6in51T2LCOrvwlKc8ZWW//fbrfRaDun/nGL5VZafU
c+Gqj7IhqYiDcae9t0MPOTS8QzXQ/Br9g8Tv9gROuc9mE9qaa8Of4u+++c1v
DutoTfFA7Lk2eRTuVZyOj5r3dnQGt9l6mxADTSr2vlgFRgCDxHVlH9sQ+IJ7
5kfi0tLXl1xySWs90EjkEeGxqSVxjqy3/cW/mKZOgK9O7+HF6KVq3zi/Yo6u
he+gz4qZIHB/GKC6A7w0cS//PPXV6T8+g+c209E9i9uLFBlH6AE6kR6rsxf0
w5577rly1aeu6vXe2OvD3nlYJZZCF+LIOZ9s7LTy6COPrtz3i/tWPvWpTwX+
u3NFf/k9f2EafIk+oRNhtnzYE044IXBvYa/TCNtA18Eq5I3M5fY+2urtVmR8
obP5d2qP9Y/Uc0Xcol9abrfl/+D0Ze5TkSJFJhF6XSzMluCGq3HK+6rHC9eA
X8/W9OkTspVsG/+UXYKNHXnEkUXfzbmIqcRCfKNo49RLsnEwj3Tvwd75Z+pJ
iiyvRL6dmLVKR/GDYD5D6vNQJTAm+YTcl4v5axwAsbozMmvfO/I81MWKNeRA
8vtmM57y/zwl5PjEEH3lo32PnmDsA0wFXodvEHlx6v/0W8d7Ulull74cAL6N
GmrzBWIPbrrljHefEZ7B+sj7RZ5LkfEFnv785z+/0o+Ie1vOeEh7G86qvxvc
vWpvsz8wMbnAtnkCMR8BO5ULjfllfVn0Ycdbuf2btwf8Tr8ye/npv/f0wHmx
t+Gh6h3ksmArelXJq8rxyU/IIc66P9VXb/tq4D/nuUjvGl8V1jirvQBfx6HJ
ZwTECw4Ci1eDPanwUY866qjHMXH10W30S5Ev0J+QHbQ35STUEXfxDp3TmAOy
VrFmWN7FPUwzw4Lu1ZtMzop+xsfZ/uXbh/rKLuYgxPPuTHgmddByv3IuYh92
w+VsuR/co9gTkG/qjNnDbAycTN245x8K17ROvEv9M2GfYii5HrpmGS/1X55f
TZizzZ9skt9Z5Z88sLL+8PWVs9J8vvOJez1K//IxIj8bP1F/Df5IW8JeqYtj
lyO3BIdFzkd+p4sZNOI6eCW9d/zxx09lf7wbuDlbl75fvhw/gl+6THLssccG
PURXylPiADjTcsb4gF314yryK2E/2Fu2Kt2TenrgCHRdY8VniT35+IfW3ixM
sQ1d5Pdy/OyWc6jugN3Sa1APn1hn4Gyxgfi1R6w/Ivgn8urT+Lj+rx4fOCtp
nQZcB49SnOW+8Va9K76r+3Of/o/Yga1lh+lQ962ml0+AY9AkdxbnCvGx6/ib
VTOPuhZrwEffYostNpibBgN76v/71MChnmRNvHt1HN4nWyd+qarbjxcuo/WY
thei+9Pzhc3DCUoxGXyNNm2a84erYZ/nz2PP8Cf9+6RCd+JMOU9wDrymNmrn
+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
uUSwEXtef5qmcaz1FXc4I/Hs8HP0UcApactXj3OEcJDETvGs0nP0FWwBp1X+
fNS6+Df6EucPr1DegE9GP+Mwl5r/IuMInor4zj7P9Yz4D0+KL9C12M9iT7qD
bkrtFz0L4+EL67fUFo85ckL4lmnvjFgfFXtvNxH6RB8yfkysYYn6RNwEU2iC
VbGrOLh6MLGr+r/BvYoMR3Ba4ZPpHEV+grwf7uG0/YqLFCmy+MImwu3FL/K+
VRyWmKf07/jdajL7rPOJdV1yMnqlxvuSc1Iv0lUP9SKzFTlDsXCaV2Tj4K/y
fUPlJxTpV2AyVRx5dTR6jc56jkadiJ/lzHL8M73gkmefdfZM50TKo9C/sFo5
TDYi5Q05kzAZ7xpeBHvowz489NDDAQOSP4ILiXvYKvoCN0ivFfjgWtgTPAdH
BSYq3qniRMFn9PfvklfiPsSKOEtwJmsOb55H4VPAMtV71u1t+Cy/Y5p6z2nF
3oZxqVXEBxBPpesvnhany3mbjY571iX/I2LMeY/smKeAq6ppx7sZB4dUb2a2
kzpbnxNrddTP9DnzKxVnreqc4cbp4S1/MCuxtt4LPl5VDyH7WW5nkt60sSYQ
Z0vtlHlQ1nCad0+vyf2YPwLL2vZvtg08LPqiq/0Jn5aXSvOmLpwW+5I9a/JM
dCrenlxN2ruJPqcj7NW29in8z/6SW5dDg2c74/L6atLjfJW19Dz9Jh5hZ2KN
nvtWx33cccd1kpsoMlyRN45zAnIOJG6WOHWt/A4fC4fPHoJF4002PVOpsFny
fPLF8j900D777BN8DP/WlU/jrOERi9kjz25angm9y8d8zWte84T3zOejC9V1
LpOoKUr1MT2mR0XB6/sTPntVnbJzLz8jn9yW0AV8VrYfDqLGh46x/nJpfD35
KxyWUX5AtLn8b3metA9LyuXAO5uGy3HRhy8KdUc5rui73DubSzfh0q2lh/wM
2739y7d//HPYcL1c1LJNWmMgh83fzPk7Lrlu/Jg+8pL8DffCl0hn0kWfn96+
9gvXrvzfn0/eAzAXa05/5v0GxT2xV8o0ol6Er6vPXdrrJvZ7MQtqrb05qTgP
+NU5hzTGFHy9T37ykxN+5kOBf6aegH8tBzptXtgepa/dpxjAvAvf0QWO6Z3E
+0/7ynofW225VbiXJmvg/1g/6yjnHOt9fAefRWzUlq8ulsHH5AfhnMTv42/j
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
LFKkSJEq0ffx2i9cG/x9cVpVjon/yP81T47fDXvqow8Wf5KPj4unzgh3Hdac
82zESPKsZa7lYgofQ54I5pquO8zS/PhpOf9FFkvmkcci93HYYYdtUAeWXnAI
vYe66oMl3vJu6Fy5RBjUuretCzgXfmPECtkDZw+fUPwvVnP/s+iN6F5xDGIN
aoplvvKVrww8jyb5VHWT6olgiOkaiH/0FJbX7kJg4KN68qSXXK+87tBxF3Et
Pa3GsO5Z4PFnn312Z2fT3mZH4t5WA4E3I24Si+d7G77F3oihHucG9CxwVjhj
Xuujb43Yu4ke8H+c63yuECxPTN93bQqZBx4LzJp/CctOuXwx1o51SPbvKMzK
v5kfJ+dKf3o+HO1xcGx7EN8F1mpf2p/qHulntkNvg772KcyHTy4XHvVunMvj
78UITXAh/wcvMdqcFBeE/+OgTDPTC17iXOldk/aRiXMf8AVG9cqoE+siTpFH
huXBqdgldqTvOWlFZiviEXXCuY6Fm4phR/Fq7RWY3d577x38VXwPPl+TeR5x
PpEzw7aqNx7lX/Z1ydE6a7hfbeXv5LOcOe84/S45R/py0Xlkca3l5+hg71h+
Ebdy0Z99SCJPImec9p9w4XPhQEzDwYzC38e3sL7pjB52mM7Rl3iSXhOpsGF6
pvBp0vtXP8ZnbsqJYlPVWef9MfQBoSubzPLA/1DbjB+UfiYdJ5dn5sOk4vn4
ALBO3JV0/pHPlR/0LG35Wc6tPWOmkrxgOs/d98FkI4elbfGs1lu+NZ/LhG/U
dIYU8VzumT7io8Z8JL3E52WPuux7EWdHwg3tBeckfUa8C/EOW7tW/OyzfI7Y
X84Y33+c/q7+3c/Jveq16/vkLsU6OIawdPFY1/lTn4/z7pkj5zzyeeDmk/ZB
iuL57BE+TcrZhb3xW9RATWN7xBBqZunOtJbD53sWvSib8ALFaHh+8B1cIj0l
zzrzrIDp9Nljvsj8CzsLg8MdTe2F8+XPbLR+eG3FgM4cH8JccTY57YfCXojH
2ahJazEmEfqEbWWbYjwR9YkaPzH2Qw810yewEM+Vxk7xvMOJpvVl3RtdCDvh
J+MT4rXAHNjhrnxl+hWHBb6rxsH3qn/yvsRnyy58gf333z/4InHdnSX7W0+j
NvzmIkWKLJbEvmRxXrb6wSrMiX2ST8DPx0lvgvGOK3S9e2Jr+KfyR/p+4djw
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
6BfW9JLT0vdFHKH3OhsBN5Y7gk/7DrHFqHupu/xfdcvTzHItMlwRC4kj5dHT
dYctiJXFzEWKpDIEHgvMUtzCh9WfGBYIZ+Sjq+mS/5ST5N/yo/N+IlWXGhp6
0v/f6Bkbhc+b5PLd/GjYCn8dL0NMBHOFV6Z5ZPflzMX+FHIi3/rWv4WaglnN
WUkFfqjmWV4ozUl6BpiZ2UhN+2mIlzwzfC/9bHwHOegu+0DG2SViqToOZ4yP
2UvP3zf3wPrDcM2thguO2tv5TKq19rb96XPa2tvi6w329v/47bCWsMszzzxz
5bOfvSbEqD/8wTD2NuyCP6PuM8XwYNz2xTS8DvUu/Lm0/63L++OXdTUva5TM
G48Fbi32xsk++uijwxmkK+zzOGNIDI7Psm7dutATQZ02Xor6RfwumAY7BfOO
Ndp+pXv8nborfCP+sfNlL/PX995775CvtD/ooVn0wf7e9+4IeJMcTLpe7lMN
NCynqfz/7d0JsGxleS/80lilpkyu5hLrs2KST5Mqh6RAY0Qj3KAYh1wH1C+K
IINR4wQGB1SMRo0oRiEgGCNqHIJIUFEvGgOiqHCdEAWViwGVaxwgTiAzMhz6
4/fuvCfvWaf33t2re+/u3vv/r1p1hr179Vrvetcz/p/n8azxqbr9qCblmYiL
48/jyLfvlL+zFfgn4kqbvTYqmA5+9tOfFT6mnHbV4+Qbfgq7hc6W3yVv9X7z
PumDR3/xadV2iJ1Wvsu4wIclm8jVUfTveh7mIcrhTtNuMT9BXk1evOXNsink
vfAJNzLkxvF3yWT5VvJSri9YX8i3yGPVWBZfhP/HzpyGriYT5EfYuK1/UGN1
uA/sx3FBr8oXPOc5z9lGP9YZYCv1oFgN3nN6nX3QXrMYjt6eetz1gdiQ/jFy
e618wcOxFpPUhleuPl6tXFQ784e9wL/AbahzaUZZc/UPuDF68JFTOI7VP3J4
b9Uw1B57a9WHpYKOsU5t/wAHri9b9Ybrx+9vzfaT/7Pn215kclTmSqlxX6te
psuhcrTUx9PJ7g9XyPXZ695ReoJPKBdLN+EAelb1fVMz53l5v/1fhT3ivGxy
9+39UZdU/VD+iz6KesLw7debJ+3dU9vxJ3/yJ9s8Y/tZLGOS+k8xAD50lye7
lWfSsy8EH5wPhEPW5bB4B+U2vfvpvx7MC2rf7XPPObfwpsW/agzanvW+8T1x
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
5G9wtvVF6da5bFaw/8h1tTlVRtPNePzkp7pw8xJWyyeKt9AR9J/YHFuhG5/D
7RTz6cvt5KexHc3Z6eb41JuLlYlvm+83Ci9frb0YW+VZsUvkOfXE69vXyN6z
t81S0F9R3KvOhFA7j18jdrUaX1dsCrdXLSE7SeyVzWr/lvkV0WlBEKwDyEE6
l43d9lUn2+RUzbnpkz+tfD1cC9ySOtebnBN314N+0n7I5KyeYf/4j/9YesWS
9fQF/YRPq8eMn6+Uh3AOPoa6YlwNdQrdfIZYBU7GKL1JV4LcGzvloQ996HZ8
BDrOeuOPsHP4RKutjRy0XHTNDYp/WAc20Lg6zjqIXcnpyKHUeIqDThZTknux
V1Y6r2eKSywG5lr00Fdrxe7Qp28YDzlYHeGxbHywn80Sa30q8rL3nJ1bfp0v
ZB6t3Gm7b/hXuH9dX4kcIKfw2+Vf2aTL9WyZFmoPAhwW9y9W3jceFcwn6E46
v/Xr+XR8/T6cJT6U/etdaett2QBqHcQlZ9n7a6PzWMgiel5Mma2AJ8eOWrR+
a2wZNSlypeyU9lnZm+Rjn9yFdSDP2U4tz4oOl0tj33XPi+MrViOuVnu2rGRz
ijWIibj29rrJUbbhtGrmW7ClXae8T2R0EKwf+LJ77rnnNrWjemSbfda3fnDe
wBYUQyZ7yUq6HS8Vt28lXkEwXeBMsaNqTEj8XE2K3gPTBl6J2EuNEXnm7CZ+
S8lLjOv23GKb8Fn0bO/mp9TJmonTzVPQxWqh8XHd53I9Wyrkv7yLVbeLEdH1
+giNC/6W2ljzBlpbVp5GzkbMiN6dl7roeQM7h/9ordr1wxmQl1qpR6C1Z7eq
KfY8PUd2oOcqN6N+7fOf/8LczMGYBPaPWKlYgBis2vR564+wEjwDdYlkRe2V
XQ9cL/aw5zku2Op0K7tbfX49p32gn7cePd0YuD0nHqrPtH2GM7ddz5YGOJhk
Cp+3vW6xW7JqLXrieLZyieTY5T8Ppz0IWpAneKeVF9G+l/Iw+lj3iauzWfAD
8Q3UJrfyhF8vNtSVJ74HtwAv3Wdwe5MrWQLZyDZjz9VYBz0vvka/+9moOUry
0NrqcTeMZ/LsZz+78FX75DyBjyJ2LpfXnp89q4eYe1CvOmrMs/Jr9RGs+QA2
OV1Cp4xznfZ71Vs+r+7d+Vwbvad+Xr730ktX55+wGfRy85lubzQ+qX6F1jEI
gmCtwe7HXxBb786dkJs4+8vD6/VXQ531I0fQnpcu50fhLE6COhuIHdL2e6nn
972rzSxtQbfgInbrd1z7Dv99h4n70gAdgjva7XtTuT34I8PqdJcDPSEfJm9R
dbF1wHngu4xaR1x7mNE9uCf0mnOx7eSyraW+maOAPXbM0ccUXdbeI78TbxNP
Mxgf4bFsfHzta18rdUXt7GfPXK64j+zZctOWUpePN9f6Uw65AX5TV9aQUeJB
Ynp8BtyDSftQrQY2vTgie9i9irVlP28smLGidq31H+lBPMw+PBa5CHmW7kwV
dTT6s9vHs4zPbnQeC7vqc5/7XHmG6jj453z4RYmJQ+0dZx4jW6c716DWnvfp
GVj7rXb3AJ40Ge+83bXCzcKX9o6wYdmkK8l9sTIzGbocRf82E2Itet/Jt8nV
0QufPv3TGyK/EwSLAD2e9SpvfSs5tL333rvo143wLuo5wQ4Wz6/y2MwItRnp
0bc+oJfsMzncmi8WF5HTN0dj2lD/Kf6kp3mNh6glkm8Y155Y6pl/U+nHjjPd
zXeLQfBvurER8Q/9z/g8/CWfH9azpaL2t69+Ff6DONTxxx8/9v37blyV7kwT
9V/6w+DDboR3e62grln9FT51Nzai5nglPpJcIb9EX0e2ufihOjh+BDsHj3kt
+MDrjTpLwkwLfrbZ697xRbHXt2y5ubyz+Ix8vu7sZb1l5Pz65B/Zybgk1kQu
s55Tbu9P//RPSz67u07iJtZPTyb5QH1uVpIX3nFxVPusvW6f1e9lLTia9i4f
hNzWFz0yJAiW4H0mTw4//PAiT7pxGpxS/nifXlV8drFVeZlWntAvbAv2bVee
sG3Vrci5sen12whvewli2GI0uCGV6+x5Pf7xjy98a7J4VD0m3oN/IdfX5Zng
h5CVfWcp+QxbAx+yOxuSTWFPifuNM4dCPyD3j1Nbz2VPqS8VAx2nfsF+199F
TxtxqJpPYrtaDz1icIZGqUVz/fKF9FfXxrbH2U7dnkNBEARrAfF0s2IqF6Ie
OO98AzZ8H9T6FjKzy2cgg/FCJgF9xHely8Q/6CG+jX6T6njUCrPbR9VHajbe
+c53ldhNe721L83pnzp9ohlIroOtou9NtyemNRG3E0eps+hGgd9lE7U9zKyD
PBm/ZdTZjmKg/B36x7XV+KE4gJoNazlKnYP1ZsO5l26ve/doL6ibCcZHeCwb
H2qCDjnkkG16VrBZ9WPpk09V8y8+ihdT7f8qI8RfxDm68Vy5EjwAczbkQ9dj
PotYovgUe1o+HJdvkXodB6uDT2MvtfOC+UDmBYzD0aqcSzpejULtocFPZMPo
AyauPeu+IBudxyJmy2YQc8GJ02tt0fKMdKZ+J2qvunFxB44IeTiO3K35An1V
1Ii2fe4rd0tMZlj8QX6N7WQf631LPq8UlxfnIqvNFmo5ON4L75q4/rQgv6ze
1OwD12YP+47ExoNgfUBesZXU+9W57vyqnXfeucQ0N0LckFwkV3BXqjwTY8Ub
yFyVtQd/4FsXfqv46mIB9piYPO7Uqaeeuia5FbYQLlatRaLL2HV9+kXYI2Ya
sytdd7W/ar2tvrLslK5OV6cjz4yvwx7A0V1pv33ta18vPJs6JwQPdqeddiqx
/XFw1ZVXFZ4K3kTbZ0kfW/8n55J81srArcI5xvtpbS05Qc+jyy9gU7Hr5MDk
rfQAZafhJJGl5CsZJC7Wty573lDm4Nzix7M95evUq8lbLQo8BzHagw46aKit
fuCBzxu7Pr3a6nLOztutK1fDp9/hRRf93+0+67vw2HDOyUb9D1eKWcgP6uGk
H1S3f6i6HZz0acF1iCXpcyU+zj/wHsRWD4IlkIfeOX3/hskTnAOchHHikFWe
sB1e9KIXbaPPHXiWbIsLLrhwu8+KafkMnptZeM7Rd57xRoFnJD4j5iAvV2vW
+Dz65umBxecZR+Z7nnJmcpvts5Fb8R16W/YFe1HO0zNs+UtsCz3+5DxX4tQO
g3sjy+mZVm/gTIvtj3o+uUK+o/0uZ1TPI3fqvvVZ1JduFNjnng39wpao9+r6
5BnkOM3BXIseY0EQBF3gqeiNgrfSynWymJziy/UBHcxP0verPS9dxP7nO/SF
WBdeoZ5WckX13GIQ/DPc+nHnGvJrh/F58Bb5AZPWIYlB0kfyeG3/erlbeQd9
ZcZd6+qb4p+0Oo4vrsZEPm8l8GvYT/JRchPu1edLD5oddig2F/9s1LUUGxIz
0E+v1lbVvLn8nX2m908wPsJj2fhgk5ID4iJt/htPTY5z1GfMl2JDmk/Gpuzy
pf2bnBxWr+/9FOuVm1aL5N99evWOA7VMelGxicWu+ZeTcAaD+cMVl19RdOiT
93xy8XXoKzpG3x++6Cgxtqqv5FPUPNT4g/2M+4V3wI+cB2x0Hou+HOILNSZ+
/PHvW7i6VXak/O+jH/3o7fSqA6fwu/93PE4UWcnu8llxqzaeUe1qNbFdzo94
BZtWvIK8V4e9Wj8V34XrosZczrG+D+Lv6szOO++8PsuyDcQsagzkqKOOKjXj
cnfev4999GMLU88bBBsB3rfag7T2QpfzXqteGesN3LvXve51JU5dfVG5Vzbh
RskpzzP473qKiHlUncW2OvhFB5fc7VrAvmW7id+0OSW9a13PqPq3cHD+M+8h
F9TqXXaYmASuyjCdxQ7AIcX550+zDfR1WQ7iLtZJjRMdzzf3Hoq7jDIv28/5
OOJvuNe+l03s/l0n/Sr3vFHmha0lxO3woNq56A7/h//Gfqlzzq0n21Vs0vO2
t+WZPDt2Of+T3bRotuxqqLOX+Nn4OuYK8FEWBfheOF16GQ6z1cXHhtXlrAT7
wXt82GGHlT5M3TiJOh56tcsHF3f13pKR7Hk50dVirb6LDtMfqM39ibmSN185
e/Ket/a4XCoZqFcMLigf275WHx9bPQiWIJb6mU9/Zru+HPXQ69d7NE7sk1wg
K/jeetSqgW7Pqd9TiSl0ZMWNN9xYZJf6bv4/WbbSPOHNgFr3rQ9jG59hI5Gf
+jjj+owLPBY8ZzGTbl5SHEsfnL5gH+utVWcAtXxI9Zli+OPCOtBR/L3WNsaZ
FiNaaWZiew65Rz0GzbVrY5Lm2rGDvnn+6P0KKo+lzuTyPKyfGJQ88qtf/erB
z376s17zuIMgCMYFXYB7yo9rZS8bmN/Q149mT+uR/j92/R/bnJfP6P/78hnk
sughsrLOyqv6Tfz/He94R686VP0O8OWH9aXBu+H7TgI8GTW6NT5XD/ELM1Zx
RMcFfSLXwU9pdRxdhdu7Wi8dvpX+82YC4tZULoy/88/EV8bxfcRl7Bd1yO5L
nFVMRt5jlwftUmJFYgrB+AiPZeNDDAaXzfujlrC+j2TGOHV5Yr+nnnJq4bDI
m3frDeoszG4u1buOR41Hs8suuxYZctmll615HQ99wE7HWT/hhBMWamZ3MBro
BrFU+Yqa3yfPHvKQhxTdOor8YlOIvT7hCU/Yxl7hS6mhpO/mpWZ7o/NYzNFl
N+Dh0k16ny5aDyXxAdyMbq/veog9iP2PGhsnsy76zkXFNsUDrHyt9pxqhN/2
trdtV6vCZtVfUA0Xua0332p7mVy25mpp7Kma1ybfa9/ZSVDry/THUsfDFhb3
4BvYv2uV1wyCYHnIs4qV1/pxMlj8eyPkqr79rW+X+ok6u10uQJ5RPuHmLYt9
b4sAPRzldqx/jav495lnnDm4+qq1sa34IewJ9n/VYTU3ba+Pqn/F6uVv9WD3
TrR6t/JMxDS68M6o2RL7wdOkh1fjotC7+tTShXgB9qo8uBqAJQ7Mytwb9rD6
INfr3a21xuIlu+yyS/l/nO1Z9xVcBLB/1G51Z4zqsaE25IbrbyixLjaWvJi8
jRiZ58YXYZMdffTRxdYTByRrNlrvCnsSL8q9sjHt90WqKXP97GY1e8NsdX1O
xEhGrQH3bovJ0qPiHWz1bpzEe6j2zu+18G+1N/KVcqzq7FeLk/s+MkP/RPnS
2nuKnMKHmSR/Ws9PVvDD6qxRe1uvIfVMfetRg2Ajgs1BHvKbh8kTdb3qoUft
Fez9IwPEE/S6Zgt05Qk9T95081P0PF/dO0sW4MeO2kt/o4K+xuXRk67t7S9u
SK7hi/TJTYqp+Kzzts8GB0MPQrzXvlDro0ZJjKQ9t7wke27cXixApuOqtPPY
HdaAXb5ajm+Jc3Jj0VFiUm1ewfGoRz2q8IDHXUvnlYflm+kXL0dh77Kv/f8o
XO4gCIJpAHeDHd/WMpBzePvi/H17m/En8D9wEdvzyuPo2dmn5xS5KN/Fb1UH
U/3W2s+KXMd17dM/gD6QT5UTa/WFHAcdNKkfgIvJxumen27hQ6/G5x8GsRA+
VTurwSF/xq+jT5ZDnQGkLsNatrpNLEmf1q98ZbwaAWrLfmEn4LviWFg/+a6T
Tz655D3SZ6Ef9EkelhcLj2XjoOYl9ZkVb6q8JTJUXdBK7zOQj2x/+Qy1aGIY
Yrps4Nprqdrs+mB0fTTy3neL9+qjxZ9ay14s9qy4uXg1H44s0mM72JiwP+W/
99//qUV3k2VigeKTK9WfVA7MKf96SrEp6DdxAjFA8k+Ni1y7/TQvvtNG57HI
B7gPz4D+4aMvmm7X35deZf8Mi2Wxi9VX8/FXymvIr4q7kF1mDbB5yF45MbK0
zc35P71ruz3uxMzYTHLT6mzIxVHrWWpeW+6RzvBu+LsYgxrQcepiajycvatn
4rHHHjt42tOeVuxUtqs6NVxD+Z70RwiC9QfZof5A3JBdJ7aLuyZ/pTf0otbB
0R9sXHFf9S7kmFqVt7/97XOj1zcy8OTFg/BJ2Gc4ROyzI488qvxsrTgVzkvf
6b+iZrnqSnENdUkrxdjtC7ahWIVeK/LKYuo4Kc5Va6LV5siHiMG04N+I/eBB
22t6/4zUp+KW7fij//hR0eXshNpLhd8kJ7VSfIuPJ97D18I3rfOb9KPRA1Pd
rBl+G41LMW3UuuDK6at9jq0lnoCabfJEnsaaqssgM9Uys2WsPd4RDoE9MG4P
50WC2JteIPxs9q49ulq/v3mC6ycfunPf64HHpI+XGMaKtvp/7hkcNLa9nPOu
u+xaZI3cYNtHms3Lnu/ytevcEPnKAw44oPDnRo2T4w6xqd0H/WbP8hE8Gz7w
OPH2aqu7Pr0c5eXFWvkf5LbeNe9617tKT8nNPqMkCFqwZ8j+dsZKe7CBam/o
UeSJuYS4geK2+G/+FLdt+bRsEvOXu7kkcYOXvvSlRS6rYRyn9/ZGBe6Gfh/k
ZNvT1uxAPEB9l/vYo/hLtW6yfd44rWy5Sfrg8MnESrrzDc12E0vpM3fbPqCr
uvX1/D06a7X6d7amtWLXsjPrWvqT3hE7vfiHF/eqQWOXs6/YT56VvC47Su/t
IAiC9QA9gBNCntWeinxxPqCcIh+/T27CecW51U3j/1XZy0cQWyDv++gg9oJ+
AXJZLX+eTOaX8mN+cd0vevn//IBhfWnwFXE0J/X58OT5GO0cJIe4xemnn96L
W+r58IvEUdpz4iTpq+s7lwPfRy5NPXxbx+J5se1wUfrcs/0iliqvKE4j3+Xv
+DaLVq89T+Avi8l1eSxiMuLXm93u3UjA69YbW08jcpn9iYviXdJrhRzkPznI
Os+eX6Y3pbgvDouYDPnLV5PPFNuoOXWyk9wR83EuslgsGNcMp4Qdjjcjlrpm
9YA3L81Reu9731vscfcnhn7xxZeszfcFcwF6Bz+KvqZ35OH4eerU6EC5cXu6
xuj07+L3ix3am/Sn/UvHiV3K+etLP095LteifpktsRF5LFu23FxyRrWmVY5g
0eovSj3JV88pssc9DItlySvh+4kz/ehHP16q071py1bZW/enPS2egPtLjolf
yYuJi9jb5Hg9J14h3g85zlYSX1Z7RUaz2cTPyPlx7G521dlfPrvMc5SLqxwx
eRq15WJCcjT13Wrhe3ye/Pf+edfE5Lyj6pnF8vVIZmeI0egp6JoX6VkHwUYD
24kMZtdVP9j7r4/TosYR1Uryhckw98TupSv5osHagjw/66wvF7ufTUZ/4Aaw
ufjva40rr7hyax5A/IndRG/yZcw2xguhe+u1trpXTEjOSe7InBjcVDqW/uLL
2EsOfNLXvOY1ZZ/VmgF8kjqDQ45fTJ5fNAroQfEXfAk2hJy0+JacAR3qmunX
6qf5PrUDYv1qDcRtfI6PZ63VgMtx8+WiX1eHPSBGhd9gv7T9hPUc0XeFDeZP
dhnfAfcAT04szmyhPvVjiwZ7ST4Wx8r985vYq4vCO6/Xr4a+9iDrHmSWmIa+
TmLP11xz7dZ3r8oLNq44JN63unn5ZrljMgdXEu+DrVvPiQtSZ9o5F/vZuylf
zVaXW1R/Po7v4xxkBj74Pe5xjxITt3f5Ia6BbJDvJCu6trp/+zz5Zd/r6+Be
zIX3DtjX7odvrQ7V/t6IvYWCYBJ4V707+uDrFT9MnuC8sifw/ZbkyTWDm27c
Vp54D83EFic94ogjCjfCO62eGqfMO+jf9Zy1bzCuBHki9ioOoI6LLCJPcCwW
LZYybZBXn/jEJ4o8bnuxVH4RLpAcUx+Q3+bAtXKebcg2+OhHPzoRl5W8JYPb
nCfZ/oxnPKPYlH3yX/aHPmNdvhW9YS3YxsvBFqJL8DW7OUK2sP0t1hQEQbCI
oCvIOPoXD6T6gJUTIkbWF/Q7+7rLeZQXENfHDxwXte5mGJdSHICPgw/YF/JK
amjbvjTWgk0iVjIpB0NNiFpceaxWx4nT0Ml9+h7wZfBvun3x5TH0gF+uR5q1
xHFR/9vmWGrvB3pXLj2YH+Bu4XZ3eSz4ymKP4bFsHJAF5iXrcyhXTA55p/FS
1NfwncQz+EJ+F18bZ4wsYduK2cnvs3/Zz+IwOHryAmx2e0gsq/po8pdqEMVz
2MtkNE5J6eW+Rv4U/XPWWWeV+knfyaesvJpg48LzVW8in8Bvp7vlLcxS4VOJ
L8gP1Jih3AZ+Kj9fTsJ7QIfycf2+vT0vs4Qq3KN4qphrV167djWhi8pj8d56
PuK77s8zlPtZtLhLnakoZzpsXl/Nh7CPxKPIXfEqNmiNaeOfOAdbWW9VdjPe
h3/LreGPsEnb3sX2MDmt/lyeS0xLXFwcmxxUL+57xllPv+tc7GqcVs8E14u8
V5v+ipe/otifOCqeXRvX9jnvEPmP0y4ezk4Vf8OFdD9ib3qwqDsV50lcPAhm
C7YZPSpnLybJrpOjfMYz/qL4k4v4jrpudX1y0GQl/UL2mPcRrB1qXgYHnl9g
P9GJuIv8AP7GWoNOxUthS+glyyakw+ggvq+8Bt1rX7Ovqm0opyF/LX+LB4K3
QH/aSz6z8/3/a96Md0S9sxpSNiP9jEfPtpR/ULv1rW99e+Q+Y9UW+teP/2uZ
QSjn4rvoTvXV/K/LLvv51n6C6gzwtXEo+HV6DjnYDfox6Mm2ln1vNhrEPNg8
/NbWzvZ3+5etbf+IaZlHg9fkeYt92R84RZuhtsp+Es9jy1kL3Gx7cVFsdu+7
6yebyITlbHX6AlcHrx5PR3zbvTvkA8VK9b5Wz4+jInaG76ZWXuzBrKB23oT3
Gb/NHmMn1361Pi8P+trXvrb0gRrXVrdv8dxwacRuxfXIARw8fV5wUfVQ8Xut
HidD2PD2L565uF/1O/gpbH1xHna89bK/F9EOCIK1BHnCl5XvWU6eiLnimOKG
46qJsXqfyBL6XMyUj/+Wt7yl2B3eXe+hdxLvF8+c7SRO1fbQwB340he/VOSJ
vBJ7V1yXnjKPeN5qstYb7p1NJSYiVtKNzagrt6596r6d23MRcyZvW06ImIl6
pb7cTufGQ2yvmb2J08K2Y1P2mYvKRiXPu3McnBeXcqVcqnuhs+zhNu/oEBui
a9QHBkEQLCJuvGHJt1FL0vqAtVZ/Ep6eXBR/XX1LN+cuv9pnLiv7AZeen1Jn
i7a8DfbDuHNwKugg98sPqnYNHcTusD6l/8EEs7mdX/0N7m/te2PN6SIxmmF1
sqOAT2P2aXed6Wg5keX641pLfhDbqfbdrYeYDl9t1JqkYH3AFrJ/ujM3xa7F
Z+YtlxtMBj6T+L06fXa3mIrYCT9IDhkPQH5fvxW8M7EVnGt+k8+IdYjd1Boe
MRoxXPFedjtZ98QnPqnIN3tLrpZfp4bfLM21rlOr+VvzL+R5ccbFaYKNDz48
Xe2ZixvKW4nr43eQZWKL9jc/y36mk3Bg5VVwrOTq1U7Iv89jzB+/VI3csD4f
6gbFkfFcFhHypzgY+L18ds9HvmbRIDfHJqu15/X52Ivi5eLD9iS5K/ZP7ooR
s1/tTfXf9ie5Kdbt9/2cTKsxdPEY+RK5NT8XS6h5K/uc7D7wwOeV3uZkIN6i
HFufmiBy3rMRB3MNuDJia+Q8bqNYBltTzxi90vHX6Qn3oz7JfdAzdIj7pwfk
9dSHyxeGYxgE84Pah4+vhnfGB3Z4d8m1vvWKswSbQCy/1mDyT+UQ8HWCtQO7
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
QRAEQRAEQRAEQRAEwfzi/wdlY25H
     "], {{0, 192}, {2226, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{601.4880208333327, Automatic},
   ImageSizeRaw->{2226, 192},
   PlotRange->{{0, 2226}, {0, 192}}]], "Input",ExpressionUUID->
  "68612ce4-7d31-4820-aaef-c83a58068a13"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQmc3dP5/1X1Zy1Valet2qklaFUillQokdpSVKgQQWINYoklYonaRYSK
NBoaW4h9VyJpxRbEUhJZRBJLEJUoUXH+fZ/8z/RmMjOZO/d7Z+7yfr9et40s
d+79fr/nnGf5PM/z08NP2Lfb4ostttjJS/33f/btctrOPXt2OWO/H/z3Pzod
f/IxRx1/ZNffHH/KkUcd2XO7w7/739+87DuLLXbD0osttsR/fx1ERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
REREREREREREREREpF6++eabMHfu3PDVV1/FX4uIiIiIiIiIiIiIiIiIiIiI
iIgkvv322zB27NgwfPjwMHTo0DBhwoSW/kgiIiIiIiIiIiIiIiIiIiIiIiJS
Anz99ddh+vTp4bHHHgtnn3126NSpU9hrr73CI488Yk8zERERERERERERERER
ERERERGRKmbevHlRY/bhhx+G+++/P+y5555hjTXWCIsttlh8DRw4MM7PpM+Z
iIiIiIiIiIiIiIiIiIiIiIiIVBfoy2bMmBH+9re/hd69e4dddtklrLrqqmGp
pZaq0Zlde+214csvv1RnJiIiIiIiIiIiIiIiIiIiIiIiUsHQs4yeZJ9++mmY
Nm1aePPNN8MzzzwTbr/9jnDppZeGbt26hS233DIsu+yy4Tvf+U6NxizpzP79
73+rMxMREREREREREREREREREREREakw5s6dG+bMmRNmz54dPvnkkzBlypQw
ZsyYMGLEiHDZZZeFzp07h0022SQss8wy4Xvf+15YfPHFF9CXqTMTERERERER
ERERERERERERERGpbG699dZw9NFHh3333TfsscceoV27dqF169Zhm222CRtv
vElYc801w1prrRU22mijsNNOO4U11lhDnZmIiIiIiIiIiIiIiIiIiIiIiEgV
0a9fv9CqVauw2mqrhVVXXTXqytZdd92wxeZbhDZt2oQ999wzHHXUUaF3796h
b9++Yeutt1ZnJiIiIiIiIiIiIiIiIiIiIiIiUkVcffXVYdddd41as7Zt24aO
HTuGLl26hD59+oShQ4fGGZozZ84Mn376afj73/8edWfqzERERERERERERERE
RERERERERKqHSZMmhWeffTY888wz4R//+Ed4/vnnwyuvvBLefvvtMO29aWHW
rFlh7ty56sxERERERERERERERERERERERESkQdSZiYiIiIiIiIiIiIiIiIiI
iIiISEOoMxMREREREREREREREREREREREZGGUGcmIiIiIiIiIiIiIiIiIiIi
IiIiDaHOTERERERERERERERERERERERERBpCnZmIiIiIiIiIiIiIiIiIiIiI
iIg0hDozERERERERERERERERERERERERaQh1ZiIiIiIiIiIiIiIiIiIiIiIi
ItIQ6sxERERERERERERERERERERERESkIdSZiYiIiIiIiIiIiIiIiIiIiIiI
SEOoMxMREREREREREREREREREREREZGGUGcmIiIiIiIiIiIiIiIiIiIiIiIi
DaHOTERERERERERERERERERERERERBpCnZmIiIiIiIiIiIiIiIiIiIiIiIg0
hDozERERERERERERERERERERERERaQh1ZiIiIiIiIiIiIiIiIiIiIiIiItIQ
6sxERERERERERERERERERESk0kDn8J///CfMmzevpT+K5In3TqQ0UWcmIiIi
IiIiIiIiIiIiIiIilcZHH30UnnrqqTBj+ozwzTfftPTHkTyYOXNmePrpp8P7
778fvp2nXkWkVFBnJiIiIiIiIiIiIiIiIiIiIpUAmqSvv/46vPrqq+GWW24J
J598cnjuuefC3LlzW/qjSSNBn/L666+Hs846K9x0003hhRdeCF9++aW9zURK
AHVmIiIiIiIiIiIiIiIiIiIiUu6ga0CPRB+z888/P+yyyy5h0003DXfffXf8
/eb8HPRPY+4jmjc0bunFf/Nni9JM8R78Hd6jpfQa6TOk75L7fb6e+3X87/Rd
8vmM/H3ep75rwO/Th65t27Zhp512CqeeemqYOnVq+OKLL9SuiLQw6sxERERE
RERERERERERERESk3Pn888/jrMWjjjoqapT222+/cOutt4bJkyeHed80Ty8s
tBWfffZZeOONN+Jnueeee2Jftb/+9a/hjjvuCA888EAYO3bs/HmQDegw+C4T
J06MeqsPP/ywWT57bdB18Tn5LmPGjAmPP/541OxxTe+8887wxBNPxO/y7rvv
hjlz5kTdWWPgPR9++OEwadKk8NVXXy3051yXGTNmhPvvvz8cfPDBoXXr1uEP
f/hDeOihh8Inn3yifkWkBVFnJiIiIiIiIiIiIiIiIiIiIuUK/a/osYXuid5X
66+/fujQoUO44oorwocfflSnlilL6Ok1c+bM8Pzzz0ddGTqLM844Ixx99NHh
sMMOixqpQw89tOZ1yimnhMsuuyzqtdBvTZ8+vUaTwXfh86Lpuuaaa8IFF1wQ
Z0gWGzRiaNsmTZwU54w++OCDYfDgweGSSy6J3+X4448PRxxxRDjggAPC/vvv
Hw488MDQtWvXOJeUzzhw4MCoCxs3blz417/+FfuV1cWECRPCsGHD4nV57LHH
4s+sC/79rFmzwnXXXRf22WefsO6664bu3buHe++9N8yePTtecxFpftSZiYiI
iIiIiIiIiIiIiIiISLny5b+/jP2vjjnmmPCzn/0srLnmmlH3NG3atKL+XHQU
6LPQQz3zzDPhxBNPDNtuu2344Q9/GJZZZpnw/e9/P36WbbbZJmy55ZZhvfXW
CyussEJYdtllw4orrhjWWWedcNxxx0VNV+oHhj4D3Rk92Vq1ahV++9vfxvcu
1udPGj10cmjEbhpyU/xM22+/fVhttdXC//3f/4Ull1wyLL300vFzL7fccmGl
lVYKK6+8cvxvvicvfs2cUjRnr776avj444/DN//5nxYs/Ry0a3vssUdYYokl
4j3i2jWkR/nggw/CX/7yl6gz+/GPfxwOOuigMH78+Kg1E5HmR52ZiIiIiIiI
iIiIiIiIiIiIlCNos1588cWo8dp8883DL3/5y3DllVdGrdOXX35Z1J+Nlmr0
6NHhnHPOCbvvvnvYYIMNwm677RZ69OgRrr766tivjPmQ6MRGjhwZ+63R82vI
kCHhzDPPDO3atYsaNHRXF110UfzML730UujZs2f8LrxOP/30+PvFgLmYzLy8
+eabo7Zsp512ino4NF1ozPj1XnvtFY499thw6aWXhqFDh4b77r0vfie0cczO
RFPC90cXt+uuu4btttsu6s3og0Z/t2/nzdeaTJ06Nc4O7dixY9SLob9jjmh9
fc8S9HZ76623wp/+9Kc4C3WjjTaKfdVGjRoVdWsi0ryoMxMRERERERERERER
EREREZFy5I033giXX3551HhtuOGGoUuXLlGXVN88xixAP/Haa69F3VWP7j2i
PutXv/pV+N3vfhc/CzMvJ0+eHOdH5s53TP3P6B3GbMoBAwaEQw45JOywww5R
H3f22WeH3r17Ry0VvdDQoNHLi/fKCj4P+jI+/9133R0uvPDCqP2iD9z3vve9
2GOtTZs28XOdf/75UYP21FNPhbfffjvqS/j8fI/0PujHxo4dGx599NFwyR8v
ifM0uRfo7s4999zwwgsvRJ3c7bffHudfrrXWWrEXGt+Z69QY+DlTpkyJszs3
3XTT+Bn79OkT9YX0SROR5kOdmYiIiIiIiIiIiIiIiIiIiJQTSevE7EX6Zy2+
+OKxl9igQYOKqm/gZ6KhuPjii6M2jPmPW2+9dexPhhYrX30berPTTjstLLXU
UnEeJfM0k15j5513jj3B0HVkAZqsz//1eXjnnXdi/zS0Xnz+7373u3H25Sqr
rBJ1Yn/+85/D+++/n3c/OK4L/d26du0atWYbb7xx6NWrV9SEHXzwwfHn8L1+
+tOfhm7dusXvlg/0P+vUqVPNNWdGJ59RPYtI86HOTERERERERERERERERERE
RMqJWbNmhZdffjn8/ve/D6uvvnpYYYUVQr9+/aLWq5jQW2zw4MGhffv2cf4j
/bWuuuqq8Prrr4c5c+bEfl/5wPdgluZvfvObsPbaa8eeYmg1/u///i/su+++
4aOPPspsPiQ9wZjlud9++4Wf//zn4Yc//GH4zne+E9Zbb73QuXPnqOMaM2ZM
7FHGvMp8e4Whwfvkk09i/zJ6s6H/W3/99aPmjDmZ/Cy+G/NAuWb53is+PxqW
VVddNWrimOn59NNPx2skIs2DOjMREREREREREREREREREREpF+Z9My+8/trr
oW/fvmGzzTYLq622WtRpMbsx3x5c+YCeacSIEVFf8ZOf/CRsueWWUU/1yiuv
LDAfM18mTpwYrrvuujgnM2mx0FIdffTR4euvvy5Yr/HZZ59F7Rf6j/333z9q
8tCz/eAHP4jfgXmUfC/mfOark6uPZ555Jpx00klhueWWq+ljll6tW7cOjzzy
SOyZlg9ci1GjRkWdHPM30cfxM+gJl9XnFpGGUWcmIiIiIiIiIiIiIiIiIiIi
5cIXX3wRhg8fHrVe6JiYX3nLLbfEflfFAs3EyJEjoyaLGZ300zr88MPDhx9+
GHt/FQL9ymbOnBk1YLw3Wo2tttoqzoUsRL8GaLPQwZ177rmxh1nSsdEvjZ9x
/vnnx15sWWtC0JmgXWNGJjM5kwaFn48mkHvF38mX6dOnx3u/4447hqWXXjre
B+Z8oqULylpEio46MxEREckCbAVe9FDWbhARaV7Yd4k3ETMiJkVci//nv6nj
y7e/vYiILIi2roiISPNSl4/z1VcL+jieySKSJdr85QezHU877bSoX2Jm5mGH
HRbee++9JumWGgNnEDomfiYzINFK7bzzzmHAgAGxf1qh8Tf+PWdet27dYo8x
tBodOnQIf/nLXwp+78ceeyz07NkzbLjhhmH55ZePOjY0Zp06dQo33nhjnF35
+eefF/Qz6oKzHH1br169wsYbb1yjQeH7HXroofFnNkVDx/WeMWNGOPbYY+Pc
0qWWWipet8cff9w4qEgzoM5MRERECgEbgfge/gD9orHtZ8+e3dIfS0SkamAP
ptZx7Nix4d577w033XRTGDRoUBgyZEj873/84x9h0qRJBddUiohUI8nWxb5l
r31/xvtxhoiIiIgUD/LD5K5ee+218MADD4ShQ4dGH4c8+N133x1nZY0fPz7M
mTOnpT+qiFQI3/znm9gbK9r8778fZs2a1dIfSRogaZGZMdmuXbuo99puu+3C
ZZddVlRNwyeffBKeffbZ2IeLeZNoKY488sio4cry555++umx/xffi5mZTz75
ZPh2XtPen2f55ZdfDqeccsoCfcx+9KMfRY0cPcCIGxbzurGmOM/pPZY0KOj0
+J5o9wrhhhtuiM8Aurltt902XHTRRVHbotZMpLioMxMREZHGgN82Z84XYdy4
cdEnuOuuu8Ktt94aa2mw5fv37x8uvfTScPHFF0e/6qOPZhbcy1lEROqGWAl+
2j//+c9w3333hWuuuSacd955sTbwpJNOCieccEJ8nXzyybHG8sILLwx33nln
1KJ9/PHHUTMhIiL/I+6rX8zfVx988MGYw062Lnlt9llyFti67LsffPBBwfFw
ERER+R/koOhNMnHixPDwww+H66+/Ps7wwseh/wr+DTPK+HWvXqfFuV9//etf
w3PPPRdnldH/RURkUaR95qGHHoqz/G677baoZUXHOmDAtdHm/+Mf/xjuuOOO
WE/N35fSg7gWWuOuXbuGH/7wh1E7VQy9V23o+XXJJZeELbbYokZL0fe8vuGt
t97K9Ofid7Zq1SpqpzgL0VY35f3Jz7z66qvhzDPPDJtssknNZ/7ud78bZ4zi
706ePDmzz10faDj5Ob/97W9rPgMaN3QohcYoqa9FQ4fuj752zBzFX9cuECku
6sxERESkMdAHh57T+DitW7eOPY7pRb3ssstGfyfXfqDG5oUXXtAPFxEpAvhm
+GjEZ67pf03YZZddwhprrBFrEvfZZ5/Qo0ePcOKJJ4ajjjoq1leuv/76YcUV
VwxbbbVVjCvh/9GLp6l1kCIilQixbfJI1MO3bds2bLrppmHNNdcMyy23XIzB
59q6BxxwQIxl29dMREQkG/Bx0G8TdyLnvfvuu4ef/OQncbbXXnvtFX0bfBx8
nY4dO8ZzmjN6s802C8cdd1z429/+Fnvs27tERBqCvQZdKhrVnXbaKWy++eZh
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
jVrvxGXvv//+Rr+/tCzkVjnb0Zcdc8wx4be//W2MhVJPpZapNCAWw5o95ZRT
YvyG/rHknKQ48Oyj5yNvnXraY+vSL4W8gb6hNATnLj4Rmmv6PzP/mudp7lf2
1SklyFGSh8OHJTd54403hn/+858t/bGkyGAbowF9/PHHYz0HtvaVV14Zf68p
8X3sc7T5zMlqjI3MLC3q8+iHVI1wfuIjcA2o3ycv1dScL7F26ruJv5OnIS9P
LSS1NWj/RLIGzQjnOlqNxqx36rrQmjTFj6dvGpq2zp07h+OOOy7WOTA7R7Il
aYWJVdJrKuV+mS3IPbCXXGmCb0yv/dxZp/jIzB0rJT1m0mEQFyNnjLY9aVV7
9OgR+7Hhb/7oRz8KSy655AL6g8022yxcfPHF8XvmAz8PjRWxv9o6th133DHu
Y1ntJalWMfUGZq8jroQvzdrCJ+KsJk/Ei1/z97HB+Xv8/fTvsu5ZQOyE+dxJ
Z9amTZvY543aHxFpHGit0byznogX87rnnntiHR2aVbS91NAQ71hzzTXjDMi6
dGb82a9//etw1llnh4EDB4Zhw4aF4cOHx72K97zvvvvii9wHtc+V1sOEmoFd
dtkl7vW512XTTTeNfQXQoYmkPun0MKMmi3wg9in9damPU3OxMOwV7FPjxr0W
rxvxPfYo9AfsLcR86CVIH9eZH81s1lg+scXrr78+9rYl3njWWWeFZ599tqBe
+lIekEvFDqZHBDY3djJ2b1P7FJcL7FHY9WjK6ePHeuSc53wnloE9Qa4E/5pr
hLYIvwitAmcifgv+C7p0ezhWD6wV4i7kXJN9hF+8wgorxN4ftV/YlPh1t956
a0t/9JIB+4H4CH2rqKuifoFaN9YfNju/fuqpp6L+edKkSdH3tr6hOmDPpW4B
zTt5K+Y15Op9eG7QfrEGmVFJ/HrcuHHx1/wecaxZn86K9Q7Espi7ySwZ+plR
F3nDDYOi79ZYG5XY6wknnBDnR9S1vjkDqMdMMRxqJ4nx8T2ktCHWx/OCHc5s
B/wYYgTk/djn1ZmVBvia+CPoIbbddttwwAEHxPgMtlulxWCKQeo5zl5KjIfe
Jzzz2LrkqDmD0Y9h93POsndyFm+88cZxT1t88cWjfXPmmWeqv5R6SfPg0JwQ
LySWSu1ur1694vns/LbSghgTNvY555wTzz5m6zCjiHyeeeXKBJuHGM9DDz0U
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
OPtS7I0XzwjPozqzyoaYA/pT9p/U14P6HPYHYmyVZvtUO6xD8i/4qWm9M0eG
fFMl9vXg+SVnSL00Z26KIxP/6NixY7jzzjvzer/XX389XH755XH/Sno15iKi
V6tW0Jg99NBDMaZz8sknx9quaq2rSs8b+oXU455YIf3vyFNrb1Um2N4899SQ
p32VeCraFtaHlA7YPDOmz4j7FfWunAnEoNEfFJIHXhTqzBYN+RV0AOQwjjvu
uNhnt1C4n6xPao9zfZykM3N9liasRfxPYve5fRGIqRPjKDSmjn5o9OjRsY9O
bryEOj1sYfIT7OH0b8C+ybIOoyV0ZtSScB5Rd8g6wHald1uhebdShLwTeyt2
fqqdY59HP0KdZz5w3QbfODhet6S54RkkBiPlBbO/0DGn2Ct2OdqprLTGPCv4
mjxzuWcNcS9q9zj/85nXmmAvxHe/++67Yx9CctzoX4nb3H///ZmeYZzB7K3k
h5h9xvfgRX6I/RD9FdexUF+GfCyaPGKaxKjJH6W+g/R64Ofx58WuWWIfRkea
+txxv9gXmTuivyblBrYF+wV+BfYzulR6LSVtjzHd0qcUdWZ8JnL9o0eNjjWl
nGX892uvvRbPPWpw0WvzfLWkzoz4G88+GkvqO1PMF00C/l6hvaY4a7EtU91B
0k7QS4v4cFaadUCHTbx+7733jj5QmpF9xeVX2CMkB54n+jXTZy+3JyrXjZ7V
hfZL4HlCz1JbZ9ajR48YV0CTjx1zww03xHVSbLsBm4U+INiV6PPZJ9B+smcU
M4YlhUNuNc1+JP7IvvHGG29UXD0yNVicDcTE0x7MC9+FfpecHfmAjpnYTDoT
yVczm49ej1KdqDNbGPYR7H6uSW4cAl0HNhH+QCGka04cIvcsJCZGL0/i99ha
1LYQW1RHUj4Qa2FfTpp54sVNiVfVBpscH6FH9x4LPDPYL6NGjcpsJoQ6s9KE
eCGzWOkXQN6BXgHYPWgM3Rsqj5hjnzEj9mcgz805RLyaOi985Eqr32V/e+ut
t2J9du6ZS+9G7BH2uHygJwTna+rdi3aNelF82WrlpRdfCuf1OS/OGqGujzxO
tfbtwsYjBkdOiXob/CuuCz1ZsM3cUysT9k3irMwWYm8hhkDfmI57dYx2W6Xt
q+UMPii66m233TbmM4nToTkmp1nM9anOrGGIC0x7b1rU2+yyyy5xflcW5whr
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
/mDdM6sR+4AXczaJz2EzYh8Ue6Z3PtB/jPgAORz69+H/UrPFZ3722THh73//
e/wufCd6kuFnc034HvjjpXTmogfA1qAehGcBfx070blkItJSqDNrGkOGDIka
56TNSi800GgVsoxrE+9DX53mqefW65Ova+qZjX1ADob+XOTj6FOFlg2dxaRJ
k+1TVQdo77DfiB3U7meWhT7/y39/GfvTplq1dK+ph8Puacl7Qtxkv333q3kO
6XtHL5JK6U9diWA7U9eV23OIZ5acEr4IuaZy78WFhgBfIDdnRo1W586d89KZ
4SNhl+fG0+k7TO127TlCaEGJ7TETYcCAAXFdlvM1lIZRZ7Yw7Bv0OjjmmGMW
6mdGPKHQ9UBcDD+e+rLcnrGcO/YCL0+SzXneeedFn4Pn5ZRTTokxm6auI54z
9l+eCXrcp9oPzjjyo8RQibNkuT+rMysdeG6IDaIzJ27OXoGNyswie65UD/hm
1FOTN0lnBTXezAuqlD4f7J34gbl2CHlmcom19WENQR6J/tT0L0vvg+6X/bL2
uUqtPH8XW5h9O9q68yrX1q12nRnnJLbd9ddfH3vxEBOitoyzDr+nUjSb0jjw
r9EP0Nch7RX0Dh88eHDUTkjzgz373nvTYow+9e7F5iFOmMUMvsagzqxu2D/Z
I9k/qUdm7yQWhT63yXvnt/PtXPoOoadJ8Wdiz9SbkyNwlnFpgy9CrHyHHXZY
oJ8ZM1Wz0CBil/GMkZfKjZeQz+Hcrh3DzJKW1plho1JjQg9jfjZrjv9GV1Xu
EDNBo8Nc3HRt2WupFa+tD2sIng/mK+bO2yVuQW6RHga5oKUht4POjDMFe7BU
+k9J3WCPEQNhX6HWihlVnNHVGp+uJlibrNHLL/9/7N170GxldSbwqlRSqcyk
UpnKH8ESY1UUKxe0ggJCEbGKJF4IiuAlzMhooikcSNA4E9RAQMoLYADDHRME
i4hSIBqYYwQHJ0GRYbwATiKJgjc0ERQT5SaXw+EMv/dkHd/Tp7u/3fvWe3e/
q6qLwznf17177/Wuy7OetdbpCX9n//EDcG0Lx6xIkSLLlMIzqydmMOy2227b
d5znfX5mmbfJ/Z81O01/sRosXKGO6HnT7w9TVe8LzBquOqRZoEMSOIGcbY89
9kg6J6ajA+obzlLdWJy+yBH15cgn4BM5z+yII47Yev311y+1p0RPFG5N2Ar4
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
K8ntqjlPcg3Xv+oSuPm9996X8BXckj53hsKWnce8P1AO6XzIFfqUNnlm7ind
l8/6bvhAzi1bIG/BrdMLDO8SR+E7iqv8Dsza+ZDHXHrppSknkR/hH4nPgsPv
vReZ8+pMsinP+63nJR0/99xzU2wxaw+m+Ff9SzwqfxZrFGkubK5nbZcy3eAX
Yu8C7AOH2N4GukEfZ+mGOUTsOYwl143/9LP/KeWk+uqqCh34m7/5m+Sv6IaZ
DLN0Yx1kGDyzbfNw1KZz/8SWOPtVZq4XKUJ+8P0fJNwNB1Wuf9yxxyV8tMs+
gz7Ed+AjxdQwijJHYDzCD4pfxBZyA39eNX+jJiJX45/r7MMe8iv6ptgTfnLo
3JouRG4AKxQj61+T206rn0WeZdePucbRNxZ8EfHeqszwW2WJ/dCetXg9zrTz
DaPRwyNvHXqdsW+eGXzr93//93ea2xwv901c/diW9vjF8C640zSemd751/ze
a1LMsIjgU8FR4/zu9tTd0lzVrmLxmL2k30v/I1vh+8A04bjyNL1snte8fvOo
WcoJ5RPwv9j/R4flkLDG9AwqcLxhRepG5mzrSSoc//kSzxGWk/eF4SzynbDf
VZLYqQrfVq+nK7B4mJd6pu+stig+6nNvgRl8evDYIrVuz0K/p1qaPAIOOk/i
e6lPsp1hB+JlbqA5iWXWeJEi7fHMwn46uxF7qeXZfaIHWr0Ah+yOb9wxdyZN
+EExnJhb7UFfe+yH0GNrNo4+uSp+UP0Nbur3cI/46cIxXZ6EnsDO7ZBRb8Gp
F6fg1uitxLnHtdlIT9Q/xHV8Fh5K7PqjJ/r07R7kT6rqibkA6jj0Ve13IxxZ
Pi2X+MM//MPEh3YdY+8tXheeWexIxWMU/3jevieswHw6sc+fv/vPE99IXadP
cV348Oxn2GR1ny52pMR5xLeQJ5glKW4S95qZYI61Wju9nodFRz1SHqkmi1Os
1zHOo3xITdW5roIhqu2oZ+rTEfuppVXlUlSVLY/nsj/84YNbb/vybclHiHvV
/NT3+MCYOa0P9S1veUvi0F1++YcSt8619I0HuW9iW9y/PK5V96K/bd+fIqsl
68wzu+CCCxKmBAd0ZsSnsV+7E3k85Hh086PJl4pNfLY8Frb80pe+NPXs4wiw
9fO48GFX9YHKz/WCwoLYVbmxfNacV3ahil2NHZHm45jb6j3bnpHpmiOvwC2G
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
v4C/0wc6msedsCDxNX+I2yXuU/sWy8MX+p6HiENtt5p5OKH/8lxzYGZxNBcR
Pl9d6SUveUmKT+P7qj/hmM2rZzm/8hS4QT6j2HnFIx3zHL5VkXXmmcmzzOeO
XcR0Wy6nfjx2Ea6xZ3hmce5wpk4++eRWecliRji5WHvWfZu0q+wku5rj6uwm
WwYrUNfGR4VDsGOut+99W/riPvKRj6TZjflsL/m+GWtN5/04Y3rR9CzCUeFK
7KJevmkzw3IJnoOeXPoaz5f+qmM404veLxgp/CnstFhMfAFjgpPiU83LATxL
PO08ZxQ3sfOeax2hM/IQGHO8JzsF37zp8zfVes+6MlaeWcwzi1lHnicsvciO
4jw71/qHnXs5sBc+LB6/3HCVZnzRDTmFOVOBa+NcmydQZL4MgWdGF/V885dx
DXwm+yjXacKD5qPNT1GLk+vLKWJ2s/2Z83Yy8+PievU2HOi4NvxWdYG29nUX
qSf5PDP+Hs7S9VxpmLHYT/1oVWdY41WKS2Leg/OCD1+l7lWkSJHVFnYPZj45
40qvsBx3Hn9GDxZcWs5x7jnnpvxwVeoxqyj4/7gFeEb5sxYP6VMbug9cFs+M
wJv1Tkz29+FuwCiaYsbyOLg1X52/vzhXH3oTf63n0lmO+yYeh6eoqY79vMoX
YUpw/8DDzEVPO2fKDqhGcuedd6UaDu5Wzrs67LDDatekYw6WcwzDhA3K48w0
M/ei6rxr+YLeM/lCbsfkgnX2ebouOyTV+PL9U3C1k086uXL+7LrwrNRX/T6+
GSxD73KVa3BW1e9i9qCXvmYYZh2s2fkwFwVW6f44HzBUdUI9sXXOiBxf/Uz/
ippbnDt5mzkNG/Xvwk/x0F71qldtz0voAIzYvE3XW6TIsmSMPLOYxWUHcZxH
nFmzFIa+D32Zop4VOwjxrcRI7KOcBidDjMT2rwrGzsfQE/Fg6Ak8FQ+o8PKn
Sxc8M/qEH+Xe42SFX/b/fH3VZxHzwyLeUC9Rn1avXVRcjzghOPKBj5uZVvW7
qk+b/cGX+32cN+fI/WoiclN5Fq5U3ruulgsrHmseE+fRzok4j+pdantt5eM+
Aw4slsWpUUdsIuqR/IpaSjyLF73oRel9m8wRqCO4j7gj0W8it9WnIVdvIpGn
6HsRv8sJPBtnQ1xQZRY4v4KrbAZaHufK8dU6Cq93+bLOPDN1LzyYyOHoJj0/
/vjjR2tPQ1L/wEMPb5934vzhipqVXmfW+azPgFmYVcJm42Q0EX4AbhVYVvRM
skF1MI0mAhuA0dhVEryrJz7xiYkP3Uj+nf8nRuCP7Ij2bOBKdmDz5VVEfMSn
wRxyTjyu2qLz0D1H9lhcF7328BexkOdbRfgK5ynyr6i1iucW3eEZIg9ln3I/
6/r0AXz6+k/3ekbHyDMTY4tHg2em7mFfQd3nscqizmfWD/2Fy/IF+j/psJhb
PLqsHb5dCN1QDzOnOWYG6MXFXSoyX4bAM+NDzGOFjcc1wG7UEeTqTd6XzY19
l8Ffxk+tkjexk+7D/vvvv0PML0+1R7npPs8izYTe2t+mpqV2i0vb9Yw5nEV+
B4a8qrUN+AXOf+g8HyJ+nDdvoEiRIush6ml6vvJZZl5yLDWWaXXowODkhTA4
uTAMeKg1uCLbBKda//skz0zOiJ8xdJ6ZXgB93rN4ZjgeXXGLcCfgF/AkGET4
U/UUuJx9Mk3EOYThmDMW30nNSO0z7a5tgEnrp9PDHvwZca/Y2bn3vca8K0le
oA4I+4eFqWvBFsvOzOYiJ9KDk++RxIGym60uVuv31EblbewQXVQjwomA71fl
RMgNjj322NT7G9fmz+a01Kl1+Vx5qxptvn9KDVdeUrU/Ct/U3O7YRQK/wNmu
ileq9eox9ztxDXbcwrDr8ACcfXigWgJ7wnbiyr7vfe9L56bOGZErnXLKKSmv
8P3gUepv7GDslpgnziw90I8cOmAWmp0m6pf/+r1+a5VFiuQyRp4Z3JR9cJ3h
B800EjeUGcOzRf0OLxiuiHvPlsX+utiXbD6TeGIVJPTE3Dt2l/3mM92HoifT
pQueGT+vTgqPk3t7wchhc/K0qs/CPBU8iZjDwb+rnZjBtIioM+G420spNwi7
Jy/kk6vuSKdHOPVRnxZzmDVldkkTYZPVvsVjcW3snBgER3KsXFrxl/Modorz
qNbnPrbha2IHDC6W2Na5V6NuIq5LT7/rjDxYXsD39L3D1LmkE1ET+g//4T+m
Gk/T3X+eiXxADIDDyR84o85rzLfZSJwpsbLrwYl0rpwLvE3nv+8ZRUV2lnXm
mamzq4HxO8HFoud6h+XQY44H7EXDi2D3fC/nz/fyndvACGHgzrc5sHitb/yj
NzaqbxOxGbsibg+7ilNkV0jfc1BuuOGGrUcffXT6buHH99tvv1SXbSJwFHgK
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
wZQL5jYeGSLPTM8RX0yf6J8XnEtfAX6FuE8MKe6r+sJjkS+pHcox5Ud2Roon
vH/MvKrLj+SP+CfcFH1wYgvnBqYAszQb6Z577vl3P7olnRHH5P+zdy9wt89l
/v9/FVFpCqGIaSIMM0ghh0SFUA0aOXQa/uVQkjDMr+YnEyImEjLJYRSZlE5I
B0kOTZTzkJAcc6ikbW+b7fD5z/Pj8dmz2nPvvde673Xf91r3fr8ej/XYx3ut
7/oers/1ua73dV2d/gB/nLZO/tIa3Y7b+5lH4uf7ue7RvtGI8p3adXeOae99
1rAiJyPX4BrbJ+sNkBm+Y4e9dx/KI7V9nH4Fvc6RhPuYT8dfp1Vr/vwyyyxT
c/y95u9/fuXPa7yjxUTo1cQL5H5Hg+fysEMPq3myljOzxh1//PE95xw8Y57h
1h/H+7G36oN7hY2wxprNQcfKPtDl0b+pp/HvzVf28hzb05i5ydY5L2wSrdpY
nwu2jL2Sx2v9K7x8jt5JidGEqcIw6sxoXvQ7lCNhC+XaJ2qGwTAjTyJeSmPM
VvPDWg8bf/big5rt0895dpMFP9D6QI9ENyXP3q95T1OVfunM+P36fZnT2rmG
2pvIdfYym8NaTodOn9apV3Of9qpT4v+ccPwJ9Xu14+I32Cf1mj9Xm/D2t799
tm/meaK5l7ftB9dcc03NgbecKx9H7toechiRF1G7oT+882/v2M9cqP6+9vb6
basd7EfPhlbPQGfRWfPFfzabbiJ0ZtZo96YYd/t895z97WjrszwH/Gh6Mvds
i4XZ3zt/vfb2C4PPgq4zo4+xjrAR7Tlq52FYZxHD+tj8Ousi/Ws/+4Gx2/Ti
+lZ89KMf7Ys2uNVzsz+ddpXOTC3lROjM5NzUk/lO7fPFL/iLo+1763t5X30v
Wqy06aXkE3qN29ALis00f4yP3mYZ9Ip7Qp5YLKp9X3W+tN+ucbeIvfBLnKf2
Pnwpsd2x9lr1HLqX2/cVB/I5zsFEMYw6M+ddrYQ8ABsvNjbMszvGE7Up+++/
f32Omr7Ui//e9sFyKfytfta/TxbuZd9FTJsWeTQ9qxZUJltn9uADz8zqs2dq
tUzWeHNxRwOfn0ZYHrRpu93v9hI032FqQtug/4Y8FxvAB2i5Zmu3uJ+1Qx5a
Pki+VO9a8VV5EOux3qdiEXw0vo3/z6ehQ5PXUn8/3nbF+/M/9VTxTNJGqj8U
s3YcfF975c44X+tb6zWWfnvyU/q/dM4v50/ZU4gTOL9+zzfTd14f1g996ENV
b8J/MId9vHJH1noxNbWSetaKVzgn7D59i+MwD0Bujs5YbCR6lhDGB3F0e0t1
rzQ+/EyxhhablG8TO9ZXkg1lx/hpE9HHO/SPQdSZ2fvRiNvby23w+8Xbre1e
7kPxa+u3X/373F7+vb38HB/Ae/jVn/kDfAnaKj7xaHPGTS9mXTr//PPr86Bv
qPPqM+jY7dnkJa3v4u7WPL96zug36WToURy38+84zcnjKzgn/e4RKJ4oPkPP
17Q0Yqt8gmGu8aKnt8dxf6hHce4GVQswTLT5j+7NpgljI0bT04U/775377UY
Y8vX8v3kDnuB3+q9Ws9sPr5+EGqSeoWP7dlQl9KpgbMOms3ZS6wR5vjYf7T9
auvZNhoNnPuYD65nKBvJrogDsRXqZ9Rv2VvLU/KX+c/61NBc2hf5Pf/+Jz/5
SX3Gx/Jc8NfFus0lajVkXmZn09aNts45hEFjGHVmakXESvgTdCx09IN6rIOE
a+3cHXvs5+p+hx8hhyJuqS7P33mxpXo+DTvuaz0p+cNqLqy9coBh7vRLZyZP
rFbL2ty5htoH0En1Em/jl6ir1eO0vQ8/w76jl36+9jH8H3E/vko7Lt/RXrHX
2Wnmz4jDyiG3+gQxWbHcfqCXiT2Xz+BLyrmyeeKrwxgjdK3UTNujimOLu/br
eWT/+d10ePZI6qJ69WdHwvFZC/nMnXEE94z8T7ezX8eCZ5Imz+yczn4b9va0
daNBvsla4Hu1mbbeV62N2g5+dJhaLOg6MzbCsyz223o68H/os8RWhhXrhFwb
nY/rKo/UT7uqB6w9OJ2Zta0XjfjcEPNju9RNdtpVsRe9xCZi7oA4pbiHuGD7
fOs3+zfaPkbOl3yjXEKnXaXl1fvUtekFPeb9XOtBzMd485veXLUCvR6Xe1/s
uVP3bx8lbms2areIr9gvdvZFFpcSszFbayx4b5opugo+j5c4s/q+ifJ5hlFn
pubB8cqBswXy8ZlhNzLuMTkR/pM5knwesV/xRv2+7FH8qi6413jtICKGLJ/p
GVXHy2fNvdEdk60zE8OgGxGjb5owNtz+plfsf63lZmZ29rTyez0g5OrC1MW9
zDdRH0Vbz8aJLfC55HPnNUe45Xf0ALB3dw/K4Yrl0IaPp77MfesZ5KOL06gx
5rOxz15+rw7Cuud70cDTzvOL5aH5N1/+8pdrTseefTRrI3/aGisn1OYAedk/
f+tb36r5OPkwvlo7LrFHuTu9D/yeX+k41F+KxY61t4rvwIf1fq4pnZ1ZqPZ4
Xj7bufGy1/NyHHvvvXfNsTXd2xCGkkIYaNosabF06y1NmTiDl/potleuhW34
9BGfrvG2XmaAhcFgEHVm1j3rkR4LtM7svXWR9pmGgoZLfEIcTPyF9mVeL//H
//Uz9kzyLnLE1jP6ZfVNckR81X7sK/jVdCD0HJ4P+1o+h74i1jLHb46nWJRf
HZe8gpiBvJWcsOfNMXv+xqsW3HflSzhHYiFiFXwDvtHNv7x5KOu8+CXixOqs
2uyhaF/7g324+5cf3fp76TM+mhpnfptn3F600+60HmS95oXkMsVCWmxQnpGt
oI3rFfcQvSifvB2XPaYaDTm6bp8LMWI1rewNe9rytfIXcmHm6Y4W+a+2t2Yb
zT+i96bx8nu+c/s72ggzFex3xAHpTXyHsa7VahjVWbf+du0lRiMGOoz2I4SR
GDadGfsgB8CXEB+xpg/zzKOJpM2AE3eRp+I/8kGtJ2YP2w+pfRtN34VBw32i
bp3v6T6xVoixhXnTL50Z/YJY1pwzWq3feoX2kkemT7Kf4Zd1zitQm9mLlog9
8z34FS3GLm6vbvfSSy8tM6Z3FysVH3SePC9ykK2WhS9kf6N+ph84Xr4I3af8
IT+Lj2r/xM/sd33OeOJ5ZHfMrPM88mn72SvC+eB32o/a36s97kfvavtIe152
sbN3i7wP+zIR10CMXX+czv7c7gk6ztHWR8s1im3Zn3c+n/aWcmoLkv5oQWFB
15nxf/i7fB1aV/pguTVrHb3RRGib+o3YNL9GzJpd1S90tL24RoLmxnqttlR9
mzxdP3rCWg8cpzhosz2uBa0HuzQRdtUa7l6wh+js76XGYrSxycdmPlbPV+d+
qmmVxBT0Zu8FmjvHtMQSS8zuNykO0WudobVQzKhpp/g/1jH1etaQbvd67jda
BXuEVvvoJS4pDjPWea2uOx+NnXI/O041kY5T/Hwi6kSGSWfGpvFR9CJyvqzf
cgHJV80d88XE8PiI/Cr7Afeu+pNTTjml5jHcf/KBV1111WQf7qhp9wZNUrs3
xHZyb3TPZOvM3H/i7Oqt297DNRxN30ixH9oS+cHOtcl70vHSq4SpT5tRpXZJ
jlb9gBgIDZm1Vq6088VP9hJ/oY9wP/KXJ6LnbLNh7lt22XGKgfCH+KNy0Wrx
5PrprOSfxADsj/mR+nvRpfn/eoD7dzmwXnM4bICcVGfvCC+xGL1WaexbLpx/
Jn/Ij3Rc/txqBfnRnjU1jfYio6XFoMS+9V3wvm0ehVo711XukP/oPNDI6bPf
etyoSaFJc16jOQ5h/OAn8BfoXMWMaVPZLb0XxV8GecZe51xCe8RZj8+qezC/
b/0h/fuC6lMOos5squC54JPK89Dn6C2gXo8vMjf/hC5KTwKxDj8/Efel2AAf
qml09LSgKZoI/6jfiHupHeAvyd2JYw1zb7ZBwX0oRtO0XHJ5ar+sC6Ox/2JR
ahb0m+u0O/xPtam97E0dGx+ZX9j8W/E8/uOcsyvaejCv58r34VfSaXXaQ1qt
XuKq/H7rY2cdsJe9MF+21/lTc0MujC5PPIguQj849z1thPMiJsSeeA766St7
TxoM8cXO7yd+N6j6mxBGw7DpzOQa5Nf1cW2zu3vpaRTmjriT2gQxmmHXmdHg
67Ernyx+pm+D/q9h3vRLZ6avhfXaM9q5hsrnWNO7zRe2Glx59M71uOnZ5/TR
mh80EvwWcXtxv/Y+9i20T73oLcRo+V+0b3NqdNS2jKYGYG7Yq3hP+oH2ObRB
NE4T0UurX7T6i1VXeaZORox4tD1jRsJ72Y+6X10XPXf6kZMWR6AblHNs518s
1/04UbP23ANyQ3x/n28v4Dt6Jkf7HT3n7GPnXsDL3lL8ayLmgYaJZUHXmTXY
IXWS+ru0+ii2g35m2HjoDw/V/bHYlu+hF08/88X2Bqeeemrt86XnCV/b+jdW
rMVzzjAV27IWT5S2Q9xA7lIOsNlVemJ5yNHmAH0vdlU/i0676l77yle+Uvcv
3cKXEcNUW9h6aIjXiH2M1GdpXvEfeU3H1fwIcS51dB//2Md7+n7WcXlL8az2
3WjBXDcxml57wo6EtUkcqem8vPgL9N7W4/FmmHRm4l7uV752m6mqjj2MDvoD
ugFr47DrzNgD9lpuk22jLWA7QvdMqs7sv025mSq0PdZ2dtZ+lZ393YO99xiQ
F+YDWsc71yZrC/+nH31Kw+DTYiT2ePaw1joxH/3s7P1o7+Vq9QphC91v/v4H
3/9BzR/Ryqvvo6kfT+xtxfEcA1tsbbM/pelyjPxesaH773+g3rtiMuIibJz4
EF9YLNM6roZBTwV5OT1le+11Lqd10EEH/Vlvfs+j3Lfj8TJrR0yKbyZ+zhfy
soZ85jOfqbEJ8TC5Ruu13g6jxb5N/ktenf8qzul9HYNr6bqKs7nGfDa+i3NF
n6rnGv/N8agFFRddUHUiIYw38mh8BfE6cUrP/a233Fptg9q2Qa4XZn/1b5Eb
sn9Vs3DCCSdUzZz9O02D2iL7Wt9zQbMj0ZmNH62fkfXJGkozrm+ndc+6Za2j
53ZP8k+svfxycTx7+Il6rvhEdN18c9feWkz7PYwzEvhPjt39rJbeLNKJiLlM
ZcRo2HmxRnFAe3F+oBiD/flo7lNrCTuspqDZHPEfcTgx2261G/6f/S2f0D6w
9d9Ye+21q389p8ZQzpFvOa8ed549PjZdWTs2+Qb9hnvpjcd3teaYpdG5V+Xn
sgX96rNX+wLPeLT6ya6H9UwM3TptvRZf8536vb7pbaLHpPqX9v3sL8Q+3S9j
7XccwqAwbDozz7/nUH2u+jHP6TDqxgcRvpq+6mI0+s4PM/ZG/FDreZuFlDjq
/OmXzkw8a79996vPaYvJifXxYeViu11D/V9xUHn0Np/bSy0mu9WZ8+YD8E34
BiPlia3d1nb+XXsfM5nc896rW8QMaF07/Sg1CmKO3/zGN8v99/VPo8PHt5+n
i2ifJVaq1qAfcyEnCr3LxK7lzN1brl8/dZ+XX3Z5XQvoj+35+jGXAq6lvZb7
r7NmRO+LXp+J0SDWLq6vDrnNNpEvlAOQEx3td3RfqbfWf68zbq5W5OKLfzKm
WuswmERn9gyeJ3ljz1GLCeqrpVfXsGFPLN6gltOzS0Pdz2sqbqdng3PFhxqL
zenkoYf+WPUP+hI3+yOuRVM9EXo/ddk+xxpuny9GIz7omMbyHcVh+EudvoG4
knXJ89etRs/ns9HsvB4jrc6QNkyMf07NU5tvOjedl5yjmI1+IN6HLyU/Kf/Z
C54d63jrLdv6jdG++7d+aN+tPWLG733ve2efQ7WfYspiPuPNMOnM3E/sluee
b2C2fL/mti+I2G+IL+y4w471nu5Xzexk0OY2ie143sVnrRWheyZLZ+ZzrUNs
vRiG+Do7ZL2kPRtNfYn7QX+jzvpw9lt/KLGfzOlYsGlzGMVT+RJ0Sfa48i/+
fiL7XvEB5LP0ENMrRH7OM6C+S45ZLG9u96u8rz2758Zep1MDoCe4GFCvOSo9
09QgzKkzEx8za0d/Ivqykfw7vhx/Qu0BP7A9x2ecccYzMZwuU1fex/+n8/d5
7JDctr3cW7d+a/WP+GBzy1vyX3wPOlOaPccvDiOfmJxWCAH8HTl2PRD1+xVP
FSsSgxYvZO/8nh9BnyCmzz/SX+fSSy6te80FRXMWndnE0fwTa7d77Oabf1V/
pXGcaP+kk9ZbigbeHrzVodPtD9sz4Jnnp4jpmBlE4z+Mcx4GCedPHEGescXx
zNmSnx6tho//qz+aeE+zOeYLqKvoJf/o2GgqOuti+dm0Xfz/zn3mI9MeqdpJ
MVJxBb7uSPe378THVgPRGdvVu6vb3njeVx5XTzH5+/Y+fq//vDigGO4wI4Yg
3t36p9hb6MvIjx82uxHCvBg2nZleFOK/nk1a3n/913/N/Og+IZdinRJPEY8Y
ZuSpfA89MtqaPky6nMmiXzozcTXzWPWuarlW18J16GUJlTcVA29zQ6zF/Cmz
Bzo132JrfBg9O9iEttftRA5UDLJzbrgeUXyZbvOX1n/HJPfOd2rvIw///ve/
v8b5+jnbyXuxxWZVyAf4/nK8dBHD1J9PLtT5Efddd911a8+NfvQ+aXzrW9+q
uX33m7rjfvhp/GX1emxi6ydAT8gnpxmYiDofe1j3NE2Aay+eobcLneNY8JzT
L3b2M2vaA7Vj8XOnHtGZPYN14sc/vnh2D3N7u9e//vW1TnLY7nv7ebmi5ZZb
rmphrYv9XBda7zd6bGtQP86PGlU2hu1hr5td1bPC5412FnAv8AX5iDTDbX/P
ztNijQU+hrhzZ/9L782u8om6he9CQ8iHau8jhskP8hx36oDFWF1zOQHrwkga
a/6bWuA11lhjti5+4403rnncbnHtaRzUobT6AcdEA/bZz362fvd+xHpbjy59
Sfh6fMdmr9SPjDfDpDOjizrpCyfVXLz4oGeVvxxGhz2FvJrzSFc7UT1rxwN2
QK2/nEezr2xT6J7J0pmx37fdelutZ6GBtkbShljrR2sD7ZHZ785+3t6bdnkY
c2Jh6iI2wDehy2qzPOnGrMPzm9vuPubb0dTL93fqwt721rdVHV2vdVT6p8m9
tX4PfvXs0Fzo9/bErCfm+fyIRzn2zh6tepLTjHX73PHz9IngN8tpOwZ7dvEA
ee55+V4+Q1xPXlIevB0D3Qgta2ZnhrDgwj6wAbQDYuSHHnpo7eMgZt9mE7Kl
rW7fvt3ezL/xLcWmxZXUBp111llV+8PGTnW7Ep1Z8OzotS7PqGZRTMSzIJ44
yL0KR4KujAbed+Bn6DcixhBGD1/WvaDXWPMd2UlxvNHW9uinoU+A/gPN5rjn
aNl6mZngfdivzvdh22mI58yXqz1Rp6bmg9bMvnik+gRxQHlQuYb2np4Nc+27
3TN7bsTgxGfVUjhn4oByt3qZTYWaKDo6mrLmj/Plrbd6i/cDdsl5tKZP9XU4
DDbDpjMzw4fNEntoeaFxn1+wgGAN2eQNm5R99tmnxiSGGTEdeWT7H3Mnzvjy
GfONT4X+6czUdtISyX+3fKRcoVrUsbyPPa1cK3+4k86ZmHRYvsOcdRjWWzUw
YvXN1ukPS5fUba8767XckzkJLYYpT80nF6sfD+0Rf4Hvod+K729/795WI/HU
k8NRh8pOi3HyGfm0ns9+6oPl0+Ty7fPUMrtOY82b6MGm34sebC0nwwc388J1
ngjfzfxZ2pEWV5bfFwMaaW5aL/DTxZM6c07WVH59v+bu2YPwIWglUy89+cyp
M7PXpWVZEJFrohd1Luxf5VrV5dqXDVO+1Uxf8Qt2z6/sYD/7+555xpk1X2f/
q19kP+zqzb+8ua7fzcdw/l0H+g6+/ETE5qyd/IqmX3f+XH9zA8YCu8oP6OwZ
473VxNAm9Po+73rXu2a/j2tADznnMXbOxNSrQnxoTq27tVaO8jWvec1s7Vsv
ujrXnC0/5eRTaq6BH2I9osGyHvZ7vqDPc+/RVliXvKzvl/zkknFfd4dJZ0az
ecABB9SckL2O3PUw9mUcFOx/1HCoWaBzNIttWBHvVUPsuZEP3GOPParOKHTP
ZOnM2Fp1IG0dYWvpguUERlufw27aN3Rql90XrddmP+Dnt9h2fP4wGjxztFs0
XK2XKxsmt2Vv2k1c2r5ZTFvMpNN/st8dTb9aviF/tenM5Nr0+zj99NPrrJ35
+cR8MvkxP9OOZ7M3b1b1a90ci/fXa4R/JxbGf/OruJN8o/jcvI5B7lGu03GL
xbVjkJe0h8izGsKCC7/XHo4WQI2FWmAxZrXBasPZY3aCftc+0t6UL2Ifb99O
68oesbfqjsSZxKz1vxk2rU0vRGcWQDOi94BYmXyQ+Ii9lzreYbj/m87UMYvF
+Q72wfRz/eybsCAiX8iO6kXRtESHf+rwuo8bbSzL3lONcWc9K/urB08veTXx
f3GBNp+gc67EnL3H+K9q7/xfvdTcFyP5nG0W52677TbbX7Ym6MHb7Z7Zc2PP
7TvJu8l5im/6XN9vKuim+OR899aLpbOfWT/8cfeXtdp5N18sPn6YLIZFZ9bW
wTYzk+1hU9nafsxqWZBhf9wH4urWGNqKiegbMB60++TII4+s9tu6LlenbjD9
X+dPv3Rm7AdNKD1Di2d7z1612uopttpqq9maLvs5daVz1uXrgSKOplereLz7
d07/3n0hh2hf3PwfPWDokrrVmbGVcvm+Cxvke5mXqYeaWOJ42czvfe97tZ8H
7bvPlX+VI56I2Y1jgRvqvPOdXvayl9Xn0f7bPSZHOlbYLnFjvpR7xPt/+MMf
rlqL0V4LNoQPrUa4aePazDJ94uVxJ6ovvNgOneziL168+qDssxhPt/2H54bj
1zNGj6I5+5mJ0Y/1uzl/9t56q9gvuE+femp49DtTEc+c/a510V7R/lJv7AUR
64D5f3Q7baYz3Z087LD4Ceyq+clN90MbIRbQDz29559PyG63Gk33jr1rt7Mf
R3pPdkdfraaNa2v67rvvXte4ibKrbCidlfWUXbWe6wU21l5q7J54vTWo2VWf
YdY1u9ot4tf0W00X5kUTJ8+oVrATn0eLrA6VbzNSjt8aKd5F7+Z+953pJfh2
3X6vK664ovZ+5fOIiYhH0oyPV2/PSy65pHzg/R+osSa5Zvs+ednx7uM6LDoz
z4mY2zvf+c56jPwU+2Mzb0Lv2C+o7xW7pXHQl6Gfmt2JxL3hPrb3FdemQbS/
H+Y5oJPBZOnM2HDPMpvOXlsjxbvYvtH2F7Am2OfKJY9HPzPvb99P80wTJFeQ
2HbohWnTHqn7Rr5mqy10f1rj+Dnd+rbiP/TX+tV39q4X6+nlnmyzusTHm7/q
JZ9spnm3/aDZCpqLLbbY4s+ORz5vfjkzvhW7LfYgV9n6/4pN8N/0Spsfclri
VuwIX4oP13q/92O/H0IYPuy32Sbza9gisXW9kenb+R/+nhbBvrhz389miZPQ
2PKFxErZJ/tc+1Q223upibUfmYjZD5NBdGYBng9xEPkn2nhrNO2lHM0w9F56
7LHHa3yD3yXWJ77DN5AjmAqanslCPpU2l26XTWAX9Rc3f2csNc3uKXst8UDX
y/3Waz8z+Uq1C/aYnX1/2XA9Zzrzc45Tf2FxEflYxz83Wpz3wAMPrO/rXpJn
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
X0xc/LiX3Eyr45YLpQN0ndTNs0VyPnI/IUwWw6IzkwPiA3sGxcX4sGb1Zh0c
O61vBb/Y2iPeOKznVTxH/EW9Ibst/6Y+cli/z0TTL50ZP0i8XG1U64EhT6gH
l/trXrnJW2+5teb1XEPH0XKMjkcuzTpKu9TwOXrwyUHSgc3Ll4GfpYOhK7AX
sCbLAc/N93Ost/zqlprH9xnuKz8r/2kGmPzjeOej2owks0j1f2m6Pbaa/R5U
XSh/l15QHxU5aveTOod+PY98zzYv1ZrgV+fHOtHLDLk2M0nMgGZNrkSdiLpf
8WmxWc/ARPVEtN7RUds3tF6A9LKOsZ/rMv2XddV+wzMmhk4T2GvPGMfkOXD+
7BPErej9fAc5qLH0Rwv9gY1gQ+T/aCmtlYPk4000bJDcrTotNYhND6SWa9D3
ZdYqaw97R/cjVqDfdr/0N2IL7IKYA9sjr2U9FoeSA+92vqS4gFyW9VnPMOsn
zYN13PrJV+N/PjZzYtYve3daOXvwdt5c/37qpVwDMRa+tPWDls33tYbMS8vm
+RST5Juwn3xX9rjty/Qf69TkeXbVndNt0wdbB+fVW4wN1j/dNW191vhjc7MD
TR8o5qSHvTiZeLq1kQ8mPtIvXeNI+Hz3If9BrI4PKR5mfaIJGq81ZVh0Zjdc
f0PtzSsm51ryYx33oGtkBxX6Gzk3WmM1yGOZazHZqLuh+/GsujfozTyvw/p9
JovJ0Jl5hvnQfBJ7PGsBrUm/clX0qTSI1nJ7C36/OLc1uhc8H9ZTOQCaY3sI
uWrrKS33glrDEEaHe8ZcyzYrp813FC+48867un4ffpx7WYzGz7fnls/CLvZi
A2kjaCRoudv7iEnxuXrxezxzfK+NNnr9n+kR1Hh5rue2D3NOxGbbrPLWS9Z3
EecajRaEdm286yJDCIONGBA/1z7TrDS90elNxtrfUOyE1kxsgs6XvXrr1m+t
NX18pqmkFYjOLHQiRyBupm8VP8beXF2ctXqQEU+hCdJ/St5DrE+cL4wO/py4
Gn9WzosNtDfiS/azR7rcn95VtLxiY2w5O25/yo43/7D5ffxfcWMzJcz9MVNR
7ak9Jv+y7W/Fu/iIvsdtt95WY6b60IjZ6uPbTazUOmDfKi6lLlVsXY88OrvO
+ggzicRFxScOOeSQmscTNzVrVK+vFm+eSutGo+2hzVHRk8V58v2tHd/97ner
PRkpDtXqmZ0X/Y7lOk877bR6XeVavZfn2fwl1z1xnzCZDIvOTP6Ezbbf58PR
iavJCmNDvlJuy9oixk5TNF7x04nAPsmsRf09+f72T/YBoTv6pTODPKD+qtY+
eVbxbH1d+eGuU6d9YYf4JXohWXPF2eV7aH7e9a531dx0m0HO99CLR5zPWkub
v//++9e4uXyA3ORTT849BkhroUaVFsn7ytHqHyKm19n3zvru/4r787P4cv4v
n8y8A7FM/tFE9TzwXeWV1bY37Z1eLPLX3eb9JxrXlO8oz6Wmga9NW9Av5H7F
YflWXnq7yHm89rWvrfcEzYh4ykg1w+4feXT3tvtODYF8C1/dfsu96j3kZMZr
NthIeG70tJFbl9u33tkT8Bn7jefOHtM5c3/LSfpVHL3likby7507a4f4uf8n
1yRmRUuibsV9aX9tv+Pn4+eGQYT91iuBP+k5oynRf09N2CDDRzNLSM8GOShr
nzhuv5D7+uQnP1nzYJ5na7J9qx5Y9NbWHPvbkexD0yexDTTdjkt8gi/BrtIB
ew/6pYnsc9h6VbLx/BFxQHGWXvPr3eC7i7X7ru4pvihNl3iA42g5yqalks9U
Jyh/6FzR9fGBxAtafrHNTrvzjjurz0H/QHfO5tKgidPMK0fgZ2j8af/FMnx/
xyfu1OIZDWuQNU+Mx5xrfhdNnv9vdie7PhE6Asfk3NBQyhvT+DsnYiqj6bnZ
DcOiM7v44p/Ua6/mkxaUr3z9dddP9mENHZ5B9tQ9JbapX7I9xTBD56o+QrzW
c8t/VCscemMidWY+i02lJaYPlDeQr+KPyA/0C3tc+zJ6Zvsk+zKfY19tH2TP
Ozef39pFN65Wwdpw4okn1pppeyV7O7Uw9Jrx+UOvyEHpmdt6uPJrxTnos3q5
l8RC7OXp1NqcS7+Xj+s1x8dmivXwl9rzr37Kfd+LzkyM3ffrnAfqRb/Pjswt
hqSWWgyz5QDFfOxTxOQmquYthDB1aL1w2EMxcFpzvoA4YD9y+e39+UzivjQW
bDkfQfx6Ks0+i84szAkdjd5P4l10I2Iz4uOD3OuCnyN/Ii6mvkV8rnNmUOgN
dkEMida21QaIK7B//dRVsLVimrRiraZMLa/+1Op32VoxQXtY9f5ixuwwzZc8
ufgs3ZifFw/kZ/JRaS3kaO317PP0GGbPrBm91CjQkVhb9Ij3LNhv8s3tP8UY
7SfF1fQf5md7ZvR+05tEjwI1tcPaU74XxDjFya2XzpPn0PmmcbGfca5cx/Zy
DVwfeQrxXLly8VG5S7k359i9FsIgMCw6Mz6w547OQ+xB7oPWJIwN11kfBPZJ
PFO+aZCue69YM/URFV+nIbJ2DXvOYCLpp84M/CBrpdi8Ogk5MbE1n8GHaesm
n4j2Sz8yvUbEG/Wc5Ru5fnwfe1X7N36SYxIztNbS7/NfxMm7vdb8HNoy/ow9
Iu0YLRm/Zvoj0//b/5lZ13e5Wzo5cUbxeH4AXRObOVnPCe1U00V4bulD+SmD
uI9xXfVQl+viP+lF4jr3C7lwugH3l+tCtyC/r2dLy4vTP6knkj/m17rf/Ope
v/3Xt9c4tjVPr2g5ZdfaXDUzNnqZjdHP7+T+VgvF75dD9ufZ89L6TJttesAB
B9Rzxs/3PNDY2X+Kg3f6uP6/fZQ1mQbPukHnwt7KV7G5roG9TQiDjryqGIB+
HNYY+hJ5pEHOldLH8YHZf/locS3PYj/fn07BWuv59qzTQdEr+EyxMzpSeljP
+f/Y1ZnVZrLDdLHOK5vArrItzTZMhl1lP8855xtVR8uu2kfwfa1R48FDD/2x
5t35DGwqe67XC5+b/XS+nAfxAPposQI6PtdVvt85F2txfcWp/LycPpvMN5Hr
V2MorqCvVbeaPT6N/Z51xX5K7ar+lZ6DZt/5N/RnYo/iF3wkfhsNRKdObqKw
Fvuerceo+QPOw3gcx7DozPgtjpEfqP6Knt/+J/SGOOa1115X/R/3lzqIfszQ
nUzYXrpU9y6bwg7dcsstk31YQ8dE6sysh/a71kyfQxtDb8zO9VvT++STT9VZ
KPbOzYew57c+04mxgXP6/Pbb7AutND20Pag9nZ+jcbUvHS/tb5i6tD5bap34
Gu0545/xTdyPvcAvkidrejX5M76O3gq95qzEmMWi7G3bcfG12dde9gaeNXEk
Plx7H/oOMe3OvhMNfo34krgEH619F+sTPacYyiDGe0IIg409J22CWCx7aw23
/+x1Vua88D6tV7z5Z3wZMUU6BXvLqUJ0ZmFOxFHEK+wT3PvWbFobOYgnZg2e
Zqb131cDKk5Fr0Tfnv3i6GjaL/5s037Jj+jL308b22hzLdUxiIuJs8qH0rjJ
icqp2p/JhdlPym3JJ9lr2sPSMOmd1eYv6G3gXtDfw/u5j72sEWKMvfjQ3tu5
YPfVz8qxiYc6NsehllYMc8MNN6paNDWkjplNdf+N5BtPRegBxYXZjdYzhV5Q
HblrZq2m/fRvrpM4vNismKhf/VlvCLEr+lD1xO6LEAaBYdCZWQfls8RNaT3E
DPRS72eN54II+62XA12WGj162snIIfULx82Xo1Nyn1gzaX3VF4Tu6LfODLRb
YtP2nGJk/CB5an6HHh9yp/qK8IP4NYd88pCa05b/Fdv22fTZ1lN9uGm9xf7E
+6zBfCA5cZr4bvNDeoPxY6zL1nB+FS2b96PtZw8di8/hs9Gjyf/Ks/Kb+AVP
PzU5/o/8Mx3ESiutVPMD9u982PHKl48Wz6NzrB7XcbputH184n5gfWrPu+vm
2tAuygeLD8ut8b/ca+r25PH1/+B3u7477bhTzZ27r/Tt4fvSqolHW2+81xNP
TKzWxDnr7DlvrePvyzWNtZ/93JDfst8Qn3cOnTP5a7ob1068xDPBxxUrd+4c
n+eOn+sc+jtaB/F379Pv+Z4hjBd8Htobe179ksRd/V4vzkGcL8NGWBPZLfFN
WgI9pvQV7AeeW/lk6zGdGb9Q/pg9NF9abyk2qdlVfRf/zK7+t/1gTzvtqtw5
vbljbHOmJ9qu0lLRH4uj8A35HPRE85qxPRacx1/d/KtqU2mt+RhiB+ylfL54
Ab+FHXWu/B9+jvi8PL84geOTM6WNk+vkj1nHmrbay/XoZY4kjRqdhNpGx2KN
4ee4bmJjjsPxWAP4RP6PY3D++BiTob8U3+Kr8XX49nwfca/x0FUNg87MNdDL
zr0sX23/5vka9Hm/gwhf/qgjj6p2ir0Tcx/mXjHuDc+Ke8N6xk7TjLZ5u6F7
Jkpn1nqAqnWy12x5WTowucx+56d8Xpujwm7YA6tZpwkX67c22u+KBXr5fcs5
NJ/f2qXnqRiSdZ2PMF57lDB1cd/zK+SbrGWd8yn5jb3GC9Rb8EdbDzC9WGki
xbV6gY+qDwlfUb64HZd+8uIDvfhA/GbPjRhIe59WB/vkE/+73qL1WffMseHt
Z/g98k398vVDCAsW1mn9yO35xA/UIegt3m/4TWeccUbdP7HF+iSxd/ZWU4Xo
zMKc2DvKQ4nJ0RmpERRLo91yvwxaftU+QM0aXb9jpQOSS6OXC73DvrIJYmd8
PDG/fua95oZ6VXadTkt8VqxTjrTNhPKid7TfE8vtjHGIbcnR8rfZLXEQccaW
+9EfjS5ttHE/cTp5Nb6r47C/dFze3+eIvYiH2mfz0xfEWAW7MGPGM7kI50Es
Vo7cdaTRsN+WK7eG+r04rXPmmoobW1dd1zL1ZXlhyBgGnZl8CxtIC2sdFAuT
i09MffSIY4gxipnQzNLCDvqsqPnhPqEvab6d2kH+0yDlhwad8dCZQS7HOqi3
lP5b1k55TX5Q84HYIHF2MTn/v/njNGFslHytdbZpg8QlvQf9Gr9O/rRXP+jO
O++qcUn+Fb+H/+NYOv0fMfYjjzxydp51snFuxBlbf0e6COeUFn6i8/fzol1z
cQzPo3tJzXu/fEhxDDPvrAeuGfvVdCFy7np0qaOgZZSXd7+478Sg+WnOmXvO
PDh9Y8xNkuMfacbmRMDv15dOP2MxGXUw7nNzZieiv4b13ppqH6I3imfNeXOf
eTZob/i4/t459Gf7Brkw15Xmr1utQwiDgmedLbFX0xeo9a2k37E/ngxbMC88
Y7Sc8sLsqviQtbFf/Q7lz63B9NVspn1vy6lbi609bCXNqfW32VVrObvqxa76
d7ZBzzDrgHjWZPRA95muIxtP4y7uLe5HpzMR/Vf4DPS3fGznSO6QPRVDaL4P
Da9zys/pzNW7L61jjt3PmGFKU+18izPQitHF9Lrms/XiRjSErhUb/4ydf0/1
gfg+jtNxuX6OodeZU/3EfoVmnR6CLk7drXuPxsF36afPM+g6M36xY9RP0Bwt
mhTXSj1Nahh7Qyzd8+P80cSK703kLN9+4zlwb/ge7d6wh/GsD6JmetCZKJ2Z
a+Y92V5aFHs69d7iXuOJtZFdNxtFnYi9rpi2tcC6xN7y+b2sN/ZM4t9qeGgZ
+SETMT85TF0euP+Buo+nb+zM1fPB3WNq83uhzZpsPcBaf/JetVnspXWfj92O
yXvKudV8TpewIfpF6Buot1p7L/lHe/2R9hf2+3K9vkfnOdHzgZ8oPh9CCL0i
TicmanaafmbW+vGYDcTuset0uvTD9lFyTf3suz7ZRGcW5gbfnQ7EvSGWb38p
vj9otRh8iRNOOKEeoz0jTb6Y1YIwr7DfsHnyhHIkeiuo9RKra725JuLz+ZPi
mnJZcjm0EnJj8m7zqqltfYXVrOqXK6djTypG0q95yv9zbFfWY6Nvtvb4zOwj
/zfiAvqa6LtCy2DtFIv1fM6YPmPgNKshjMQw6MzMEbPfp6mw5xf/5ysPyvEN
G60fhjyFfhTqZ/Wm7/cciImG7VU/I5foPqEnFwfNfdI946Uza/A15Mn52+Jo
fBn6KHkQa+q8/Bn3rZg438d6q9aU/9aP/In3prERi7See5nBaY13XIOGY6I/
UiOr3lXdhPoZz/BI9bGTAd2D2adqcD2P4qquXb+eR9deTFn8VtxE7HfO93a/
0UawDfoT8Z/db47D8fm3QdD/t3yWnD4tgbgMO0an4ZpOlj5Dbt15s1dRj+KZ
+K8b/qvuPeq5C2GK4D43D6rNkdJPxP1OLztIiBd4HvUbbPpde/V+2VWaLP42
/a59gXVxzv4+7JXPY0P1Wmx21bxHtnZQ+p07Bv6BtZI+3fmi4dWfyxo6kXaV
j8Fu8kldPz4GH4iuZX76IMdpH+R+pK3ir7PNY+275Px4D/s972m9polrvdcH
KSYqRsZfpMUQDzWPgs7ZutlPH3/QdWbuBTVC5tnKe/MV1JwOcy/qycBew31O
D/vqtV5dY8Pu+fHqbzgR+E433XRTrb1ps9nYcN9p0PTSw8BE6Mx8hjXB/s2+
W45SbY497kT7Ho6FxsXxWAf4/PIm/sz+zXx0cNaDMDXg14gxmVfRmavXh5F9
9vz1At9OTXLTmakdkUcVc+oFa4G6R1pd78Pn4AvoHd/L3lf9o329PUV7Ly99
gMUrR1qzxdv4YnQZnedEDyJ+2rDPdQ4hTA726GKM6tOWW265qivvdTZxt9hH
mWFir0Zjy7+hL5gqzE1n5s90ZtFOLLiI9ajfUCsuli+epnZ1vPta9Qp7YL/I
P6EJVT/u2AchfjdMiKOJleovpccJe9dmrMtbTlRsxnUTt7M/FSu2b+ND+7v5
xQD8rFgk/5IezHv4Xv2cpzznsfGPpz8yfSBnyk424pquR5vT5P5y7hLPCcPE
MOjM5LH056cNVn+hjl1uJuvg6HDuxDfMAOYL6+MhXzgo13u06GXPj1MP7KVG
3b2d+6R7xltnBuuj+Dlfts3j4ofNry9F09tbZ6231l3v049ccdMj2Rd6Xy/H
Z40fxOfCMbkm+sPJh6p/pznT12ZQ+h3TDuq3Iq8vpqEPC91ev/xtNRr6MZop
Ro/l+o00y9Tn8cse/uPD1X92v7mHrH2Dkpd1n9G56A1ET22/J++kJqXf/Vq6
pT0T9Xm77/66L3BvsRH2HoNy7kLoB2y/WqFdd/3/6vrH3+QLj1cMdrTQEbD7
cmn0xVtsvkX1kfv1PDoHcnV6J+jBxQaM9N7+jg113ppdpdEZJL0L/0BNit4s
1iEzlFrv3om2q03Tpca5+S/sKd39/HyYNlfN/2eHxWbmdl165Zl+7TPqe/LH
HFu7joMUy2i1kCd/8eRaG+NaymHYv/TTPx10nZnrTteppyjdJB2//qOTMc90
WPG8ifeLK6h/UHeubmXQ7vlemfX4rNpDQt8pmga9fPiRuTdGx3jrzNr7sy90
40suuWS1afZx4jSTUTNU16g/PbNGWWus7f7M7gzzsxEGE/ovPcLowdozxnbp
/9HLLFb3Jj9GDz5azU5tFj3/nD3IvG/VTs7l/fUHZTvb/E15WLMS5I57gUZT
7rFpzLyf2kA99PnaI9llz7654Hq6dfZSe8tb3lL/LX3DQwijQU0an1ffdvov
/Yu+/73vj8tniWnqpyumqQd1m2kxVZiXzkwfo+jMFmzkVWnMrdu0ZnwRPeT9
/aD40vwZvYo9n2YkyNmk93VviKG5pnKlZiWIy9rH2dfxOwflWocQwkQzDDoz
/Uf17aelkPuy9++lb3n4H6yH537n3BqH5vOYx6Nn5VToTSOWpK7f3kkvM7Gd
BXHO81iYCJ1Z6B/ilGaYrL766rVehgbX9ZMznmzMWzMrnl5Dfb6amX7OHZUX
NNfRbAkx2WGk9RKmEzn88MNrXlDe2Iw0s+sSpwhh4qD3VG9Ll0SrTmvCR5Lb
GZTeTno88NFpUdl9v++1V8O80KNbjfOb3vSmcuyxx/btfScadpXWWU8K+UG+
jNivnmCD2KM0dIf8rznm5rryU+Wj9f7pV4+PQdeZ0ULRodC7yFeLYftz6A4+
l/rZ4447rtZZbbrJpuWss86aEnsc+3iz5jwTepmJeZuzFkbHeOrMmk5bH1Da
mEUXXbTaNPs59+Kg+BshjCdqz9SJ0Vm2Z8yzsPPO7+opP0d7pTeavrWd2ix/
FgfsfJ48e/6Or+vXkbReV/3iqhqzaDozcQx9gMRXeuFrX/ta9Tvb+/hu6u70
2J1bPldMnvZOHLN9Fz9Ps1Hr6aIZDiGMAnUI+pjxD9kivxfjH4/e3uaDqPcX
q5ia/cz+FJ1ZmCv8DOs17Rb/xjMntiZ3Ye7dIKzjeo7oUfC85z2v5o/02s/e
ozf4nvS7evDyE13rU089tc6GCCGEBZlh0JnxS/XC4bttu+229c/qK0NvtH5Q
at/lJ+n16FSmCuYQuT/aLHR1M8M+C3Siic5suPA80xjoz6teRvxSLxq9kCe7
p4zcrxlXavTtY+zH+6l/UydkrsR73vOeOud9GBFHt5bJedJCqJkWl9GvJLYr
hIml9ZwSe9FLgM+p3ldOaG75qImGbaCvFc+gBaMr0HukX7QZRrR2ZvcMI9Y+
vozaUb6u/hZ8wu9+97sDocEOo8ea6X7Xg4om25rZ+g667mN9RgddZ0YLe9RR
R1XfR08Ccx9p+kN3tPm1cvZ0A1886Yt9rX+YTGgQjz766LLRRhvVvMHee+9d
499hdIynzkz+Sb8m81rt3TzLauPkZkNYUJCL+/znP19riNszplZUbXEvMQzr
M83mG97whtnvozaZhnPOHrt6T/Cb9UUVNxxpbvktt9xSa7+aPoxWgk/MN+gG
tsNnfuITn6h7+zbHU2xNH3bP+dy0HeyCmbXsePsu+o34/EGJy4cQhg/xA/12
9Fdk22jN7CHUr/Vba6ZvuB5J7DCbvtlmm9U53FMFMQYxks7+mV40dWZTRGe2
YNN8AD1Nac1e8YpX1DkEtGbqyAchFkUP5bkU55ATnqw+ysOKayzXxc9Umywu
Iwenf8v06ek7G0JYsBkGnZlaYzoFc1L+8R//scYl5AJD71gT9XgwM9r8pamk
ZaArEwNu867c11OhT9tEEp3ZcOF5plNyzd7//vdXnZme6GKbN99886TWpYjf
qiXme++1115VD9eP42kz3o844oiaZ1Zz3G3sd5DwPewzTzzxxLLlllvW8/TW
t7616uf0ZhmU9TeEBQlxIbaKtoTWxBpIz3XOOefU/M9kQytFT28WhdiGeEY/
5ug0u6qPgrz3/vvvP3AzQ7uhrYk0ZrRl9g3sKztLn5S9w3DTZoiK0+6zzz71
+q622ur1fr3xxhvrrNSxMAw6M/1f5G+WXXbZemzp29w9bR44n1kP7DvuuKPe
T1MB6wBthFi354INHIQ1a1gZL52Z96UzMcNZr2da6F122aXej1MpJhPC/KD5
Eiug+WrPGN/2Ix/5SE86M/PR6TT1dW/vQ9/l7+Z8H76DWLKaVDUkI/kMZmbw
Gdu8Szli/vYVV1zR1fGIpfHN9cykhW+6N/oDn0/rPDf4IGqA9aMcD51ZmxnK
jsmBPzNXecxvG0IYcMwHopnVW6nZFrbXnkLc45FHxrZ/avCxxSrET2jZfKYY
Ne3ZVIEd1ZuKhq7pkb2cW36ieENm5gX7MjNkxSvo6fW74n+Ir/E9JrN+lTaf
7l3tqnvZPT0I9bTDAB/PPo5O19x3/Wft6S699NLknkMIoYysM9M7zBwyeTXr
TueLbld8diLrf8XePv7xj1cNuNqBrINj4/HHHq9+z2T3O+o36rbpyMVivvKV
r9T7ZKp9x7Hy6IxHa1zJXnPOZ9tLz6nDDjus9tKOzmw4eOrJZ3q3mM9gryAe
Kj4pN8K2T5bWTCxVjFe/MXOd5qwpHi3irOZj7LfvfjV28YUvfKF+z2FD/o/e
lxbCHkXfJHFtufIQwuQhRqCuT+/XTTbZpNoZfUeskWztZMYO5bnoiN/3vvdV
P71fdlUts3WeD6Xe2cxMebJhQ/5MzbRemuyq/ha0c+orwtTA/o/e6rvnf7f2
cl155ZXLxhtvXDU28s1j0Q3NqTPTZ0jOm55rJJ/Z7C3/f6L0Ib6bfoti1v/w
D/9Q89HRTvZG0ypOtfkg1i17X3Fvfre+xrk35g09yeWX/7TmW+Z8tvVJtv+l
L+mXzozvoAZI37m11lqr5iZ23XXXuhfoZ1/SEIYB660crJhF6/klhkE33q1f
65kyD04fXv3T27OqPsSees730cPDXDP6TlqIkWA3xZvNpnZcai+st2zq/LC+
iEn4bLNw2wzPddddt/Y1md/+gR1nC2jSmn6B3k0PzrHGNX222IPvza8xpzez
OENYMND7mN/ROetx4YUXrrbJHkcfx370NVMr6/1obNm+VVddtXzqU58qN9xw
Qx++xWDAZv7oRz+qa0Onbs/LfrQfdU9hamDdFl878MADax8HMTZrLz9hPGbW
dot4mWdSHMFeKHSHvJt9nOspzigGpR/c1VdfPdmHFkIIA8NIOjP7dDZTXZh9
eOfLntleVwxuorD2WQfFIlK3HeaGfY0ck/skNdwj47zIUb/lLW/5X8+2l/pP
2jKxtejMhgs9uuU76ZbEadXJm71QbeYkhBDV67bnsZ/3j327OiB5tFe+8pW1
D/wwzVEWm9CXWpz33e9+d+1JIsauj1n2eSEMBm0+H72VtVGvSLN8Jjt2qL8K
u6qOjt62X9gL0AbbC+ityMcftrkPrhkNvXwgbSCN4L/927/Vnhlh6kFrRj+o
toQv4CW3wd8Ybd50Tp2Z/K66C7HhkXxm+QQa1InSh7vH9eC67rrrakxzmHyf
ML7QH1gT3BvWh2Gz35OBNY+OzIy6kZ5v+VFrfz90Zq4P3+H444+vdSU0rGwH
rWoICyI0Tva9O+20U+3Z1WLQnotu9VRqJz/5yU/WfmGd+f7tt9++1t81X6DN
sdK/w/O355571vjESPh/tKdi4Z5TNsBcjW7mEPs+5nDwIRzTQgstVGepqZe2
Zs/PN/HZzos6vTZz00vcTrx+LPuPa665pmpcX//619f+6UceeWR5Ytbk5blD
CBMHe0e/qmdks5O0rPo2t348ekmMVXsqvkk/r5cZu242n9mc4hdTCeez9Zfv
1JnxG9nW1A0HWNMffXRmvV+sv+uss07VwVvjxRknS2vmORdDsJ9JD67uEXfS
y4HGTG8e83X8XfbcIYTwP4ykM7NPt69WhzDny17bTAY1sxOFtW/an6bVdXCq
1R+H/qH+UK+R3CdzRw7iwx/+cNUgjfR8e9kTthrK6MyGB7FC2i559o98ZJ/q
/5pbaS5Ev3re9ELn82h/1S/kgU877bQaK7EWXXXV1ZNaD9QrYsRi1XvvvXd9
DvUlco08m9nnhTAYtPlqv/zlL2s/RrMX5Wbkv+TxJ6tPzJ/b1f7Ne6PZ0SdJ
T0z1zvLvs4Yo/8Tn069eHwz6ABpe2l196eIPTk2s++J6dOfmZ6+xxho1F6yP
iJ7No+k7OKfOTH5XrmRue2Latm222abmbyeC2otrxqM1Nuy7D5PvE8aX1qet
3RuZvT5/7Jfsk9TmzG1P7Pnvh86Mj3/22WfXz6OB3nfffevnp74kLKiIS/Bp
zW0Ts2jrrX60akfntSdusymPOuqoqsEyB1NvnvasmkVLK9b0EmyjWBZNmxyv
/v3zms1BE7bHHnuUFVdcsfb/UXutdm9u/mT7LnoT0q42v4HmwGf+8Ac/rH52
t3gfNRPqPsXk1Hl/+ctfrj5tL/AR2Bi92PRoZn/o1/QzowfJ3IcQFgzMxmRr
7fE7dVFtr0Nrttdee1V9Lo0UG9uL3ozPSUtG92s+oDodv9qf/f73v59y+xW2
WL/09ddf/89mZ5qlScusJ651J/0iA/gO6kT1XjdHlvZ8MnVmYXSo4zruuONq
vFQtslqH9A4PIYQ/xwxF+279O9dac635vvQlVyP2ne98Z7IPPYTQI3pbedbV
MXbzvIupi0Nlnsdw0Orl9fjSz1dsU3+PqTRD1r1otpu+bb6fuMkwIc5srpu+
gmLI4jm33377ZB9WCGEExA70AdUX64Mf/GDNH9GZTbUcvry5HBTNjNewzZm0
xplhIb7dZqffeuvwzVMOvSF+T1NmHoyYLX3hCSec8Iy2/snefR4aHc+39+nG
R950001rLjp16yEMH5dffnnVjtN9dfO8q9O64Yb/qvnXXuHn03LzI9gquuip
1t8jhNFAK672Su8vegfPo+dD7Vxnjt5vxTL432pA5Po23HDD2oOXdkJfnpbr
Vz8tFuLnvfjxtFs0ZuZyiIfNqwbBZzsu/cYdl9dnP/vZ+nNz6gYcEz/EHCqf
u8wyy9T/T4fOP7jpppt6thl8croy70Wzpq+q+jr9huSl56VdeOqpp6vO3v6F
jbnoootq/zaaNz3a2CC6s9Fo8UMIwwlbwKapx2lziud80db/zd/8TdXv0sR0
Gz9mj7y/vmXiszRmbCB7SE8/1WImEG83a/S9731v7VnZzinNGc0zTZ/6gmfs
9WQfbRgEPCeeBb3NPIupLx8++IDmrIkV8RNDCCH8b/g+6rfPP//8cthhh833
pQ/sF7/4xaHLQYUQnpmt6Fn//Oc/39XzLl9nn6mfYBgexA7t98VYXb+pVEul
/lgOWBzjoIMOGrpee+K+eohaQ8XJ+9mTKITQf9hP/SI9r9ZPdblTyaZCrEQ8
mAbdXCE2apiwl5HHZ1cne7ZpmHjkQWi45WC7mU01N+RUzFnVM7UbH1nemabx
vt/e1+dvFEIYb37961/Xnt1HH31MV8/7V7/61apXGU2PTLoR+zFr1Lz6KIWw
oMH/VHNFM6YXzF/+5V/WXt/0CZ36LPtlz465lPvss0/Vo330ox+ts2j1J9Nz
mL5Brl+PMz1txUNowLwXfRmtllj2/Pq826vz9dVm6vNDO7DFFlvUfqlz9ot0
THqd6VGiV5g5ajTo/AP5ZN+h154l3p+9cKzm+i611FJl2WWXrbo1td583Dl1
Yk2Dx4f5yU8uqTo8Olrnwns4p63/htj/VNvHhBDmDpvG1rKdbElnD672og3T
v5HWbOeddy4nnXRS1cnOTyfGnpgBzr6usMIK1Y6/8Y1vrPsjvSmnSq1zJ+wv
O8yH9L07e986t/qcqX27/fbf/PcalFhveAbPgv0A/2IqPhdTHfs/NYle6WMW
Qggj03TVesToPz6/l94xd9xxR7WtIYThoj3rv7n9N1097/K2o4mPhcml2XV7
+9HU3Q8ydGXmYah91pNcbGOYaD3nrKHy4qknDmHwYVM9r9bPqRhXEHvW78Dr
61//el07honW14pdtebFri5YVC3oE8/MDpcDHi3WZzFENejd+Mh0KnK6mc0a
wvAxY/qMuqegq+7meW/P+mhyQ/Zk1iZrVOpLQvhzxJfpot75znfW3mQrrbRS
7R946qmnlvPOO6/u97/0pS+VT3/601Vrpd6saa7ML+Oz0oSts8465fnPf37V
e+kzY1at91A/0fL++hh2q7HSc+Tggw+uGjbHZe6kGsyzv3p2PSbaU8ekP7kZ
cWZu66mrB/LNN988pvgZe3HjjTeVY445puoYnBPfwWd5f3o735++Q6+29l2P
Pvro2T3t1eTtsMMO5YADDqj/rl4m+rIQFkw8+7Rf2267bXne8543175m/n7p
pZcuW2y+Re3LpW6Z/zOn78Kvaf0qzNxsOmE902hy+U1THT3N1CbR8+o72fR7
L3rRi6q91hvupz/9aa3/fvqp2N4QQgghhBBCCGEQ+MMfHqo1yrQQ5qIlvxtC
CGODhk4OT85MzJRmK4QQQgghhImAnoG+TP+uJZZYovbG2WCDDcqaa65ZXvGK
V9ReO29+85vLZz7zmaot65w7pf+XnL55lS9+8YvrHE1zIl/60peW1Vdfveqz
zHXrVWelX5mZt3QEdBRmy9GxOabll1++6gl8huOkdTPzs59aLrVp3nP33Xcv
r3nNa+ox0NI5H6997Wtr3yD6tle96lX1/DgWmrett966atR+/vOfp29KCKFi
vu+///u/155mz33uc0fUmXW+2GK9zulq9ZqgLWPf1HPpyXTllVdWTa//t8gi
i9T/K067IM0EVIP47W9/u+p6rQ9tBrT5mUsuuWTV+ZpVzJbPb+5xCCGEEEII
IYQQQgghhBBCCCGEELqDduy6666r/XFOP/30OnvykEMOqT3DzMfUi+fiiy+u
PQjpGDr1U/p/qZPQ3+vzn/987V32//7f/6u/pwEwU3s0PdD18NH3UB808z29
n+M55JBD6zxdfdj0FrvkkktqDzN9a/pJ03OYd+m703ucduppVUN2xBFH1GNx
TM6X43PuLrrooqqp03PVjK7oGkIIYDfZEraRVnak+ZmdL9ox2lVaVjM3zQhm
R9kXvRPNE6ZxNWuTFlYdsJ7QC5K21Tml37vgggvKJz7xibLxxhvXfnDOLS2f
86MXpt6YP/7xj2vv7QXp/IQQQgghhBBCCCGEEEIIIYQQQgjjBU2UHDxtlblr
Zo7RiNGWTfvTtNpPZ14/S5dFF0ZL4Wf14Hnkkel9OS69ftt7X3HFFfVX7z+W
ed298vjjj9dzQ9P2i1/8oh6H39M50MRlbnwIYV7QnrIb5gmvu+66ZbHFFivP
ec5z5qk3059rlVVWKTvuuGPV1n7kIx+pPR5XXXXVsuWWW5aPf/zjtR/lb3/7
28n+epOGdcBaRff7gQ98oOrN9NfUZ1KPTbOXafHMFP3+979fe3BGcxZCCCGE
EEIIIYQQQgghhBBCCCGEEEIYZOhTacZoxWih5tfbzMv/MQ/Sry972cvK9ttv
X/tF/vGh9E3sRC/Jr371q2XXXXetc4xp+fQ2c+6WWWaZOv/5U5/6VLnsssuq
drjk1IUQQgghhBBCCCGEEEIIIYQQQgghhBAGkEceeaTOGv7WN79Vdtttt/LX
f/3X8+1r1rRm+pstu+yytb/ZueeeW3t5RWf2P0yfPr3ce8+95ZprrqmzjE84
4YTyoQ99qGy++eZltdVWK8stt1xZffXV63mnSdOLMoQQQgghhBBCCCGEEEII
IYQQQgghhBAGkSeeeKLqzS644IKy3377Ve2T3mbz05p5Lb744uV1r3tdOeCA
A8o555xT5xxPmzZtsr/SwDFz5sw6b/miiy4qp5xySjnooIPKLrvsUt75zneW
j33sY+XOO++s/yeEEEIIIYQQQgghhBBCCCGEEEIIIYQQBhV9yGbNmlWuuuqq
sscee5SVV1659izT20zfsvnpzV7wgheU9ddfv/bsuvHGG+t7pbfZ3Hnqqaeq
ruy3v/1tuffee+ufQwghhBBCCCGEEEIIIYQQQgghhBBCCGFQeeyxx8r9999f
zj777LL77ruXFVdcsSy//PJlpZVWKuuss05Zaqml5qszo0dbYoklyhprrFF2
3XXXcvrpp5ff/e53VW8W/jc0eE89+YzWzCuavBBCCCGEEEIIIYQQQgghhBBC
CCGEEMKgQl922WWXlWOPPbZsv/32Zc011yyrrrpq2WGHHco///M/l6OPPrq8
733vK69+9avLC1/4wrLQQgvNV3O2wgorlL/7u78rJ510Urn++uvLjBkzoqMK
IYQQQgghhBBCCCGEEEIIIYQQQgghhCHj6aeemZN54YUXlr333ru86EUvKoss
skjtYfbBD36wXHLJJeXxxx+v//eaa64pn/70p8tqq61WXvziF9feZfPTmi26
6KLl5S9/edWp3XHHHeXJJ5+c5G8cQgghhBBCCCGEEEIIIYQQQgghhBBCCKFb
9Ba78847y6mnnlr7lr3qVa8qf/EXf1He8Y53lBNPPLFcc/U15fe//3156qmn
6v9/+OGHy80331zOO++8su+++5Z11123LLzwwvOdo/m85z2vrL/++uWQQw6p
MzSfeOKJSf7mIYQQQgghhBBCCCGEEEIIIYQQQgghhBC64cYbb6wzLbfeeuuy
3HLLlWWWWab+/rTTTiu33377bH1ZJ/5u5syZtc+Z3mbmYq688srlBS94QXnW
s541V73ZYostVjbddNPy9a9/vdx1112T8G1DCCGEEEIIIYQQQgghhBBCCCGE
EEIIIXSLPmZmZR5zzDFlvfXWKwsttFB57nOfWzbaaKNy7rnnlnvvvber9/nj
H/9YrrzyyrLXXnvVXmjmbT772c+eq9Zs6aWXLltttVX5/ve/P6KGLYQQQggh
hBBCCCGEEEIIIYQQQgghhBDCYPDAAw+UCy64oM7HXHzxxWsfsje/+c3l2GOP
Lffcc0/tV9YNtGq0Ztdee205/fTTyy677FJWWWWVqlsbSWdGh6Zn2uGHH15u
ueWW8uSTT47zNw0hhBBCCCGEEEIIIYQQQgghhBBCCCGE0CuPPvpo+dnPflZ2
33332oNs0UUXrTMz/+Vf/qVcd911o9J+6U123333lfPPP78ceOCBZZNNNilL
LbVU1ZWNpDfbfvvty9lnn10ef/zxcfiGIYQQQgghhBBCCCGEEEIIIYQQQggh
hBDGgn5lJ510UllyySXLc57znNpf7K1vfWu58MIL+/L+Zm7+x3/8R9l4443r
nMyR5mjSt+27775l+vTpffnMEEIIIYQQQgghhBBCCCGEEEIIIYQQQgj948wz
zyzbbLNN7WNmXubf/u3flhNPPLHOsewHZm7eddddVbe22267lZVWWqnq2Tp1
Zi94wQvqMdx9993paRZCCCGEEEIIIYQQQgghhBBCCCGEEEIIA4J5mDNmzKhz
LVdYYYXaZ2yxxRYrW2+9dbnmmmvKww8/3LfPMkfzscceK+edd17Zc889y7LL
Llt1bZ1asw022KD89Kc/LQ899FDfPjeEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
wuh59NFHa5+xHXbYofYxo/X6q7/6q7L33ntX/dl4QNt2+eWXl80226zO5+zU
ma255prl9NNPL7fffvu4fHYIIYQQQgghhBBCCCGEEEIIIYQQQgghhN548MEH
y/e+972q+Wpar/XWW68cccQRddblePD000+Xe+65p5x11lllk002qT3U2mev
ttpq5eijjy6//OUvx+WzQwghhBBCCCGEEEIIIYQQQgghhBBCCCH0xp133llO
Pvnksv7668/Wem211Vbl1FNOrTMuxwsatrvvvrvsvvvuZckll5zdS22VVVYp
hx56aLn++uvH7bNDCCGEEEIIIYQQQgghhBBCCCGEEEIIIXTPbbfdVo488siy
9tprz9aZ7bjjjuUb3/hGefzxx8f98322WZkLLbRQ/eyVV165HHzwweW6664b
988OIYQQQgghhBBCCCGEEEIIIYQQQgghhDB/brnllnLIIYeUtdZaa7bO7N3v
fnc599xzy6xZs8b980899dSy+eabl4UXXrh+9uqrr14+97nPlZtvvnncPzuE
EEIIIYQQQgghhBBCCCGEEEIIIYQQwvwZqZ/ZdtttV84666wJ6Wemb9pOO+1U
FllkkfrZ9G5nnnlmueOOO8b9s0MIIYQQQgghhBBCCCGEEEIIIYQQQgghzJ+7
7rqrnHLKKWWDDTaYrTPbaKONymc+85kyc+bMcf/8H/zgB2X33Xcviy66aHnW
s55VXve615ULL7ywPPDAA+P+2SGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ5s+D
Dz5YLrjggrLZZpvN1pm96lWvKvvtt1+ZMWPGuH/+N7/5zbLzzjvXfmbPf/7z
y9vf/vbay+yxxx4b988OIYQQQgghhBBCCCGEEEIIIYQQQgghhDB/pk+fXm6+
+eY6u7L1FFt88cXrn3/3u9+VJ554Ylw//wtf+ELZZJNNysILL1xWXHHFss8+
+5RHHnmklKfH9WNDCCGEEEIIIYQQQgghhBBCCCGEEEIIIXTJ008/XZ566qly
wAEHlJe+9KXl2c9+dtWa0X7deOONz2i+xulzn3zyyfKxj32sLL/88uU5z3lO
2XLLLcvJJ59cHpuZXmYhhBBCCCGEEEIIIYQQQgghhBBCCCGEMEjQfH35y18u
b3vb22pfMbMz/+qv/qrsvffe5Yorrqj/3m8eeuihctlll5XtttuuvPCFL6yv
gw8+uPZWoz8LIYQQQgghhBBCCCGEEEIIIYQQQgghhDBYXHfddeXwww8vL3/5
y+v8zMUWW6ysuuqq5dhjjy2//vWva8+zfjFt2rTy05/+tOy3335ltdVWKy95
yUvKZpttVr797W+XmTNnjouuLYQQQgghhBBCCCGEEEIIIYQQQgghhBDC2KAj
o/3aYost6vxMszP1NXv7299eTj/99DJ9+vQxa83ajM6bbrqpHHXUUWWJJZYo
z33uc8vaa69dTjvttKpnCyGEEEIIIYQQQgghhBBCCCGEEEIIIYQwmNCA3X//
/eXcc88t73jHO8qSSy5ZtWYve9nL6jxNczVvu/W2Mc20nP7I9DoX8xOf+ER5
7WtfWzVmG264YTn00EOrxmzGjBl9/EYhhBBCCCGEEEIIIYQQQgghhBBCCCGE
EPrNrFmzykMPPVROPfXUsv3225fll1++PP/5z69as2233bYceeSR5cILLyx3
331315qw9p7XXntt+drXvlYOPvjg8vrXv7684hWvKBtssEE57LDDys9+9rPy
xBNPjPO3CyGEEEIIIYQQQgghhBBCCCGEEEIIIYTQL/70pz9VPRltGT3Ywgsv
XJ797GfXeZrmaJ5zzjm1/9jMmTPL448/XrVkdGLt5c/+/rHHHisPPvhgufLK
K8vHPvaxsu6665ZFF120LLXUUmWzzTar8zgzKzOEEEIIIYQQQgghhBBCCCGE
EEIIIYQQhg9aMfqwK664opxyyillzz33LKuvvnpZeumlq9ZsnXXWKdtss03Z
Y489ykEHHVSOP/74ctZZZ5Xvfe975etf/3o5+eSTa++zAw44oLzvfe8rm266
aVlllVXqa6uttqr/9uMf/7jceeedmZUZQgghhBBCCCGEEEIIIYQQQgghhBBC
CEPOPffcU3ubHXrooWWnnXYq6623XnnlK19ZX6uuump59atfXd74xjeW7bbb
ruy6665lhx12KFtuuWV53eteV9ZYY436f+jL3vCGN5TddtutnHbaaeWmm26q
/c5CCCGEEEIIIYQQQgghhBBCCCGEEEIIIUwtrr322nLSSSdVPdnmm29e/vZv
/7a85CUvKYsttlidh7nIIovUl997vfzlLy8bbrhh7Yd29tlnl9tvv708+eST
k/01QgghhBBCCCGEEEIIIYQQQgghhBBCCCGMEw8//HD5zW9+U66++upy+eWX
lx/96Efl/PPPL2eeeWb5/Oc/X4444ohy9NFHlxNPPLF86UtfKt/5znfKJZdc
UvVp99xzb52R+fTTT0/21wghhBBCCCGEEEIIIYQQQgghhBBCCCGEMIHQjU2b
Nq3ce++95Ve/+lXtWXbfffdVTdqsWbMm+/BCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhDAfHnvssfLQQw+VX//61+X6668v
v/jFL+rrhhtuqH/3wP0PlEcffXSyDzOEEEIYWJ566qny+OOPlxkzZpRp06bV
tTWEEEIIIYQQQgghhBBCCCGEEEKYCsiJz5o1q9x3333liiuuKKeccko55JBD
yn777Vf23Xffcthhh5VTTz21/PCHPyy/+c1v6v/1M08//fRkH3oIIYQwKVgD
n3zyyaopoyXzosWe9qdpdT297dbbyk033VTuv//+umaGEEIIIYQQQgghhBBC
CCGEEEIIw8z06dPLjTfeWI455piy6667lq233rrstNNO5QMf+EDZa6+9yoc+
9KHyvve9r2yzzTblDW94Q3n3u99djjzyyKpH+/3vfz/Zhx9CCCFMOPRlf/jD
H8q5555bDjzwwPLBD36wrpXbb799edvb3lbe8pa3lDe/+c3ljW98Yzn88MPL
L3/5y/QDDSGEEEIIIYQQQgghhBBCCAOLfkO//e1vywUXXFAuuuiicvXVV5fb
b7+9zsTzb/PrQyR/Jh+mB4Pc2KWXXlouv/zy2pfBz4cQhpsnnnii5sjZB7qx
nXfeufz93/99+Yd/+Idy8MEHl+OPP778+7//e+1jdvTRR5f999+/atDWXWfd
suGGG9ZeZ+yL92AvQgiDg+f7wQcfLBdeeGH50Y9+VK666qo6+9bz2o0PoPfS
zJkzywMPPFh+9atf1fXfywxdfx/Cgo4eZnfddVc59thjyyabbFLWWmutsvzy
y5cXvOAF5dnPfnb5P//n/8x+vf/976967ujMQgghhBBCCCGEEEIIIYQQwqAy
bdq08v3vf7+st956VRvyj//4j1Uz8vOf/7zmnuWJ5ci8Zj0+a/bvzfzxbw8/
/HC54447yg9+8IPyr//6r2XHHXcsu+yyS/nsZz9b3zuEMLzQkHjG9STbfffd
y2qrrVaf8bPOOqtqS2lU5uRPf/pT1Zm8973vLS984QvLwgsvXH/2Zz/7WXLn
IQwYjzzySH1e9VPaYostykc/+tFy8sknl//8z/8sDzzwQJkxY8bsdb/z1XwA
6/ydd95Zdaif+9znynve857aq0lfJj8fwoKOZ4V287jjjqt+tr5lq666al0f
n/Oc58zWmNGc8cGtuWPVZNOHZmZ1CCGEEEIIIYQQQgghhBBCGA9oyWhGVlhh
hbLMMsuUlVZaqay99tq158K2225b9SH6Ef3zP/9zOfTQQ2v/ogMOOKDsscce
ta/R29/+9rL55puXDTbYoKyxxhr15/UzuuSSS2puLYQwvNx2223ljDPOqLZg
u+22K//0T/9ULr744nLPPffU53ukHHbrf+bn9D37i7/4i7LKKqvUuZq33npr
7EIIA4SZtuedd15ZffXVy9JLL11WXHHF2m9p4403Ln/3d39X5+Luu+++1Qc4
5JBDqg/ADuy5557lXe96V/0/9Gl6F6655prlVa96VX3W6c5o2EJY0KH3Mnf6
9l/fXvWbl112We0D+o53vKMsscQSVWNGj73ccsuVo446qqs+gnPDz1lj7733
3tpX2POdNTeEEEIIIYQQQgghhBBCCCH0EzMz9S9rua72etaznlUWXXTR8rKX
vazmneWgX/Oa11Qt2corr1z/frHFFpvdi+G5z31unQMk53zmmWeW++67LzPy
QhhS9CtqtsF8TL2OPv7xj5cf//jHtb9RN5ibZ87mUkstVRZZZJGy7rrr1t6J
tK0hhMFAz7FzzjmnvOIVr/hfPoB1nf78la98ZfUBaNBpyehGl1122dqPaaGF
Fpr9f1/60peWrbbaqvZDo3PJ7OwQRoYOc7fddqvaTs+bGZrqNay5Y8HarXfa
V7/61XLQQQfVHoNf+cpXyg9/+MNy9dVXl3vuvqf2FaV9CyGEEEIIIYQQQggh
hBBCCGE0zE1n1u3LnB95ZrnobbbZplx22eW1l1EIYXjxDH/3u9+tPcz++q//
uhx99NHlv/7rv3p6j4ceeqh8+9vfrj1a2ApalWOOOabceOON43TUIYRemZvO
rNsXjRkfgJ6UHtUM7WhJQ5g33/rWt2pdxuKLL16fIz64mbPW3bFgbrX3MN9a
jzTP5stf/vI6q9NMzm984xt11r3+anqPRm8WQgghhBBCCCGEEEIIIYQQemUs
OjP9zmhHdthhh6ofMSvTjB79FEIIw8nMmTPLL37xizoTz1xcc3OvvfbaMm3a
tJ7ex6wu/c/0OWQv9D/ae++9y6WXXjpORx5C6JWx6Mz4AJ5velS9Cy/60UXl
/vvvz5y+EOaDnn9/8zd/U573vOfVZ0kvQDNprb1jgXZMP2Ea749+9KN1/i0/
nQ7UTNv11luv6ttozvQ5M1tTf7MQQgghhBBCCCGEEEIIIYQQuqVTZ2Z+j3lY
q666allhhRVqXupFL3pRfb3kJS+p+WT//upXv7pstNFGZfvtty//9//+3/L1
r3+93HrrrVVf9vTTT0/2VwohjAF55+OPP77Ox9tjjz3qrEu9T3qFXs1ssKYz
Y1/e/e53135HIYTBoFNnZp23xnv95V/+ZfUBXvziF1cfYMkll6x9kczNXmut
tcqGG25Y9WX7779/Oeuss6rdiA8QwrzRP4yu6/DDD69+t35j1kfP25e+9KVy
5513jvkzPIK0Zpdddlk54YQTyl577VU233zzqjPzLNOHeo633Xbb8i//8i+1
x5l+pXqhZd59CCGEEEIIIYQQQgghhBBCmB+dOrM3vOENtd+QHghm7myyySZV
U9Z0Ze985zvLPvvsU4466qiaVzb/jpYkeeUQhh/PsRz4aaedVrbccsuqJfni
F784au2I2Zvf/OY3Z8/NpDPbeeedq24thDAYdOrMXve615UPf/jD1QfQz3DT
TTcta6+9dvUBNthgg/KOd7yj+ghHHHFEOeOMM8p1111XNTOZvRdCd8yaNavc
e++9Zd999/2z2bO0nXp9jkdvsd/97ne13zC92RprrFHnaZp577Of//znl3XW
Wacceuih5frrry+PPPJIfPoQQgghhBBCCCGEEEIIIYQwTzp1ZvLKX/va18rV
V19drrzyyprz0o/IS47K38lD6V1299131zl66X0QwtRAftmzv+eee5bXvva1
5bDDDitXXXXVqDUkv/rVr8pxxx1X9WXy2XohHXjggeVnP/tZn488hDBaOnVm
2267XfmP//iPutb//Oc/rz6A2bd8gJ/85CfliiuuqNqyW265pdx1113l4Ycf
fsYHiCwlhK6wzvKn9fZsOjM9A9/0pjeVG264YVx8alpxM+09u2ZlfuQjHykr
rrhi7Wv2nP+fvfsOk7su+z3+hwqigEd55JEmTQQpCnIo0jtIryK9GMohBxQC
SOgd6YTQqyBIld4UCHAogYCUKCBIE1A0IFYUBP2d53Xjd51sspvZndnZmd37
fV1zEVJ2Z36/b5u93/O5P/KR6tOf/nT08Nxyyy2rq666qnrppZea/hySJEmS
JEmSJEmSJEmSJEmSJEmSoUOtZ8YvGT9+fNSkkiQZXvzm17+pzj777GqDDTao
1lhjjaiFv/322/3+evwU+Slq2PJa9Ok677zzwlFJkqQ9qPXMtttuu5j3/emT
myTJtJHzKTNUH8vimc0333zVt771rZb4Xeb7vffeG/1ul1lmmcgzk23moW8u
1+zSS39Qvf766/leIEmSJEmSJEmSJEmSJEmSJEmSZBqUnnHDrV9MJ3lm7s37
779f10MmRPbySpL6MLeeeeaZ6Je7zjrrVKNGjYp6dCNf76KLLopevOrY+nTp
zcVh+cMf/jDNf2/umsP1zvdG1m7/Lh7//NewW/+TDyn7/3AkPbMk18DW4cx9
8MEHRy/a4pnxvY477rjop9kK7JlvvPFG9L+db975qumnn77rufDNNtlkk+qm
m25qyDNPkiRJkiRJkiRJkiRJkiRJkiQZ6qgvyxjQz00NaDiV2TrFM/v73/9e
vfLKK9V1111XXXHFFdN8qJHp/fXuu+8O9lNPkrZHD9w777yz+vKXvxx5Jnpr
/elPf+rX1zLnzFWu2mc/+9noy6Unl/wUv/+Pf/xjml/jxRdfjOdz9dVX1zXf
H3vsseqPf/hjv1whtfSXX345smT0AUyGD5waPqN7/8QTT1R/+9vfBvsptZz0
zBLub1kD0y0aWFznrbbaqppjjjm63K71118/etZ7H9IKrHvv/v3d6I2rP/bc
c88dmaPl+fj/rbfeunryySfj7J0kSZIkSZIkSZIkSZIkSZIkSZL8B04CJ+LJ
J56sLrvssurggw+p7r///g89iGHimnWKZ8b/uO+++6odd9yx2nTTTaf52G23
3aIHIH8mSZLeee6556ozzjijmmuuuaq99967+vnPf94vR9Oaak255JJLovem
nBSumZ5gt956a93+CsfsgAMOiHy1eub7+eefX/3qV7+qy2Hrjj6e119/fXXS
SSdVt9xyS/Xqq6/26+sknYVMnzfffLO6++67Y+yfdtppMXZ5Z8OJ9MySF154
obrxxhurU045pbrhhhtiLW3Hc2CnY1956qmnqhVXXLH65Cc/2eV17bTTTtXj
jz9evfPOOy19PlzyBx98sFp11VWrmWeeuev5TDfddNWCCy5YXXrppeGGJ0mS
JEmSJEmSJEmSJEmSJEmSJB8Sn+d/993oHXPooYdWX/3qV6OucsEFF1R/+ctf
hk3voE7xzH77299WP/jBD6r/+q//6qqFyV/o6aFmzjV76623Bvuptw2lNxy/
Qr3TfX7v3fdiHviv//f7jfYhTDqP2267rRoxYkQ133zzVaeffnqMg9r7X/pY
du9lWfrTlvEiD+qhhx6q1l577eq///u/q09/+tPRO/Pyyy+PP6t3TPHGll12
2ei52ds8L2vB//2//7f62c9+1i837oEHHqj233//avbZZ6+22GKL6tprr41M
n+HaR3E4YBxyLHjlG220UbXYYotFptDEiROHXQZmembJI488Uh100EExBjbe
eOPqyiuvrCZNmpRrYB2UTMRyporz1Hsfnqe6n6Xkxt11113VQgstNFmfyv32
2y8+SzEYjutrr70W+6f3P+U5ecwyyyxxhubhJkmSJEmSJEmSJEmSJEmSJEmS
JB/CJdMnc6+99qqWX375cCHkXz399NNRGxoudKpnJm+BxyJ/SY+f7o/lllsu
8pCyB9R/UON85plnovcol0h+37e//e1qjz32iP8eeeSR1Zlnnhl5JvKt+ts3
Mek8zjvvvGqdddap1l133fCsan0wGSvPPvts5J7cfvvt4aT4OzLA/L/+tPJw
OLt8Mj3BOFsLL7xwte2220YPW/k4famh64XJd1D7ntr8nnPOOauZZpqpKZ6Z
XmX33ntvZK7ZB77+9a+Hb2wOJEMP+7t9QYbpN77xjXA+3Hvj1FgYbm5NemaJ
+WB933333atVVlklsijLeTjpGfuNM/SdP7mzOvfcc6tDDjkk3lPIBD3iiCPi
zOp9Bmfv/X+8X/3yl7+szjnnnJhr9q2Pfexj0T/zxBNPnMLtbhXWvIsvvjjc
8FrPzP661lprhXOYJEmSJEmSJEmSJEmSJEmSJEky3PnnB/+MXB1ewYEHHlh9
8YtfrFZYYYVwkrgSre5bM9hMzTNTO+Mkvfjii9WERyZU99xzT+QdqUVzlPSW
08NSnx9/R41yoN207p7ZbLPNFg6Let7o0aOneBx//PHxXIfb/eyO2iWPQGaT
+3zYYYdFj6Ztttmm2nrrreMa8oK23HLL+C/vQm9SNdJrrrkm3B1O5nDrJTdc
UNc2RjiGSy65ZPiGPJMCP+yOO+6ojj766Mi7OejAgyL7S/7KPvvsU40cOfJ/
fr1//Ht9JzfZZJPIRFtkkUUiC8WaIaelr/Vz7tpZZ50VWZPd5/Z3v/vdeJ4y
KJvhmUHuIb9Sn84vfOEL1YYbbhjeAC+gHb3bpH8Y66+//np4jO61/X+99daL
tdEYGI7r3NQ8M2s+z/jll1+uHn300TgvFcfU4+abb47f++lPfxpzxLUbbjlw
Qw3rtPu6/fbbxxpuXugny7f9+9//PthPr22wlxX3+pabb4leo/a6co5yrnIN
5YPap5yleFzmiSyzfffdN86v9i29M30mwvozWHBK5Tp6zrWe2cc//vHYx/mG
SX045thD/vznP+ecSZIkSZIkSZIkSZIkSZIkSZIhhp/9cyd4CZ/73OfiM/sc
M46CGvRwo9Yzk2XBR1IjeeKJJ6qLLroorhN3RC1M7ZGDsdRSS4WPxPeQ+6Pn
klr1QNbou3tm//t//++oh8tiSKak9MhU/x83blx4ZfPPP3/0Ifz85z9fbbbZ
ZtWxxx4buVT8GmOAPyTP6bOf/Wzkxbnn/KFf/OIXdeXbyAni5BgH2XOzMyjZ
Tub5AgssUI0ZMyYy7wpcTb0k9b/052uuuWaMnU033bRaffXVI1fMmNL7q/Sy
VEOXkVfrqzWT4k7yYpvlmZXeZ3LdlllmmXhNMn24ZuZQjuehgbH+4x//OO6x
veQrX/lKddVVV0XvuOFKd8+MP2ZfNZ/suVxuc56Pb//34Hj6Pc6MfCa9cp0l
cu3vYP71YX/kSy65JPb+GWecMc4DY8eOjazKvK8f7hP2GP7lySefHNlvfKxP
fepTca142NYTjj5Hj9PvrPrlL3858hNdSzmd9lP7lnO3OedzHIOF1/P888/H
HlrrmX30ox+Ns6DPbCT1Yf3j6HIQf/3rXw/200mSJEmSJEmSJEmSJEmSJEmS
pEmoAegDJItniSWWiHqp2sqdd94Z2R3DsY5W65nJdzn11FPj+shlkOnDFzn8
8MOr0047LXoq+q9sI1lG66+/ftTr+SYyG2ScDdRn+NMz6xvGM//PvdL7iFu2
7LLLRu6GPki8ADklamHGAPfy5z//eeSZyPnz93mY5snOO+9c/eQnP+m1r5Pf
5yT5frw2XzNpfzilssNksSy22GJR7+adFDiInFJ1dGsEV9Hf02vQGDEf9a61
lvp/3q6/JwuHu6KG3ex1dSA8M3ie6sNcADlXXo8emq6BDKykcym5fdYo+5ye
y6uuumpk8MkZknE6XKn1zDbaaKNwTTnkcpns8fxzuYLOBuUMwFHmmHFmeOer
rbZa7BvymqwpSWdinjgX8Gut89Z29/bqq6+uXn311cF+eoOK9w9yfjlkO+yw
Q5yNzBnXiY8v59f7C3uFh6xfeX/2E+dpc2n55ZePvYWbZt9yxnK+fuyxxwbt
dflsgPPfd77znSk8M/v79773vUF7bp3Gr1//dYwDa6c8Vu+Hhlsf5iRJkiRJ
kiRJkiRJkiRJkiQZiqif6QEjW4AvscEGG0S2iayG4UqtZ8bd2nzzzat11lkn
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
P/30qKGV7CuZWpwMHkszSM9s6nBu+IHqWnLk9HRyfThm3BtOhfvTH/RO45Vx
B3xN/QNLH8SCHJyjjjoq5pY6pQyozAnqDGQ6nXfeeTFXZY65d432hDTW5Efq
TWjNVav+9Kc/HTkfXJZmuAmt9Mx8n0svvbRaY401Ym3jWhrvPOUc5+0Nf+OE
E06INUu24wILLFCdcvIpsV4OZp+6dqRkv/V3/pj3F154YbXssstWn/jEJ2JO
mvf6zt5www1NfrZJK3HG+uEPfxiZgM4X9np95195+ZUh3UNYBuxTTz0V7x+4
2GWvWW+99aqrrrqqT2dPTtq222472dfhrl1zzTWDfoZNz6xxvJ/UU56P6ezt
zNDMXuFJkiRJkiRJkiRJkiRJkiRJkrQO9S8ZAvpA8W/UTFZYYYXqpJNOinpq
0lxkxKkpq+fX5mmpPatjNaqXpGc2dbz+O++8s9pkk026epbJ7ZEnxwdrJE9O
HoMMDr6Aa86z+dznPhd9tHgF7777XtTT9EzlcuiXqN42HHJOhgLqotZH8/TY
Y4+Nnpn9dRJrUZtfaaWVIvvGuDEmDznkkKhlN8PvaaVnxjWQ88S3lM0mq0me
D8/gj3/8Y1O/V9I8eNMcW24Mj3KWWWapttxyy8jsSwaGG2+8sdpiiy265n1x
kjim5mzuC52JNVX/TD2xS16deSWjcij3yPaaedj6hRvL9jFnIHuNP+NN14Ox
b29aeeWVqxlnnLFrz9ppp52i3+xgf+YlPbPGcXbiYjqHL7zwwtW4cePyfWaS
JEmSJEmSJEmSJEmSJEmSdCjqX/wb9bDiOuy6667hJg3lDIbB4pZbbql22GGH
rh6L5XH88cdHzb9RfyU9s6lT6r+LLLJI1zX/+Mc/HvlL+pWpIfYXfs1pp57W
dc3NITXmMWPGxBz63e8mRQ7WYostVu2//3fDW0o6B16IOasuqp7eLJ588slq
xRVXjPy7MiZH7TMqehg2IwOslZ5Z4bTTTot+aTwDXp5sGplmzfDykuZj7ZKx
Odtss8X40PPvzDPPjN9PBoa77rqr2m233cLpqz0DHHjggdFfOTPkOptzzjmn
+tKXvhTnC/6gvFrZwEN1DZSF7LMTxZvkXRnbvKu+vGZjXy9p167MCZ8F2G+/
/cJVHux5kZ5Z4ziPyDldc801wyf8+c9/PthPKUmSJEmSJEmSJEmSJEmSJEmS
fqAGNHHixOhhMv/880cWwWc+85nI1Zg0adKQrYsNJpy+3XfffbK8Bg+1Ky5U
I74T0jObEvXJRx55JOpaxne55vL7Ro4cGbWvRjJk9HriH332s5/t+tpcM5mA
ei6OHTu2WmuttSK7yv03t5LOwb1de+21ow/Ydddd15SvaZ4/9NBDXRkwZdxw
ITvZM9P/d8SIEeEcyGz86le/GusRlzNpH6x39ndZS2r+9iN9HJdffvnqwQcf
DOcjGRjsx3vvvfdk+4WHLEA9eQdqbiat4Z577ol76f5yzRZddNHIq7WuDyWs
Ic5WPNV55503snmNY5+hkIksw7Uvx6oXX3yxuuCCC+JrlZw//ZdPPPHEtsj5
S8+sceQG77jjjtVqq60W7zuH2pxIkiRJkiRJkiRJkiRJkiRJkuHCb37zm+hh
Ij9AbUjfP/k6N9xwQzpm/0bN9/XXX4/soQkTJkQuRSN94NSYZVvpLVdbq9pl
l13izxqtMadnNiV69RjT88wzT9QEyzVfZZVVokbaqFNhHl1yySXVrLPOOtk9
HT16dHXzzTdHVqC6mvtuLDXqEiatQV1bfVv+xpJLLhmO1n333deUr23M3Xrr
rZH5NdmYOWB09etf/7opY2QwPLOXXnopXAG5WDwBc2K77barfvzjH+ee0kbo
ZffLX/6y2nfffeMeWRe55rJMX3311UF3OtoJ88gaz8mXRSnr7e233+731/M1
ZJfpU1o797faaqvq7rvvzj5yHQ7v/LLLLotztTXQufqb3/xmnAViDRwiU8u8
cN484IADwqeTPWYcyzLbeeedwznuC+PHjw+Hq2Qrek+iz/j3v//9AXoFfSM9
s8Zw/Xi0q6++euQIu17Ow0mSJEmSJEmSJEmSJEmSJEmSdB5qmvKcSg9HdeZD
Dz20evzxxwf7qbUFau08DX3zDj744PA1ZFOpN/fXmVBj5h/NPPPMk9Wq9Fa6
9tprq3feeaeh55ye2ZTIiRsz5vQp+pRts8021e23397wNZdPdsUVV0zhDagt
u9e+r76Lssz+9re/NelVJQONuihHcc8994zsu5NPPrlpfZ70krzooouqz33u
c5Nl4B199DExRprh+QyGZybf5qc//WnkYlnj1OBlCLp23Kb0l9oDa9bFF18c
WWZlbKyzzjrxe404VEMN49X1sE8cfvjh4YOfeuqp1WOPPdbvM4DzFXe1du57
8JHly+X172yMi2eeeSZcGrmOemhzzY4++uhY24eKb/vXv/413DBnm9pxrFfo
cccdVz355FN9+no33XRTtdlmm3Vlzvqvvsu33XbbAL2CvpGeWWP8+c9/rh54
4IHI95MN6/3O798avu9LkiRJkiRJkiRJkiRJkiRJkqRTUT8dM2ZMeEgyF9TC
ll122XDPsq/fh7z11luROaReuOCCC0Y/ny9/+cvV4YcfEXXm9957r89fMz2z
1qOuf8QRR0Stt/aaf/vb366eeuqpft3HWlxb9667N2C86JWp56JMDs4PDyfp
DNRFH3300cgZUhuVR/PGG2805Wsbd2rxpXfedNNNF57imWec2bQxMhiemX1F
j0xe7uKLLx7unNfmOciDTM+yPZBlxg+xRrlHzgB77bVX+DHZt/E/cL70Qdxo
o40in0om5mKLLRYZTvby/uzXPXlm3Iv0zDofa6BMyiOPPLJaaqmluubXTjvt
FF4WP2soINf3lltuCTesdhzPPffcMY71SOwLvOuvfOUr0b/X1zE/uJ3O2u1A
emaN8dJLL8c5mLNv73EGavT9TpIkSZIkSZIkSZIkSZIkSZIkrYVXwz/gHHBv
9LtR05EdoGcWPyGpokem7JLuflIjTpjP8+tV1t0zk63FaWvUw0jPbEoefPDB
ar/99otskdrsKDXMZrhffCRZHN29Ad9P36fTTjutaTlYSeswNuTUyXniCzzx
xBNNq4vecccd0VvsU5/6VNdYWXXVVWNdaRaD4ZlBBpyeafwD/rLvy9U999xz
06FpA/Rl5E7ZG2SZ6nkny1QPYeN7qOQtNYMXX3yxOv/886u55pqraU4Yd1Vu
bPf8y4033ri6/vrrG+rLnbQHzgQ+s8FRtgY6b6y88srVGWecEWvyUMCZUn9Q
OXxlDHsv4TMZ94y753+uQX39X603si55WrJfS29zvtqll14a2Z+18L18BqTV
/WXTM2sMnvkhhxwSnpn3QO5h9pBPkiRJkiRJkiRJkiRJkiRJks5CbZR7tOGG
G3bVSvQ5O/HEE1teu2lnZE+oKXV3wuRTXXDBBf3KpVB73GOPPaqZZpppsq+5
2267hQ/VqP+RntmU3HfffZFdVpweNV+1X/5XM5wKbiBvaLbZZpsiz8x9lW2S
OWadxyuvvBKZNHIe5dJxcBvmXx/W1c8666xqySWXDMfHWPn85z8fGWAclGYx
WJ6ZsW4f4XZ6feabuTBixIiYC8ng8sILL4TzN8ccc8SY4HZ84xvfCM85mRw9
YGVhdnfCVllllXCGeCd9pbjmJcuwPHj+9957b57BhgDWeOdDPuEMM8wQ/hVv
arvttqteeumlaii0Dzb2rSOrrbZa1xiWXfnVr3419piqztdon/rNb35TjRo1
arLPAfDV7r///sk+eyErjsP30EMPRSZjK/swp2fWGPqf+jyNPMjjjz9+sJ9O
kiRJkiRJkiRJkiRJkiRJkiT9QEbHscceG55DqZXssssu1X333pc9s2p49tln
q5NOOqkrB6v4SVwNn83vT7/F6667rtpyyy27egOVnkr6aKm1NeojpWc2Jfrz
HHPMMdVnPvOZrrogd/Dss89uSp1S/XHcuHHV7LPPPkXu3Y9+9KOoi7ayHpo0
B/Of+7HAAguEZyZXpdH7+Jc//yVcMs6VdYV/wEPgsnEVm5l1M1iemWtkTpx8
8snVF7/4xXAPrHeu4YRHJqRHM8jImjP+Sk4nB3Ds2LEx3pPJ4eSdc8451Zxz
ztm1X5uzO+64Y3jh/XHNb7/99ugbV/ajcgbgnr3++uuZJzsEKGvgmWeeWS20
0ELh21oDl1566fDenQk6HZ9XufLKK6v111+/a3/h8svl7MtaYg7xyTh4tVmw
q6++euxVtWdinpcsRl6s/EXZf61y+NMzawzZdCussEJXH/kkSZIkSZIkSZIk
SZIkSZIkSToLNRmOlCwzXoyaKQ+Ad/bGG29k7lINHA19geSOyHxZdNFFo6am
X9akSZP6lYV13nnnVSuuuGI1/fTTR41K7ZGLoe7CW2vUY0nPbErkUMmfK/kx
xTOTKdUM/4sXIKdOPhBnoNQf5dY99thj6W52INZBPpicRz4ID0zv00bupfXi
5Zdfro477rjwDco4WWSRRap99tnnf/7slaY6JoPlmRWsnWuuuWb0ZvS9+XoX
XXRReM5J6ynuC2/KvsBv5E0vvvjikaOl32kyObySG2+8sZpvvvliHfjSl75U
ff3rX4/9xF7bn75vzg8yoGacccaYF84CpW+peZlO8tDhmmuuifFSslTlVvLb
n3/++cF+ag3Dlbvrrruqb37zm137izOWM3JfXp85JhtQRmD5OuabvtKy32qx
B+tlbx7K//zTn/6UnlmbYz3TF5V37gzwrW99K7LNkiRJkiRJkiRJkiRJkiRJ
kiTpLPSgueWWWyKfQ31Ejob6qfp/MjnqSvwhtUFeyHf3/271+OOP968e/+9+
eXpwzTXXXFHf5yRx/WSjqPM3g/TMpkR+kjHvWrvmHsa+vpnucb/L+v++pzI1
brrppphTvM3aXqgPP/xw1NiSzsI6qYY+9+fnjvHy5S9/Of7/rbfe6vfXNA70
zLOW6JtbxqEsSdlItf3BmsFge2Zys3bdddeuPEi9B71WeTRJ6+FjcEP233//
rn6mPGd+R3efI/mQ99//IFxhvd6WWGKJaq+99qoeevChfu+n9otTTjkleijy
+90De/VWW22V7sUQxFo3cuTILsfd5xWc93784x8P9lNrGPsZ78s5p+wvn/vc
56pNNtkkelrWAwfpxRdfqrbeeuuuzEAPe6QM2u59lmUB8s+WWmqpasyYMQPx
snokPbP+4br97re/qw444IBq1llnjfdA+hEnSZIkSZIkSZIkSZIkSZIkSdJZ
PP3009Xxxx8fPbPUOOU66Z+pv18yOWpgTz75ZPToUfdSC37uuef65YOo7/ta
egPJkXHt+RdrrbVW1Bz5Yc0gPbMpUefiCsjZmG222bp6lR122GEN9Sp1T3mH
J5xwQrXGGmuEs1GbZ6Y3Gk+x2f5QMvDIFjv//POjbs4JlcOhhy5Hq69YR2QV
3nnnndWee+4ZX1NtWs3VmmLtNT+bncsy2J6Z9U5Optfpe8s1+8pXvhL9s5LW
I/vHXiB/qPiwnGd70muvvTbYT68tMXc5MzvttFNkGm6wwQaxl/SnX6Z9wNwz
H+0V7oHzl8xE/bT1zEyGFu63faM4VM5+nEW5tp2OcxXv+pBDDolsPvuk8cxb
rbdvpmzLiy++OPYF16bsU3Iw/T6vq8DRdN3MF2crbn8rSc+sf7zzzjvVQw89
FH6geSDnNPebJEmSJEmSJEmSJEmSJEmSJOk85AHoW6LOWTJmNttss3AgkimR
p6DetdFGG0X97Ic//GH1wgsv9Klflvqy3Ad1KDkMXCQ1uRVWWCGcP7WrZjkm
6ZlNHXWtsWPHViuttFLUBd2D7bbbPjKX+uKBuU8cA76hOudBBx1Ubb755tVy
yy0X99Z8KvVH8+raa6/tchLUSfk9/Jtx48aFV5AOWnvyyCOPRP2ch6OHl9q2
+3n11VeHX1hvz1yZL/q23nrrreGYyUWTZfaFL3wh/FVfTy/NgWCwPTNrpx6B
astlzdM/jpdpTvSn73DSf+wNevatvPLKXeOB33HggQc2zXMeinBp7Ptbbrll
tcwyy0TPzF/84hf/zsKsLwzTOsBXk6Gpb3aZD/aMww8/PNaI7Fk+9NCLnkds
vS/3nIvlnnf6Gmjs22MuueSS2B+5ZjL6rCnyOd95p+ezDe/6lVdeiX7x5pXM
YBmLZV3ymQA9R8u51VyzRtmT9cyUCdgf57sR0jPrH/KfuWVy7hZeeOHI+OuP
p5skSZIkSZIkSZIkSZIkSZIkyeBy4YUXVqutulo1/fTTR41knnnmqfbbb79q
woQJg/OE/vVhvUq9TZ1VLcfDrz38fr213IGgeEWHHnpotfjii1err7561Jxl
w/izXp/bv/sqqiFzvxZddNGoxalLcU3UGjkmfXHWpsVgeGa196/7PRzs+1dQ
1+TcfOc734kcOfVe9dDRo0dXkyZN6rXeW16f18Qx4gtw1tZdd93oObvB+htE
j6fTTz+9WnXVVbsyzYyVs846K8ZKeQ6/feO38T39W33S5KkNN9p5vhc4hPI3
eGHbbLNN+FkcwlGjRkUmJD9wWmPG6+ESyiri9uidppbu6+g1xnEcyHrrYHtm
xvv9998fjkVtP9l999031j3PL2kdrrn1T62/3IvVVlst3LPB9pCnuia83x5r
gu8vk+fEE0+M9cAazzXTL/n9f0zbNfPvOZfXX3d9eGo8I/uPs4D1hLc+0POx
E/booYg1sPRddc/LvNNLU6/aVqzDA81TTz4VjhVXzNlHT1hekXNv93FV9kVn
Ludo7pFs5YUWWihyPsv1WW+99cLBLuuS3uf33Xdf9BxdZJFFos/8X//SWldp
KHtm3dffsvbG/WtwaXAGOfLIIyPz12d1fOamL8/rgw/+Gc/H88q1KkmSJEmS
JEmSJEmSJEmSJEkGDz7M/PPPH7URNRLZAFwY+UyDAW/n5ZdeDh/hhhtuiJ5q
5557bnXllVdGz0FOhDyRwcr6KHUxz+/QQw6tllhiieiddcQRR1QPPPBA1FB6
Knt4bU899VT8XXkPsnzU1PQpPfjgg+Pfq183s27Sas+MK6L25nXq/+m+cRkv
uuiicHXGjx/fVU/91z8H1xXwHO64445wbdRE+T76ocqUUwuO59jtXqgTq4nq
j+m67r///pG1seGGG0YuoJ5YXrd8G3PI1+ae8WrMLR5BGb+ug7//9a9/Peqo
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
uac1wRzmesjG6m9GoLlvD+I7yjS1Z1vn+zIezS9rvLWdV8NVLl4Nr4xToyed
/cR6aL0YSL/MtXAe8b1lB8mO6uu66/ryDzlQ3J4Pe/z2fY5aH62Nhx92eLgs
eoXqydmK3Nx2w32RpanXcrnO5p+zOG9/KK6BJffWOd0ZuJynfN6l173n3z0T
7VuuzcPjHw7/s69zcyAojin/rXZemTO8XWtSu/dy9BqcU/i1K624UqwT1ivX
2nuUAtdv1113DcfMa7Rv7L333vH5ib7gcxz69cqy22+//erqGe59gfdk3mdM
bY2SHSmHs9HPqiRJkiRJkiRJkiRJkiRJkiRJUh9qNXI11JbLz+s5VkccceQ0
e0U1QtRm/vF+1LPVDWSTda9reqjbqDt7+LXH1Dwmf+55c1jUMfuKOhBvxLXQ
z0d/PLkkQ4WB8MzU99T0OSocwanVpmvvX7mH5d52/7tqcq47p6s/vov6vnqX
jBT1a/lqfJZk8Cm1WGNQ7gSnqNH5zknhPPSnrljmu1wUfS2N4fvuu6/Hv+97
yKDz3OX6dHLmVjt4ZrwSjqBsku61YvN/OHong4EetFtuuWX0T3T9OUjrrbde
df311w/49y5rgjnMa5BR0+iaoI8xl5u/1VesCca/HDLnIfNDfk4n888P/hlO
D/daDmMz9uhv7fyt8ET64/K53/w7fbV5ZjKprEXDEWNNNhy/svY6G8MP3P9A
w7l8SWvxWRI9JbvPG+8pnDXa1TWzDjsTnH/++fG+wB5sXv797+9O8Zx5gfww
2aNem/dt1kpn7b5w6623dmXDynyth9+/9fv4PqutttpU13/ZaPotN5q3mCRJ
kiRJkiRJkiRJkiRJkiRJfXAL1Pr9jL78vH7VVVetxp4+tt+ZIPUg34dzopfk
rLPOOkW+hrq357TSSiuF26G/mpwHPpPP0qvndM8O4FBx1uSR9LXnF99KTVle
xworrBB1EH1DhwoD4Znx8Hg6+l52dwTcH/dJzWrNNdcMj0B9iMM3zzzzxP3t
nlvjHqpZyTfoT89WuRjyZ/RcU1eXxdBoH9WkOXAJrrjiisivMi663/uZZ565
mm+++SIrzHz3kFFobOmVqT9e9/n+mc98Jvo2ySTr63yX1SibQ5aZ3CJeTW/u
mH5Scmf0hTW2Ork3Uzt4ZualHD+5drXjQM9dGVDybZKBR9aW9VnfWtdfL0Xj
3D0YaNzjq6++OnwDc5zDVDsW7Cnzzjtv7Mf2/7ImyEH09zkO3dcE/dycX+SS
9jUjkldvT9THzb7lufXHWW8n9OflzXGvrbG119f1dr+5HtZRe/Tqq60evr7r
7lpap2udDr92Bhs5cmRk0fZ1j5ZVqE+0e+hryFkbrk6pdfjXv/5N9Ivv7svw
Pzt5jxmO6JXt7OmsUns/rSfGebt6g/LKxo0bF5nS+uMefvjhkbXIMeu+fOr5
7dxg/S1ur3MYB78vHp1MR2u5df2SSy6p699w9eTDyt+cWs9f7pv3bz47lSRJ
kiRJkiRJkiRJkiRJkiTJwCM7Ri+42Wefvevn9XImLr744gGri3Cb1LHlAunR
qXapZuDX+uGpd6p5+Ny82o3nIvdszJgx0StPXU5fK5kY3JTioKibqqUedthh
Uc+cVh+WQum3qOeKuoev/corrwwpR6mZnhkXhSOiV+YyyywT11+9SV2aJ6bO
LyPn29/+dvW9730vchJkzJxzzjnVCcefUI0ePTp678gcU/9WMyre0QwzzBBe
AeevL3VW9/BHP/pRtcMOO0Sd/IILLghPcjj0omx39DvidOlHyzEs832uueaK
8SM/ietq/p1xxhkx3z30mtOLynznvhhXavDFLzFmzHfjyfxVt68HY0LekXqq
722s+vc9zXcuBV/DuNxss82iv2YregoPFO3gmVmbXcM999xziiwfjlD2vmoN
nB/rpXXX9ecPTCvbrxm493p2mtf28LImcAV4n84gO+20U3XggQdGLzf7Pzeh
rAl6tVnrucsLLLBA9BssawI/jYvADa13PFsT7Gl8CS7pJptsEn3kWjUfms2H
DtOv43rxOeRHlmvD3XV24mSYf/rjGQf26HPPPbc68cQT47rvvvvu8TkA48O4
KM6Z9de+zefvi4vvGvP3R3xrxP+s+8uGE85xadecp4HGvqLvI2+5dg3kKtn/
+pPJlwwefHfObsmGLA+/5362ozdoTvrMj/dMPqNjPb3zzjt7fF+g368zkB66
tRmH1ot6XH9/zhezxli3d9lll+r222+v67laJ6wXMqu/+c1vxppU6xnPMccc
8Z7Sup8kSZIkSZIkSZIkSZIkSZIkycDjc+tywvTLKj+v33jjjaPWP1A5E3qv
HHLIIeGIqFPwlPhPPJQLL7ww6rvqbz2hPid7RL1Bn5TZZpstvkbJ3SjPv15P
ztfTb5F7xX1S11bPGEo00zNTL5P/xMnztdR61K/VnuWbqRu99trrvXp+ak3y
x/TMUfOWp1NqRlwkzhG3px5K3x+1Mq9LfXygPYmkfh5//PFwQ9QmzVFZd8Yh
z4GDKHeuN2/L/DQfb7rppvATuShchzLfuWI/uPQHdfdI9fUmTJgQ/gWn5NRT
Tw0Xriesg7xH9f9tt922+vGPf1y989f2zCaph3bwzMxZXt+ofUZNVpPnHFl/
n3322ZY8j3bB9SiPVqI/muwqc9L155vLkxzontF6J3KQuQJlTbA+8Jr4yPJ/
epuTZU247bbbou+gPaN2TVh77bXD7ah3f/P1rENcVo6bfakdvZB6sZ5yulzP
skfbY+WI8ZpuvvnmcDl7c+mtBTLLTjttTDgo9vjig7tvXL4HH3ywrudT9uiT
Tjop+hRzzayjA43vq3eo++s84uHXHh/mNQ2eh17WQJ+n6J7LdPLJJ8c5OOkc
xo8fHz0yaz+z41Hy//SvbbfPPbz/j/erp59+ulpllVXi4Zzm7N4T3ld5v1ib
X2zNtabU0xvU/OOm+vtybY866qg4H/YFa5tcNZ9JKn60h32Me+wzRknfGawz
SJIkSZIkSZIkSZIkSZIkSdK5cI30SlGjLT+v19uOw/W3v/29qd9LDUItQo7F
UkstFbVlGWa8MDVhNUs5YnyR3rKJ/BxcvUJeB0/usssui6+hf4t6KldBXUed
uJ6sDH1W5H7IV9p3332j7jGUsszQLM/MfZGBJ0+Ad6N2re+WupGsAzUr34ub
01u9wn3hCsqR4qVxxEouDf/Q+LjyyivjPk+r7sFJNHb0X5OPJdes0/udDQXc
Y66CTEI1QWuMGjq3i18mz0hmS73zXX2SH6bXn9wK8533oL4oF0MeEadgWqhD
cllko8nc4zNal3rCmsR/5Vbss88+H2anvVdfdlo70g6eGYyPAw44IPaB4gfZ
D2RW9rX23KnwXfjQ1mH3xFrWyr1Hnb/0RyyOC1eYCz4QlDXB/OcrWO95GXpi
mpP2JD6G69DbHCtrgr3G/NWTl6fOVfNa7E2cg3p7O/p7MtM4IeaFdaZd+9xN
C9eFp8nBt8ZxMfSjtdbpx8ins5bao3s7H/kzmaAvvPBC5M8ed9xx1WKLLRZ7
vvumB7bc0HpyjHydRx55JNZpmaey0wY6r4uHaO3mpMiaKrm4fs0btt4Ndn9e
15jbU7sG2md49q5X0jl4v8F7ddaRH1jbE/xrX/taeJ9vvvnmYD/NybDWyomU
cehMf9ddd031Mz4lh4z/yA8rPStLjrF9xDo7rXXAmuqsrpeo91vOcs5tfcF6
Y16bN7Iva30++YxeU1I/ZU/m7zmDeNSbDZwkSZIkSZIkSZIkSZIkSZIMX9Qj
ZUrIAyt1Zg+ZPeolvbkX/UH9Qu1sm222iV6JMkj0zeKJqb/052fb/o3cE/VD
/T/VPNRB9X9Rf55WxpG6iP5ParJqqOede178m6HWy6lZnpl6vB5bXD5+AFdA
/0H5N9Nyy3pCDdq94vAsvvjiXa6ZHmZcwml5AurV/i5XQUYWb7DZYzfpOzxC
vor+d2W+m/uXXHJJeA79me/WLPOdp6C3Ha/EfNfTUv2ytxxEGJ98SL6DsSY7
y7/pbb5zTniQHCgZTJ2+PrSLZwZOk2yUkmVoTdlrr73CQRxKWI/4OsaoLCke
N4/WOOZcGYce6u6tyHKLLKV33wvPjzNQ6/nxiZ588skB+b7Wep7ybrvtFnsR
H4zfwOPkG7zXD3/zg/c/iBq5rB3+6ayzzhprAld53Lhx1R/e7r3HrWtxxx13
RA4md0rmljWhHj+tHZFT5kzlPGM+2ev1FuZb8Tz6s3bZ2znk+uNxO8oeLb+J
0z0t79Z6z1FxRpODagwMRF6utY07Nn78w+Eeupeyc/fbd7/ov2xtcc7wvK09
PDnZp66ZsTkY2FNcy3IGt1dam43dpHOwXhhH8unMubKu2tu4WTxP77faaW0x
xqx7PuPhMzbO21PznP2e/Uu/Yn0yy37hswO80bPOOquu72ed9j5EbjT3Ndak
fmTDmqv+LZfY9fV89Pf1XuTVV1/t89cbDpS10Xs17++977366qtjr7D/+jyI
bF++tyxF5/ckSZIkSZIkSZIkSZIkSZIk6Qk/R5b9JBeots8L50r9oZnOgVou
/0edUv6V+qf8EZ+fb4az4efnXouahxqzGgb3TG2kt+fEW1GbkIOlZjFUa3vN
8MxcL1kgavmusdyGY489tnr792833GuFh6FGpxbHE1Bz3Xnnnat77rmnV2fM
2OEu8oz0O1OznZZrlAw8xoNcCbV87oY6q5xE2XXNmO/G7S033xJfm6ckk1F9
TNZYb8/JfOfRcFC22267unq38YJGjBgRXpp6XKfTTp7ZMcccE2ND7bo4Fjxn
+UlDCeuvsWPM8X/4XJ/61Kcmq9lzd+xfcpcGGvPAHOLd1O79XFB5o5yiZmP+
cZJk35h/HNHNNtss+uE2Y03gnxo3soN4O16LnNLevL2yJnCgeAo8WB5qp1I8
WtmeznXWR54Vh6/RPZpr4v4dfNDBXZlGW265ZVzz3pwE9/aZZ56N/Vn/Tc7u
b37zm4aey9Tw+oxpjqr12lxyllhxxRXjehjr1jkuuvFn/hkjsnA5ny+9ODh9
DfWulWFWMqL0sOdedvI4HK6YIz6Lwd+1vhXXzHnW/8vb4vDK2hvs/oS+P8dZ
H1tr35lnnNnj3+XW85JKH97yMIes4ddff31d39O5w/utNdZYIz4L1N99xpri
GtpLuG5cM30/zz333Nhrkynxvqh87sP7P58VMiZrs8xLniJvMPuPJkmSJEmS
JEmSJEmSJEmSJL2hJicDpLtnxj+Qu9LM/l1qwOrJfr79hS98oVp//fWjPinn
ohn1Fs9VPfmEE06IvA09WfbYY494HT1R8tX4bv6NbJmh2nOlUc+MfyLrYL/9
9ov7px/XEYcfEZ97b8Y40e/wb+/8LcYIv4w7pA51xhln9JpJ536pLcnFMW7v
v//+zDJrA+RWyAiSd2e8rL322tE3il/QrPmuDnbyyafE95DJKCNJxkVPlHw1
PmlxxnrzUAtqseutt174CGqtnU47eWYnnnhiuB7FsSju0W233tbS5zHQ2OfU
buV3cpr1+LLvFses+CUyGeut2TeC+WM9t0fW7v1qz9PyNfuL/ZY3zAewJqy6
6qoxn5rhQMG4lm3JLVtppZXCMeLMc9l7ouSryTfkpnvtfPhOxOu3vuo7K5/I
Hi2366mnnoq9tVG4HTLInNuMG07o8ssvH5lh1pOe4I/L6Vt44YWjXx6Xv9lZ
OdYt9/7ss88O943T7DMNsnp8P+u+68DxcebjO3veejhbf7iJxx9/fIz7Vq+B
zjjm3fTTTx9zUCavvaYV60DSXEqvWWPM3mZclXVeb1Q+PIfQ+y7nl8FyzeSp
+WwO58t7JfNSxlVPeP/AD+WjdXeSZAk/8cQTdX1fnirX2tl+1113DSevPxQ/
WAYXZ9vc2XijjcPN9F4zmRLv9bwftidyb33ey/vBsu6Uh/Ggv3Jfs66TJEmS
JEmSJEmSJEmSJEmS4YXawfe///2ob9f+nFmmlNprf/ra9YT6ns+eq6GtvPLK
keGgHtDM/nNql76Pz2urPaiByjjr6XuoS/LSVl999fBIJk6cGJ+RH4o06pmp
SanN8gPnmGOOqEup36v1NBM9b/RVVI+TRzJy5Mhq0u8m9ViPUxvjF6mpn3Ti
SdWkSZPapifRcIazpG7P9TAPzTMuQjPnu3ruxKcmRr1SbUxNV6+0nr6HGqd1
h/O25pprRq/WeuY7b4X/ox/W+PHjm/b8B4t28sxcW/5JqXWqyVtj+KZDCd6l
7Dwe05FHHhl5N+YF96C4Zmr21jt9/AYa95mja+7U7v38L+uvvbHZyK7Rl8v+
IQtTlh3XrZlrgr6QxrHxPOecc8b38Xp6+h78P2NQ1hY3TR2+U/uF8bHtyTwr
Dhh/XhajPbqZPot7Jtd0iSWWqL70pS/FWcBY6ul78LzkOPm7vBZnkWaeG5wj
H3/88biPnov1Q2aleWTeTe08YPzzfPw9mW+l1zpvhffY7HNNb+hD7qwzwwwz
xByUxWe/0dMu6UycTX7xi1/EeYNXJsPSex/7nDM4l5rnaG688sorLe/Z6gzA
/zzooINiXnIde8p99He9Fs/ZHlX2Cm64f8uH7M0zrf069gB+sfMXD89a0gjW
duvQJz/5yfj8gPd/g9X/tt2xr7mPegXbeznIzsLeK5d7KttMvl2zP2eWJEmS
JEmSJEmSJEmSJEkyWKgPqhOp+7z/j/fjZ9Wd+Ijn/z+PZtZUG0U9TVaP+kdt
rVlmlXpAM2tt+hLJaNAbTM6EGt9A1fLUb/ys3OtSP1FT7F4D9f8TJkyIbBWf
7d5///2jJjlUadQzk/s0evTorh47d955ZzhdA4HckZIzwgFUw57aWDGX9MnU
A0s/rqGQNTVU4Hfqr6pmPmrUqMgIGqi61dixYyOfjKOk/508u6nNdzVIdTXz
/Tvf+U71u9/VN365QWqYxhcPstNpJ89MFqG1qPRusmaby0M9y8fwlDvl9eqp
VnpW8rAGomdld+RS8Qpkm9Tu/fxefouzQbORkcKB4rXzjnz/gRpvxhV/SD6e
mnpPa4LnYK/Rd1lG10C87lbhuXMY7YcLLrhgdd1114VHNxA4D+hFye9eaqml
Y22d2ucSXGNnMGcGvfLkmjUTZwCfiXCPOZLrrLNOrNdvTnqzrn/vDMgf5s84
m8oa1HezlZ838FkP35crYw7KcnXu4UwnnYux78zDTbfWmwPWPr2S9Xnk2/Jb
Ze7J0TN/vNdtRcZZ6e/J/9cLk3NvT5ga/FXOJleuNn/T3sXNlGlc1fGU5Vn6
OnIjN9xwwzhPNZqZddVVV8V7OP07fT7K52Fa6Yh2Mt7v6tHNaS331OdCfOaq
FWeQJEmSJEmSJEmSJEmSJEmSgcbP2/XjUG/hEnAIfAa60x68p9NOOy3qSfq6
+Xn+YPVLqcXn6PXy6u6Z+Yy7OmIzf17vOqil8UFcB3W8gboG+jrJuFJ7KM5c
9xqoz9Hrk6m2v80220RNtqc6y1CgUc9MHVlOiH+n7w33a6AcAblT5jsfiCug
F073erncGo7AiBEjov+LOrPnmLQHsmXKfJfXYr4PlGN79913Rw4Up0StcWq+
lPHDdeXRcF24NPXmFhnr6rB60g2FNaKdPDN1TjlSHA/Pw5qtbnzttde29Hm0
Ei6BsbfvvvtGJkyp3cuGsdbVkw3TKNZPPq/8p9q9Xz9PGVgD8Rz4P/LF5M9w
j1yDgVoT+AzWAv6Qce61du+nbE/kM8qSktWjl10nu+bObDLM7NHckam95mbB
MfcZBblE1lRndPt2Lb43f8Z90MfzkEMOqR55ZELTnoO1WAbtoYceGhm5svk4
O9br996tz2n2nN33eeedN3xPrpq8nxde6F8/v/7g+8t44peZg7LVrIleS9LZ
WN+csZ955pnIszzl5FPCWTdHZbBan/xan1d9Ka3/3pe14nnJ/TI/H3744R5z
/8Aj897be6XavcJnTuRyykWrB+uTXuXc1J133jm+rn2oEeSZuX7mr7xs/lw7
vLfuBDh5PEN958s9lS3rMxjW0CRJkiRJkiRJkiRJkiRJkk7Gz7z9HPzss8+O
mpk6kp+HqlN22kM/N3kZPB21Nj+XH6j6X1/wc38+iNp+bf1AbyP1t2b2H3Qf
9Y/ZZ599qoceeqhpX3dq+Bm5/ke8Ew6Z2k13P0RmhQyz2WefPeqUA5mv1g40
6plx9bbffvvwuriJA9lbzNd+9NFHwweSy8LTjMyEGnhDXo88CP3n9AsbqHy1
pO+o1aud7r333jHOBhI9/jgPs802W4wZuUnd82hkivBn9QhSG1VfHa59gdrJ
M5NvJL+sZPnIvzOf5ZQMVexF+lfVZonpp+acwKtvxdnA2UoOFGe4du9XZ5ZV
2WjOzNTgdW+xxRZRxx5397imf/1anLE4CNwI50ceuTydWmRZOevMN998cS5x
T1o9/puJddCc5nDo1zeQviI/xFg1hq2pHA+9K2sxhsxj15+TIr+oWflqzmqy
Jb1OjqCcSt+rr46OefD/7vt/4cqV3rX2h/HjH27K86wHPUidY8o53FpoLTB+
k6EB98m+630Gj9fnbrbddtv4jASvUM4Z39UZWxas+dUu2de333Z7vHcr7x3K
w/tZ62q9ewWfTZY151TPRv1uG3nP5Zp6n+freZ8twzKpn9++8dtqr732Cre8
3FN+q/d3PlORJEmSJEmSJEmSJEmSJEnSyai16gPkZ/FyBjz0GunUR3kNXLn7
779/QOq4fYVroU9Xd8/s6KOPDi+pmXWOBx98MOqA/KE336yvp1F/4Y/INJMX
oP7o5+a13on6BC9FvxC9YLgOQ/0z8I16ZurDrpNMhoF28j744J9RZ5ODwgHY
fffdY87UIh+C88bf5BK2IgMoqR81RRk3jzzyyID7f+a7/CJZNPqNjRkzpnr7
7f/kEpnbMhTV8tV1L7rooiE/33ujnTwzuXL6Fqq1l55xcvCu+OHQ7Rmnvs59
3mijjbquv3XZ/9ebDdMo9kNz09pZu/fraWYu/emPf2r697T320OsDfajgcSa
4PvY3+XjyeOpXYfMfzlSXAkOlKy1Tl8T7OWcpdtuu23AnTlnQ76kz03MOeec
4bY5c9XC+bKHcxf0yfO5hmZh/DoT8LGs6z4v0Z8zgM9S8OVkCRr/ei/LhLv1
1lub9lynBf9uk0026coVlu2o96l9KhlamDfOzuamz9uYP7K45Fp6f+i/3B/v
fdvBg7cm8re4XKW3tYcMTn2G7Vf1rjP2PHNLxq3PjjT6vFzH4447LvZOPdqH
eq/tZsPTdfbiOJb7ah3imXdyrmeSJEmSJEmSJEmSJEmSJAnUf9Sx+EA+S73G
GmtEvUrWSac99P/TF8fPcI888sjICmuH3IwXX3yxZXlmv3/r91E7UWMf6PqJ
Wo6sEj2djBs5RiXLRG3Cr/XTXHLJJaPfnmyzoU6jnhnvU11CLXcge57C1zb2
9HQxf9RCbr75lq4/ty6MGzcuemqqX+ux+ac/Nd+LSPqPcWUNMd8Heq0z3/VM
XW+99cIzk1NYnJIP3v8gxsbBBx8c9U3O4j333DOgz6fdaSfPjOvDBS6emTwz
7uhQzjOTFcLvtrbV5ojJ1GpW3tO0GIw8M2vBq6++Fl+7FWsCF1mWljVBhppe
2bC3WBOcxXho+i16zZ2Oc5Uzlr1+IPsUo+zRcmp9dsLaqy9xwXnBGUwOMZ/f
Xt5Mt1D/efPFGUBGEq+uPzmArhOvsuSZcS7kcMqcahV6BLt+mWc2dDEXjTX9
t72n5ZKZF7Kk7H0yAb1fcU5xtnXGHew8M++V7Eeek+fIgzM+uXCeL8erL7lr
emQXL1S2ZSM4w1jrnPX++7//O9YAXnFSH+6b/V8OnPtZ3MFddtklcjHbIW89
SZIkSZIkSZIkSZIkSZKkUdSyJk6cGH1E/GxejwxOSac9zjjjjKjHyfeR6+Vn
uO2QnSFvQtZXyVEoD16W7IlO7iOpxsyjkGWy0047VW+99Vb8PsdMjotaIs/M
Pelrr6VOpFHPbDBQi9p4442jlnzZZZd1zRl9UeXP6HkqU0FPxHbwNpPBQ8ae
2u1qq60WGU2l70/pwVp6VKndGz/DmXbyzNwPa7QMH8+Da8HJ5l4MVfjdI/cY
GT2By/X3mp0TWrUeqzM7W+24446T7f28B47NUMiHtK/vu+++4ZnJu1E/R3Hs
ZHB5vXr8NjNrazhhnupb6TzhjFv2aDlHzhv8LWPMWaN7L+P+YO3ivshD8vkN
n0Hx/sBZtT9nau6hTEWZUiVXUC/QVnqH/DxjVJaj58Dp8ZkaZ56kcymZW84i
HCj3kxfFq+Zp6dFqfvh/uX/WIb1n2+VMbp2UGbjDDjtMtkcYnz6/I5uyHv75
z3+FN8c1lTnL65WL3Ah/+ctfq7vvvjs8ab2R5dW2Kgt0KGBMylEsOY4y1zn+
fL126tmaJEmSJEmSJEmSJEmSJEmStC8+D87f6+6Zyfp6+umnO9ozU1P+3ve+
F9k4cgN4Vuo+as96aMnZUN/x99Quhzqd6JnpXaXmqx7HMS21jzvuuKPabbfd
qtlmmy1ygdRF2sHbTAYPWXvcA/Oas2OeGxPWOH00+Wd8Jrk37dCPajBpJ8/M
/qNP5gwzzBDPw15kXR7KPbDsrWuttVY1yyyzdF3/LbfcMtY7XmQrUPc3F6yv
tXs/70HvRfOm0+EjnXbaaeHwyNx67rnnYk2wF9pP3AN5LrIQh/ua0F+4HtaR
ueeeuzr22GO79mh5Y7xf/pbcOM5KM9wFOXQcMPOFs8J1sfb3F2veiSeeWM0x
xxwx/rnrhx12WLjJrYJPb3zW9g7m8fgMRNKZFMfM51r0i5SjyoeabrrpIjfq
ox/9aHjv9l0uV/kcTDvhOfkckrNT7R7hPYQswe697HvCdeBzel8pe+zoo4+O
XrWNIK/W+ztnOn2PH3pofK7hfaCse8ake2pc8t7tl0mSJEmSJEmSJEmSJEmS
JElSD+qtPgeuV1BtHcFn6+V9dLJ/5fPavCo1ZrkXavt8JHkBG220UfSokS2g
ljIcPrvdiZ7ZQw89VB1wwAHhY6hh67umVxdviEu0zjrrVNddd11T+7smnQlv
Sg9GY2LppZeOec5t+PnPf15tscUWMd/1zrMuDIf53hvt5JmpY+tn+vGPfzye
x2c+85nok3vTTTe19Hm0Clmm6vOLLrpo1HbL9efk8L5adf3f/fu7kasmW6Z2
7+fu8F5K9lcnY2+XVWU8cRHkXloTfvn8LyPzkMsjD1MOznBfE/qLPoD6rM85
55yxV+uPbn258MILwwGxHstxskc3wwV//fVfhwe2/vrrR46adZ4z2V+4ncaC
dUemj/FvH2nEXesrrpXM1pLpKFfIZyP4nkln4qwqN3n06NFx9uBbur98allm
vLNLL7m0euqpp2KdakdHihs2cuTIrp6y5WGuX3TRRXXnQHvfVXLR5pprrvAn
Sw/j/sBbe/7552P+y/3zHP1/ruH1o3e8vd9neEpGnTUn3dYkSZIkSZIkSZIk
SZIkSZKkXjhGfq6sxlZbR+AfcHzasfZRL2+99fvIvVCPXGqppaLOoa4uJ0fd
ZKuttorXrgYyHOhEz4wb6DP3xqd+LvJoOAF77rlnuCmHHnpo1LmT5A9/+EM1
bty4apNNNgmnRM6O+c4j4PRwzS77wWWRhzPcaSfPTH6GHI3iXFmf9Di87bbb
Wvo8WoWMrauuuirq7aVfFf/gqKOOiuybVjmz9na1fp5V7d4/33zzVeeee270
oe10zHW5WrKv9Mc0pvTHvOuuu6olv7pkrBUXX3xxOCFJ/3j+uecjG854ti9z
JfknB44+MHqyffe7341e8c3AmOXl8AY9uOfmU38wz8w3zvpiiy0W/s+ss84a
50V+UDN6fNaLHuCuVXFtZTrqFz6UMx2HKsaVM7XMXT17F1lkkXB4rPPGGJ/Q
XqtvZOnt3Y5wucxlnmht3vX0008fOWw8Jc5uPTib6Y/t8z3OYvfdd19D77u8
l5ERt8QSS8TXvPqqq6u33my/PLh25tprrg0PWJ9y99Vnzfh6ztBJkiRJkiRJ
kiRJkiRJkiRJUg9qaWpZtf27PPTSUkdotXPQTPQf0w+LX6IecfPNN0ft55hj
jom6iewNn4Hv5N6gfaETPTOZIhdccEE8Zxl7xqScIzVm91Stji+TJGqeHATZ
NGq71157bYyPE044IfyBffbeJ3tm/pt28szcHz33Pvaxj8Xz+OxnP1ttu+22
1U9+8pOWPo9WYYwed9xx0T+s1O3l23BNWol9j19lXa3d+/XR4t4888wzLX0+
AwGXwZjeeeedqwUWWCByqowrbqM+ierqXmcnn3MGG67ilVdeGXlNzo28Pg4I
t881tw43y6dxVuEK+rrf/OY3wxfsb59ZGWgTJ06sdtlll+ojH/lIeEB6rOup
7qzUSsaOHdvVU7E4H16f65h0Fs4hPEXjqvTIdE/tb1zMgw8+ODzMdl9zvA6f
NeKFldfg4b2ivtZ92R+cNWQQyo+UL+3zI43g+vrcCSdaRq352snZ261GrqTz
hlw65w/31XnE2tfovUmSJEmSJEmSJEmSJEmSJEmGD2rNMr9mn332qLWVWsL2
229f3X777dHjq1NRR5RnxDtRK9EL7Hvf+17kmMmOOO+888Kza0Yvp06gEz2z
SZMmReYc90TdTibCPvvsU6222mrRM0fmTrvX65LWYK166aWXwimRj6UXmSy8
Mv/POOOMmO/ZW6m9PDPerxrnRz/60Xge9iI9JB944IGWPo9WwXOylpVe1fJE
1N75OK3EvmccqNfX+hCcN/skH67TMZY5HcY5D+rss8+OWrrzjUwev+Yp5ZrQ
f/T840PNP//81dZbb11dfvnl0Y+ci+LxxBNPNO0cKbv0yCOPDM/M5wT4a/3x
Sz54/4PoC2vs89XliMm4PeSQQ6LPcqvPvaecckr0r6t1bY3ZzBbqLKw3zz77
bPQjNEa5i+6n91a8Vvm7sv34r+2+5rz22mtx9vY6aj1k80QGprNW3V/r1dfC
HdfrXr9Q78v6g2tmveZILbfcctGP9Pzzz4/r3u7Xs12Qt8cvl58qX6+MUQ7k
ddddV7355puD/RSTJEmSJEmSJEmSJEmSJEmSDkI/Sd6VnzmXWoIshRtuuKGj
PTO5RVyKnXbaKWojnBO1juWXXz4yzmQdDSc60TNTU7rxxhvDQ5GPcvjhh8f9
U7+Wj6AfT5KAb8BLVMfklOiptsMOO1Rf+9rXwknMbJj/0E6emTnNtSr1Tp7T
EUccUT3++OMD8v3Uo71GOUxcKj28ONXyLu0JDz/8cORcqsXWZt/xsvxbj0bc
ZGuwevsnP/nJrhyR3XbbLbIafT/ujOfl/41Zz8vzs1bLGnHfmpnBefTRR0df
4uKZzzXnXHFPhkI/YtdJ3Vxmmzq6ccVDXXbZZatNN900+xI2Ae6uscpHKb0s
jW8OyH777Ve9/vrrTfte7pezqft31llnhTNR5mK51zJQzV9zhTPmv/6fN+Os
40xhfvn3yyyzTOwVehnqccjrMgdb/dmD448/PjJ2yxzknB100EGR2zSQWAd5
gnI+rXvy4eTFOXM5/+s5LZ+OK+g+1tsncbjCab3sssvCay/OYOkFLcvLPOmU
M6u5c9JJJ0XWaK1nZu4Zr/XOa2eNp3/+dPRotCZwe+29/YGfxz93xvvCF74Q
2XDGbbOpnRfmoB7s5oUsZfux/x8/fnycl7yv8pmmwcJaZc3yPDwf7+fldpf8
bpl0XofX43V5WBP1OC73lGer1zwHMvN+kyRJkiRJkiRJkiRJkiRJkr7g5/T6
Bak1l587q8FeddVVg/rz80ZRg1QXky3AXfBz9SWXXDKculNPPXVI9AXrC53o
mamJyP9Rd1Wn4wnOPPPMkUmnjqLulCQo8908l4klc4NHoB6pN+PPJv5ssJ9i
29BOnplMIb2bSp6WXliy59RGmw1HjDttLeRwyS/iIMpGWXzxxauVVlop9gsO
yqOPPhreijquh+tifHn0uxb7ryp859o+oX7t9/R45kmqZ3tenB3+i/ovV/Ib
3/hG5IxxYf74xz82Lb9FD0lZVKVnn9wdWVEDUb9vNa6RPYLvpHeue8tTdh6Q
o8efSRrDXDBWZEiuuOKK0TtTHtfGG29c/ehHP2qqV2Ne8lxkVHI+Cu6z78NB
ufrqqyO3zlzhvHFirCeeCzfEuY9budBCC1Wf+MQn4kzI6frVr341aJlInk/t
GqifHR+H6zMQWM94eW+88UZ4KM7D5gZ/f6mllqoWXnjhuJ9+vckmm1Tf/e53
w/F74YUXJnP7ksmRDc1jNf5r3SyZeZwormOnYK7IJXSWqn0txgiXrt7cK/OS
X6eX+YYbbhgOI4e7rxhzHOzRo0fHfr300kuHU9XM9wC+h/HtfOD12xs54GVe
LLbYYpGDuc4668R9lq3onnNbB2NeWK/K56m8T+JR+zyO9/Oep/XY56y8DvP8
d7/9XXi23js5T5R7am9cb731smdmkiRJkiRJkiRJkiRJkiRJ0mfkxqgJqi+X
nzuvu+661UUXXdTRHk/JrVEnmGmmmeLn7rPNNlvUmX1uuz+1jk6mEz2z9//x
fmQH8Mzk0agNywHiYciOaGauT9LZlPkuu8gYURO0phnn3Jx2Huetph08s+I6
cIBKlpkHv0G/LrXbZn8vGV2nn356ZCJxyuwFnBX1dE6KOq3xw2e1J5577rnV
c889F76Hf8dv9bjyyiurP/3pT33yUtSh+WG+F7+lvGYepL1WL7C99967Wn/9
9eN7q2PzX2SLyVpSB1Y3VvPmLKjdN6P/mr5jauglz9RaayzIeet0ih/Ik3HN
uQ4cHmuDrBcZL0ljlHllb+akuMZc8O985zvRW68Z+TjFFzQ/ZdNyU3kgBU4o
n4ybyWWRY6k37YgRI2Iuc9TN95VXXjl+zaOyN3z961+vxowZE36Fz1S02hMp
Xots1to1kHt68cUXR2/PZlP6yZ915lnhBMqe47FutNFGMe/1duToybLSW49/
xqtx/UaOHBn9fc2bdM2m5NJLL421tGRVlgdXj9fcKVlm4CXZd7xnqn0t5hjn
sN7zlN729hgus/HG8+zP55fkp+nraBx6f8qN5IaaP82Af+49hT3fmDcv+Fpl
Xlh7uMnmh3OTfdq9XmXlVeIzDe69+dqK81M5z0ycODHODfpAy4vj4PLMRo0a
VR133HHhwTlTbLfddjEGXbOf/vSnsVZaC8s9tR6W9TpJkiRJkiRJkiRJkiRJ
kiRJ+oIaunqcenf5ubOfr8tT0BOpU/GzeD7F/9n9/0Q/IrUfdVCegL4tH7zf
nPpEp9CJnpkaEp+C+yDvQ+aevKMLLrhgUPpbdSJq9GpSHoOV19IKSu1Nvax2
vsurUj9LJ/E/tINn5n5wfWv7N3ksssiikRHSLAfIa33jN2+EV8TbWm211WI9
sf6pe8tI0i+Tq2I9vPzyy8PjUmeWBaJey0HT88uY8uDGyfbpi0PDk1Fj9zVr
X68xym3bcccdw3vhyPBOLrnkkuhZp96vb6bnsfrqq0efTRlncl3kNzXqgv/w
hz+s1lprrWrGGWfs6vHGw5Or1umUNUE+G4+Ha8ab4Ow9++yzuSY0gX9+8M/4
rALPTCae/o96UXIarCXN2KN9HWu4NcrX5q2YfwX9HbfeeusYu+aTuc274KTI
BPR7/myWWWaJ5+cs8elPfzoyfeQrGQeDcZZwvuEecU9r1wROjrw2+YbNwjro
3Mvb55lYSzi98n2diTk011xzTayBcv7sBVw+Z0auijVH9pv1a8KECZGLlEyO
3CjZULU9M2XU8ZBa5SA1C/eYz1n7+SMPfpVswN+/Vd/7BmPI+quvrv9yrfvi
hjmzcrplcOmXyYk0X/S+bcbnoMx9OWneZ3Aredw+k2Td4Kja+7mV9lpnBP/l
mdujOa32E++dueFyE+WS9pZt5vetXc44HPa+uofm8ZtvvhXzmEdm7/YZHPOT
T8abtXdzf+W9ySX397iiXo/n7UzM1y331DrpHOQ6JEmSJEmSJEmSJEmSJEmS
JElf8LNuNWsZH7Wfb/azfD/f71RKVkStS6FO5mfunfy6+ksnemZqTHJ1SqZC
6cfFu0h6pzgWXFH32ENdbqj2vSrzXU28tl+V7Lt6ezwNF9rBM5Npojdmd+/K
PeOtNKNnszFh3OspxS+z9n384x8PV4VXofbvWnSHj8GT4WL4N/osfupTn+p6
jlww61Jf6tyeB6dFHkytg8BJkP+ktu1+uCayVbq/DnP5lFNOiXo9n2fRRReN
vBm14UbmM5+FV1Zen+ciN02mXKdT1gTnm3LNXWf5ZllTbw72aG4Fz8z1NY7k
DXFRmoXzGi9DVo/vI5+y9gzHIeVp8keNX/+VCcYv45Zxf/hUHBX9cbmavEr/
f95558XXalYuUl+w1j7//POTrcMl01HmbrP61rtH1h9zXX6je2TdcebnZcuc
6sm59Pvyz7iw3hdYC10zv5dMjj2F4176n3r4f2eQTjtzycriI7rftWPTnnjh
hRfG+aEe+GHmrX3dZ5f6ir2Qn+1cJ4uSG26+N4PSb5enav3gnnJQ9eWU6WeM
T+18AB78XXfdFY6WvGz/jrulB7be2h98MPXPdFhnXD8eO7erL71xjSHPl3su
Z8065ixgrbPH8de6nx3A55d7xq/2Gp1pilde8vasr52Ut5ckSZIkSZIkSZIk
SZIkSZK0B/qT6RWih1j5ubO6nM9Gd3JvSTUEeTM+A19el3rHDTfc0LT6XSfR
iZ6ZGqeasrpxyfmQ6yPLIOmZUr+WbaB/WOknxiXSo09OylDL8lGDM9/Vzct8
33TTTcN36ORcxoGgHTwzNU3+lxpneQ5qn3LD1Esb9T4+zP14s7rwggujvloc
FG5FyR3pqe+kWq35w+NS21ZHrs2o2WeffXp01HpC3y95KdyW2rq9fCWvWQ2e
XycnaGrPyfhWX9dPU63Ya7Fny1pppMcon0U+W9kX1MvnmWee6uyzz+7312wX
PlwT/hFeWbne1kEZL1lTbw7mqV5sxTPjduktJ/unWdiveBL2MQ6k/b92/7KW
+X766ulfJ+/U39d78uqrrw7XhUfhLMH15Inyz3jrMgT1xJ30u+Zlh9WLuS6X
iOdZxqe8RHnC1uJG18CS6eucJ6ORayv7yPrBF7IeuZb2x548qLvuvCt6z3PM
rIPcFuuidSP5kHL20OO41jGToeh+HnXkUYP9FPuMnpSXXXbZZDnXHksvvXT4
dPazenDe1M/RHuz9R18wP+zTznRyxqzd+o++8cYb/XlJXRRv2xi2Vtl/+XT2
QBmH1g/7P1+spwxg99u+e+aZZ8Zccq+dX6wnPEzvt7rjbMUjt99ySflm9faq
tBZ4ryZ/1GdtzGNnAPnOfEDr34d+25RrhjWAM6f3p3/neX70ox/tct29R3Ce
mZqjliRJkiRJkiRJkiRJkiRJkiS94XPZal3qAKWWIPPFz8tfe+21jvVR/Lyd
R7DrrrtGDcDnvg8cfWDkt3Xqa2qETvTM1HLUhzki6iJLLbVU9LirN0thuKKW
pbeYzAR1YeNfroYakxwEWUXqSkMJ9UDzfa8994ramfk+atSo6I/Xl/6Gw4F2
8MzUitVj9bcrz0GtV66IPLFGsa9xSrjF8nuMf5lGe+21V+wB06qpqkWbQ2rk
M8wwQ1c2jRqtXlrcjL70oeXO8TXkkZXXqw8wV0y/Nfkx0/p67o+8lOLd6mmm
Zq03WX9xLXh3/KDa18jndY06LYenlrImuEZlTdCn9emnn86aepOwtj7yyCPh
TZQ5xn1sZl6ccyi3yZlUf8ypuRnGqbXrj3/4Y6wtPBlrXK1L6r/m7fe///1w
Q4o3pRegs1Cr3UNrFBdO77uyJpjTvLNm5IXxTh5++OHofyjHzzrmMyQrr7xy
rDkcs57mt/OznDfrjbwkc6f01bVv3DPunoaf31ChjCsuX62TZT5w+uwXnYb+
lubEMsssE+8Hy2uyf3lPJQOvt73BNfF5Hg6Uz4fY+3jl9WDsle9/9NFHxxnB
nHBeaDS/E56XvqB6SMo35AJyTn0f/apre/L2hvVGHhkPztxyzjZ/fb7B1+/+
eSbziffKZbNO8l/r7Q9ufPHMd9rpQ8/c+yEOIO+c5zutz065Zvp98nT5acWD
9GvrQ0/OfZIkSZIkSZIkSZIkSZIkSZL0hnqrmty22247WY1E7orPkndqFhCX
TN1QnxVZNPIr1CmGo2OGTvTM1D5uu+22rj5XXEg5ClkP6Z3LL7u8WmeddapP
fOITk83pkp+kziznq5Mdku6U+T5y5Miu+T527Nj4/aH0OptBO3hmr7zySnXQ
QQdFnbc8B2uSzI1Jkxrrc2p94BJxzLiVpaaqR+f9999fd79LTuuIESOirlv8
a/kh9pG+4tpyW8rXKn2c1brr9Wblp6iDq2WXHoW+5jXXXNPn51OQWSojRoZZ
7TqhbzZfp5P3y+IryJ9Tl+f1yXDKNaF58BseeOCB6BnH1+AxmHvN3KM5LXIP
eWZ6EDbqoXIr9awrPQHNJ33yWp2Typmx3ln3yryzHvI+6s2L6gnXn0uu3yWn
pWQX6fMn53RqeUu1lExU+2nJ6PJfPcz16OOvJR9SsqYOOOCAKTwz5xDObifi
fSEnqvSt97B/ycWTvdlbnqc/M4b5oc7vXDvvJ6eFddn+bC76nID92/eTi8Zp
bXTdNi/K89J7uoxrGYLcy776sb6eTDNrSHEx/VquIj+2lt++8dv4vubgGmus
UXfPTN/D3u8soud3ec6bb75FZDTa4+rB+z3nvHI/PV9+sNedJEmSJEmSJEmS
JEmSJEmSJP1BjUSt0GeyfbZZPd7PoJdYYonIg2lGtsxgUPw5/T/VemRGqKcP
1/pyJ3pmnts1V18TGRxqQtwHn/8frvewXtQ1eSOlN07tg4NlDKirGxON9uZq
F9TFSy1OLVQdTx+1HCtT0g6eGdeD2ywrpzyHddddNzyqeuumvX1tfR/5FXJG
+C/yfOR2WT/qHfM33vBhHlrJ/+Bo6t9lXPUF++t9991XLbLIIpP13+S9cXTq
9d54X3o+FnfOa/Ma9d/qL8aC7BXOW8lt8zCPHnvssY7uMc1LUOvnyriHfAXX
L9eE5sHtlbMjW4ezYB1x7mrWNXYPjUNZprI4ZZHVmwHU23PmkJZsQfNaT76+
zutG4dr6HAR3tcw7+5Zev3r+NgLXTz9Q81puG+fJ69x7770j43NaeX7WSNdJ
L8iSB+kcxl+//fbbM1O2Bt6qMVnbn9fD+ct7D2etTkT+ljmxxRZbRD9l7w3t
X1wnZ8zevDFZet5fbL/99rFfydKqx+GSVWiN3mabbSKPV49I/9bvN8NdNfad
DeS02RPKvLBu+bO+7nfWOfmNem/6OiXzz3uVBx98qOvvlewz5we5abLvrJP1
4LXz1qyBPjviXuhja1zpKVxv/27Z0O6HeVz6lHN35RsnSZIkSZIkSZIkSZIk
SZIkSSP4vLm6W3FTFlpoocg98LP3TuTPf/5z9cQTT0SNhMvgs/H6Ow1XOtEz
U4fRu85zVp+54IIL4r4mvSMnSm24OKNTe+y6y67VQw89NGT6x8ldVPdUn5Qn
IcflwQcfHOyn1ZYMtmemXuxeydUrtVkPPTOtSfV6V1P7usazOvVmm23W5YfJ
U+FNyf7oC5wW2SMlF1AOiOvkOfYF9fUf/vCH1ZxzztmVc8N9O/LIIyNPrF7v
jfN9+eWXd32d4jGccsopDWV06bPL4XGdyr1w/W644YZwDToV40g/Uj6fXqN8
M75f0jxkA/EUeM38CS4n96FZ8K30l+Ox+cyAPMJGM3bNFWdDZyDOhgd3xnm3
VVl3vod551xTm3GoP+A999zT73NO6VfonvB2nQOKU2It4/Fa/6f1Gv25a3HT
TTdVu+yyS7X55ptXe+yxRzg63M1OzjlsNq6FcTo1z6w4/Z2IcWLPcc+NHWNJ
jpaxxIeUF6u/69TOkPY1+yd/c7HFFot525PD5d9zqMePfzjWD/Pc99thhx3C
ofYcGnXM/vXPf8X3l/25wQYbdM05e7ssM9+nnnkxNe69995q99137+pn7fqY
e/y4gtfA2eO721tvvfXWuEa9Pud/9wL2+Sj9gvX2LDmmHH2/3xdkGLtv5czl
GtgT+3ouSpIkSZIkSZIkSZIkSZIkSZLu6EuiB5eam59Bc7P0m+pUN0vdR+6C
n/f77Pe5554bfYCGK53omXEE5Caoh6g53XXXXR2dr9Mq9OJzn/ksPXlm8v04
fJ3skdSiZiejhi/Dl1WvVMdPpmSwPTPfnwPIHSkupPq1DBCZdPXmc3RH9hGn
S2aPWm/52nKWrH3yg+pFjfeE40+ILJaSQSZ3SG29r+41p+Xoo4/u8rjssbwc
e1JfeOGFF6pzzjmnmn322bvum+smc+idv77T71q8/nr2enlr5evKktEP7K23
2nd/mBZy8ewZxTXn48l5SpqHucDP4j66zs5czdxTytc3D41R87u/60MtzoKy
ufRSLfNIP0gOWyv6cnsNeg9ycGrXwD333DP8emtZfygZfvrzlQwqX9uaUW/v
wlo4sHxNnkyjOZNDlaHqmRW4ZDws2ZleU8k140j6fa6pa2DeFE/L+w09bnlN
sr6eeeaZyb6mv+fv+3fG62233VbtvPPO8V6Nz+1zAvytZjmfpY+nOa7/dZkX
sr343uZif3nyiSerY445piub1bXxaz2aC+PHj4/x4Syy3377xfuuabma/tx1
tL+XTMLiu+v7q59wX3De8LzKe3znkZNPPjn3xCRJkiRJkiRJkiRJkiRJkqRh
1Af18CnZLX4G7XPXem10IpyCU089tVp22WWjdxAHZTj3+ulEz8w923XXXaPG
om6q5tyMGvNQR48dtb0yl6f2WH755asTTzwxemMNBdQQOUCyKfRYlYEjIyOZ
ksH2zHxvuSLcEW6F2jXfQ82TR9rf2rL7zcPSH9HX9LXVlI11vffqzUlT3zUv
rDl6SZaaNA/LmtTXvn3+zf9v706AparufY9XJqcUsaIV50DQijGiaCTEeSAx
uaLIVWJwQHHAGxMtcYSbKxgHVApNNEBUQBS1UAQBUYwSURxAhSuoWGpwfBov
ecozGtE4EHW99/3z9rE5HKD79D49ne+n6pQjfXZ377XW7l6//f+ztmY1VKgn
wvikvkgpFi1alC666KKmvlfZT7k5M9YG9q2pL5c95i677BJ78vy3esWxU4uH
Olvbb799mjZ1WlG921Q86sMNHDgwau2ccsop0RsuzxqZXKOQLyOfQU6Kx84j
B0bOjJxMljPjh+dBzrW1Ga9SkEuiHhGZaOYpMiTMD8OGDYt5qrXPkbmJe0Z4
btm8xVxIfodr/FKv95iLyZrxunvt1bJGz5nRA5PM/h/+8IfI8ZNZJKvEOkT/
Sa7Rx40bF/ckkUdkDWccUYOLvDJ18Oj9iKiTt+JfsVbPnz8/sszUy2Pt2Xff
fSNrds0110Yv53J7xxZiPb/5ppvTIYccEuMiu+5g/FGzr5xevMwlXHdst912
8b7z+OTcud+Dcczrxz0dPD/qAk6cODHmmHVd53DM1ITjmLPrGV53rkPITxdb
15FjIPtL1p3PBNm8wPUXNdbyfJ0lSZIkSZIkSe0T9zSPGDEi9rr4PpueY+Sz
St0LrxU8H/b22V/m+332P1vbj60R1GPOjP1SMiPs2VAvgGOtRK2RekcehbFM
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
egRnuXmuZ/785z9/8T9/vvLeMrLlXM+ccMIJkdWWJEmSJEmSJKm12OvjO/JD
Djmk6bvzs88+Oz2z+Jma7UFJfxT2dMhQsS/PX6mho/rJmbG/zD4H+9fsj5Dl
4FxUedhvHzNmTDrssMOipgv1HerdG2+8EXkHMkucL9STaF6nQaurdM6Mc4/a
X9TyIt9BbS72OvOsdcJzWrBgQdRAIsfG3ix7qvSHWle+iP/O/Jhlqwr3ismc
UfeEvnoZ8hXkOfhd7CWTX1nbXjLZRzIt7PWyF834W1e+jtqc9M76j5P/I/4c
eRue17777hs9Ot9fnm+/zOaoEzhq1KjIEvF6kPnJMxPTVtgvp9bbPvvsE6/X
rrvumm6ccGO1D6uhsHawLnMtwfjo169frj3VOfeou5nlPclWko+m9mGpWUGy
VYwVavVQpzDLa/LYZL7IflUCx808wVrFeclzoufuq6++muvvYV4ZNGhQ5Hyy
OYz3ite0NVk65jru32BuJGvKe967d+80bdq0XI+7npkzW4k1lLqXP/3pT+OH
ntG1gmPj/SkcF9Rd4xhLzcJl/WPJbjIX0oOePDrZdtbp7PH57Mw4af75hTmJ
65W11VLjnKL+MP2rud+GxyUjx+tbzPUM1yPkQsn8FV7PcD5yPVM473EcZHi5
9iFnxueElnLzkiRJkiRJkiQVi3vAySKwF0f/TPZMqJPAnjl74LWIe9bJKLGX
T80I9j+5J1z1kzO7fvz1UR+FPRv2ZIcPHx77OWo99tGov0TdJXIqZLHyzAVU
C/tw9B0jA7PZZpulo446atU6DWpRJXNmZBvYwyQnQo1CMh6/+MUvou7k8uXL
c/s9n3/2edTcoX4H+S/2VsmoUDuMbNTastGcR9dff33ss7LWsWfMesfrQh7k
kksuiVpeGbIcjCHOO2qisO6s7XV79NFHI/vB3Ese8oADDoic2ppqg7H2Uh+K
8Zr1Gd1qq63S8ccfH3vH5D7aukYnPRA5brIlrKXUNGNtJXtey5jXOJfpmUot
syOOOCJqHio/5A2z/APZ3t/+9re5ZkbpNUfdrB133DHtvffeMV+QUeVagLFX
7H0O9Ktj3FJP8Cc/+Umcx2RPGX+MabKj1A1qa4xn8mT/Ofg/o38dcwv9dsmg
5P37GbfUVyJDk+VT99tvv8jtldL3luwJ1w30QeR179GjR7wXZOOYu8l4ayVz
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
u4ZaFqecckpuObOs9le230xfPd4f6l/WYh9ItQ71T8gR8B5vuumm0d+Qftr0
CKz2envbbbdF9rRjx47psssui2N1TsgPfeCoYcc9BvTMXLhwYa7ZXnrSHnHE
EZEVJL9Yb9nULIt58803Rz02MtBZrU17Ojcu1kzuvznttNNWyZmtv/76kTOk
rmKjo4YZ9aTJ+tJjWZIkSZIkSZIkqTn2bT/66OOoH8Re4Pbbbx/7jmTNyApV
q37IU089FXsdI0eOTIsWLcqlt1kjaZ4z23zzzWNPl6wJ713zH97bybdNrtj7
Sf8rauVcd911adKkSZFNMSPQeux5k/usZFawkhYvXhw1zUaNGpUWLPhve341
Q89Zatmde+65q41tMmX0cevatWtuOTNyFOR8mFNYE9hzpqYPe872ZWocjDN6
blGfiZpT1LXq0aNH1LYis1zNdffZZ5+NtYOcOee/c0K+6M1G/1uyo9SP5f3O
a41mjqAv6+6775769OkT1yq1Umu1WOS6ydnQz5lxwfPgeoYMppn5xkWe9b77
7ktHHXXUKjmzDTfcMO6bGDduXLUPsc2RQV2wYEHU7KuVPsqSJEmSJEmSJKk2
UT+IGmaDBw9O++23X9Q3oa7Q008/XZW9ZnJJr7/+etTEYD9Uq2qeM6Onz2ab
bRb1oL797W+v9kPPJ3pYsXdaCR9//EnUL6H/EHtVjZqPUj4Y46+//tcY79bL
Wh0ZPHpWfve7311tbG+zzTYx7qk5lkfOjIwZ++z9+vWLOj6HH3541PThvVHj
yWolkis87rjj0ve///3InPHP5IWrNXe/9957kXd45ZVXKrZutSdkwbiOYI3m
dc6zfi2ZsnvuuSfmK/qykhOsp56nnPcPPvhg9Gs94IADovcnNXbpI6zGxntP
3p21rzBn1qFDh3TwwQenKVOmVPsQJUmSJEmSJEmSagr7jm+//XYaNmxY+uEP
f5i23XbbuHef/UHriNQW9ocnTpwYdcy+8pWvrPOH95I+lry/kuoL/SvpbUeW
rJjxPnDgwFbnzObNm5cGDRoU2bVjjjkm3XXXXen95e+3wbNSLWGdp4YNNex2
3nnndNBBB6VnnnnG2k0qGXmsq6++OnKw1GCsdm28Us2fPz8NGTIkde7cOcbD
9OnTzT+3A3zOoWbnCSeckDp16rRKzuxb3/pWOuOMM9MjjzxS7cOUJEmSJEmS
JEmqKfRMoqbFc889l6ZOnZouvvjipn5Vqi3Uf5o7d270y6O/z7p+qG9Ezyfq
1kmqLw888EAaOnRo6t+/f1HjnR6X1ChqTY9L6pbR8/aaa65Js2fPjrqErgGN
j7pl1KGihzZrBTkh8szWolSpuDahNm6XLl3SiBEjIqtYT/cq0BuTemzXXjsm
zZo1Ky1dutR+we0AtTx53+n3utFGGzVlzKgXvOOOO0YfVdZDSZIkSZIkSZIk
rY68GX2qFi5cGPvMqj3s29JXlDzItGnT1vlz7733pieffDLX3liSKoPedvRx
mzFjRlHjnX7H9B1kLi/Vyp7Ff426LjyG2g+yQOTKeO+pZfbhhx9W+5BUh6j/
dfTRR6cePXpEv8l6Q46fnC7jwDpmjY85j7WOftFnnnlm2nLLLZsyZl/+8pfT
DjvsEPWAn3/+efOGkiRJkiRJkiRJkiRJUk7Gjh2b9t9//3T88cenmTNnVvtw
pDUiW/vPf/4z+kyfffbZaZNNNklf/epXmzJmG264YTrppJOip7D1gCVJkiRJ
kiRJkiRJkqT8jB8/PvXu3TuNHDkyLV68uNqHI7WIjNkrr7ySJk+enI499tio
W0aPzC996Utpgw02SJ07d04DBw5Mf/rTn6LGs/2jJUmSJEmSJEmSJEmSpPw8
9NBDkTF7/PHH07Jly6p9ONIqqEuW9aK+8sorU9++fdMWW2wRdczWX3/91LFj
x/TjH/84nXPOOfH/vPXWW9U+ZEmSJEmSJEmSJEmSJElSG6N22aeffppWrFiR
lixZkm666abUq1evtPXWW0f9MnpkUstsyy23TEcddVSaNGlS+vvf/24NM0mS
JEmSJEmSJEmSJElqcOTLyIq9+OKL6fbbb0//9Zv/Sj//+c9Tt27dooZZhw4d
0qabbhr1ywYPHhz5ssceeyy98cYb6ZNPPok/L0mSJEmSJEmSJEmSJElqXGTF
XnvttTRhwoR05JFHpi5duqROnTqlbbfdNnXv3j0dcsgh6de//nUaM2ZMmj9/
fnrvvfei7pkkSZIkSZIkSZIkSZIkqX0gN3b33Xenvn37pvXXXz9tsskmkS8b
MGBAuvbaa9MTTzyRPvjgg/TZZ59V+1AlSZIkSZIkSZIkSZIkSVWwYsWKtHTp
0jR79uw0bty4NH369DRnzpy0aNGi9Oqrr6Z33nkn6pfZH1OSJEmSJEmSJEmS
JEmS2i9qlS1fvjwtW7YscmdmyiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiQ1iv8LYVVbYQ==
     "], {{0, 396}, {2458, 0}}, {0, 255},
     
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{609.2692708333332, Automatic},
   ImageSizeRaw->{2458, 396},
   PlotRange->{{0, 2458}, {0, 396}}]], "Input",ExpressionUUID->
  "a962f01a-3e86-4974-aa93-7caf42b780aa"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QnctuWYP3AzmRmzYYYZs2EY66yW/ohoxtjKWCKKipGSGEWFsu9FSosk
ZMkgopBCyYSUtYUyWlBUyJKkpNT173u+c76u7p7nee/luu77fp7n9/t8Lm/e
93nu+1rO6ziP4/j9juO43TY7PeZpv32jG91ol5tc9z+Pecrz/23nnZ+y+2Nv
ft3/edyOu+yw/Y7bbbvxjrtut/12O99nm/Wu+8tPX3c8+3dvdKMbX/dnEwRB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
sAJx7bXXzvoUgjGRZxcEQRAEQRAEQRAEQRAEQRAEKwty/+ecc05z+umnN1dc
cUVzzTXXzPqUgiHh2Z177rnl2V155ZXhcYIgCIIgCIIgCIIgCIIgCIJgmQNP
8+Mf/7g5+eSTm4MOOqg5+OCDm5/85CfN1VdfPetTC4bBtWue4VFHHdXsvffe
zSc+8YnmvPPOW/P8QuMEQRAEQRAEQRAEQRAEQRAEwbLEL3/5y+YLX/hCs9VW
WzX3ute9mic84QnN9773veaqq66ayfmoHVnsGOUzZoprF7+OsT9ykd/197ia
PfbYo7n3ve/d/Pu//3vz3ve+t/n5z3+eGqogCIIgCIIgCIIgCIIgCIIgWGbA
z/z0pz9tDj300Gbrrbdu7n73uzfPfvazS/3GL37xi6nm/nEQl112WXP22Wc3
J510UnPMMcc0hx9+ePOBD3ygOeKII8o5nXrqqc1FF13U/PrXv170c5z3d8//
bvkMPztNOC+cyXe/+93m61//eqlnOvbYY5sPf/jD5Tpck7/75je/2Vx88cVD
9znzM//7v/9bOLaf/exnC9ZF+ZmvfvWrzV577VU4nEc96lGFz9EP7/LLL+/j
coMgCIIgCIIgCIIgCIIgCIIg6Bi4BjU2eAX1Nve4xz2axz/+8YUrueSSS6bC
3fgOfASu47jjjmve9a53Na961aua5zznOc12223XPPWpT2222Wabcmy77bbN
7rvv3uy//wHlHL/yla9cj8vxWb/61a8Kb/O2t72tee1rX1v4jD6Bf9F3DueE
W/nYxz7WvP3tb29e//rXNy9+8YvXXoe6pi222KJcj797xSte0Rx44IGFn3K+
+B7zhhbicnBaX/va15r99tuvec1rXtOcf/75pV5qIeBpvvzlLzf/9V//1dzv
fvdrHvCABzT77rtvc9ppp5V7M/OapCAIgiAIgiAIgiAIgiAIgiAIloQ6FbUh
ajVufetbNw95yENKbYh6nGkAl4CHOP300wvXcd/73re56U1v2qy33nrNjW98
4+ZmN7tZc9e73rW5y13uUs7vJje5Sfm33//932/++q//unn605/eHH300eU6
fJZaIjN7dtttt+Zud7tbs8kmm5R/7+vcHT/84Q8L/4JbwdH80z/9U/N7v/d7
zW//9m83v/Vbv1X+dPzO7/xO88d//Mdr/83hGl3Xlltu2Rx22GHNBRdccIO6
Gt+hfuZFL3pR8y//8i/NBhtsULicpepp8EDf/va3mx122KH5i7/4i+Y2t7lN
OT88U3qpBUEQBEEQBEEQBEEQBEEQBMF8onIdH/zgB5utttyq+fM///NSd/Pu
d7+78BHqNPrGpZdeWupE9trr9c1mm23W/PM//3OZ2aLO5tWvfnXz1re+tZyf
nmmOo446qnn/+9/fvPnNby78zEMe/JDCZTz84Q8vPcLU2Zx11lmlrsXf3/nO
d2522mmnwkd1DfyW2h+ciHqaBz7wgYUvuv3tb1+O+9znPuWa1Nnss88+pR7H
uR955JHN+973vubggw9uXvnKVzY77rhjue94K5/xtKc9rfnQhz7UnHfeeWu/
y3Xtueeepa8dHubRj350qZlaqn+cf8NpffKTnyy98P7yL/+yefCDH9y84Q1v
aH508Y+W/N0gCIIgCIIgCIIgCIIgCIIgCGYD/cq+9KUvlfqVO93pTs3f/d3f
NXvvvXfpy9V3bh93dO655xYu4/nPf37z0Ic+tPRtw8O87GUvaz760Y8WHgZH
0q5F8Xv+/49+9KNy7vvvv3+pW8F9ONTvmPuy/vrrN3/yJ39Sanbe+MY3ljkz
XQDf5bvxNu95z3vKuW+44YalvkVdzR3veMfCweBzXve61xW+5vOf/3zpi2Ye
Tr2vuDE1QmbZfPazny394p71rGc1G220UeFo1PDg0c4444zyM67Jv6nb8Zz0
RfP7w8D5up/6qDk/99p9x/8EQRAEQRAEQRAEQRAEQRAEQTBfwAuoDfn7v//7
5q/+6q+aJz/pyc0JJ5zQ+/dWDkYNjbksOAn90Z75zGc2p5xySpm5MwrUprz0
pS9tbn7zm5fjlre8ZelLdqMb3ai55z3vWebpXHzxxZ2cu3P7zGc+Wzgv3FDt
j6anm1ofHIw6IbzTKD3K3A+1SG95y1tKjYzecBtvvHHhsszvwU25Hgcexlwd
Pz8s9FFTk4Qjc3/wZKWnXMbgBEEQBEEQBEEQBEEQBEEQBMHcwIyV//7v/y6z
VPRNU0OiN9mFF17Y+3d///vfL3Upj33sY5vb3va2hffAU+ijhvdQ4zIK/I75
PY961KOa293udoUPwqmYNfNv//ZvpY7HfJ1JoA/ZN77xjcKb4D7ucIc7lHob
h3u46667NkcccUThn37wgx+U+ho81bBY08vu6sKzfOADH2ge97jHlXlEuDWz
dG5xi1us5W/ct8MP/+CSs28GofbHuf3nf/5n4W/wdS95yUuaM888c+T7HQRB
EARBEARBEARBEARBEARBt8AT6OH18Y9/vNl2222bP/iDPyh1JDvvvHNz0UUX
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
6p3udKfSb/c973nPOmuzgiAIgiAIVhv48/xt8xzomPn7+tDiUPruT8VHVyNN
U0W/pN5n0003LXlLvj5/2Dnxb/03H5nfz7czt4Fv/c1vnrWW/2hfy9Oe9rQy
21yNe18QX8iT6g9EX/ba1762xBhql8Qo97///ct8hrvf/e5r/Xycg1jGNT3y
kY+87jp2ag455JByD+iQFgLO4k1velP5XDPT6ZKmVRM1T7AWafHMvXCfzfLQ
N+uggw4qf78aOa3VCFyAeNo8lT/90z8tfd3lJqbx/MXc3sO//Mu/XMvfvOhF
Lyo8Qpe20mwYuQIzat75zneOxN3gLnAjelGoUarniesyswcfNE0dK/tMX6rX
HZ7FrBq8ttq5ST+XHXzFK16xlqNyz+h8F7OlQRAEQbDSYD+k81DXStNwxzve
sXnoQx9aYiv58T79oxp7qaOgPZGHrxyNPVms4+/EbXpzq6PXC9nf+3exEX5k
9913L/2zaPQu+ekla69FTl/P2qM+elQv5893U2MjXjzuuOPKNejTrO+sc1MX
whcTx4lPnat/cw2uy39vvPHGzUYP2GhtnIo/E4uW6znv/LX9wGgifc/ee+9d
PutWt7pV4br4LPPKVdTn+6Uvfan05FMP3qVeqnJmYmH3UWz35Cc/udw737Ma
65KCIAiCIAgGwSfSz4tOiL+JZ+CL4m76rrPnK8t5ysWqqecP4zVo6cUcOJpt
ttmm2XnnnQuvI1/7uMc9ruTrN9zw/mV+At+ZbolPKW7RX821VP5HnECr3yXE
SPRUzt19evvb39688IUvLL46rkbMxPf853/+58LfOF/XQoemZ5FroDdzv/08
Lbx/V5ujvsY10JUDX973qDui6/qbv/mbEvfMA1dh7bjn3/nOdwp/dfLJJ5dY
C7eiZ5PnqlaKnk4PPtfVRXxSOTN1N+ZdiOtwfvR++svFz1/5EFt7b9Rb4Cd2
22235tJLp5Ovt57ZKXUslRd5+tOfXvIWXfbrZtfkNfDXeoyMAv078CM4pvXW
W2/teZoRww55T6adJ/jKl79S+pvf4ha3uM7u3afUJ3bFseC38OU3uclNSm2P
mTjTqMUKgiAIgnmAmIAuA89x61vfuvjG/AB9v/qGeFGu3Uw9fARtjRhHbzFx
knNoz92p2gszbT75yU+W+M4cOzPyxEe0efrhivHM7ePL0OOJM/pA5VT23Xff
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
p20bN+/mHdYDl48/yKOI/fpC+JvlA+tO7KfPE59bzx//rQa+zFu6olubXOtK
aKm23377okUcrLP3/+mS+HjjzniXx9O/Rs+Ayt/4vi7nOLRRex7z971bXfeB
F0voTcD/rXlVf6qtG9YPXqz+puq2PZOuzltMRXeqrp4d4Ofz2+059nv5jEFt
SNVl6fMp1hMX7LHHHiVn1BeP2BU8e/ss/aH7a72JWa05e7a8eJczYheD71DT
1tb78t/4/l31wJ5nyJep42I/8NHiRlwW/qwP/5J/ZXasejE8Y7s+zoHLEZ/z
5fQ6GHcN+D16bXqMyg/R34kvu4xb5GL1y7R+fQ8OhB+CF6j9V/S7lDeW55Mv
WixHXLXAzltOyRrk4+Az6ZJwUfoJdjk/2Xf6PHkdfJNZ3LgonAoeTx5SHZN8
h/dVHLOu3IY8Cpvuel233mTeczlz7zqNDS0pHke+k15Grec0+rrIyT33uc8t
687e7XzkueZtJkDQPaxb+w6/Ggeqz5V8IB8HR9ylD8LGiNHF7Wqz5eTEKrWO
JL21bgj3Xw2yfJ/ag7on2JtrP+xhQSPgnWa/2JjqA/Lb2FS8dFfgw8qzy/nX
Gg52hT+uxjTPen5BI2R/1jfdOypvZP3xE/rQrlgLNMD2VLow/lbb/7En8SHs
h+LMcfsG23/xh3Jgbb+WdqGvvU6toboWcdGoc6qGAZ+Hv8VHqX3uHGyseGHY
XuH8E3Uxcnpt3szzF8vzT7t6Z32XZ8h3wgvxh3w3P8ScnR2evsP1NIZVz8J+
yB2zU/RV6m6s1cy/GQ7WuBpInGW9r5tttlnZR/p4r+cd3k06M343rrr21w/W
gO2wV/MF2UhzlemZva/yb+Pag/A3S8N9ZdPkrOSx6pxCPjP7N+o8VP49+4oX
b/cnEkPrJyLWDWYLz8h7RZ9Q93H7MM7D/j6Oz2MNeafsPe25Geqw7L19vmvh
b5YPxJd0xGJxa0/uiU5cDqhr1P5S/HAzIuS72n5r5VnkCe0349TZV6zpn3bE
9fqnWfv88T7AF6dLUvvAl+1aE1P5IX2DxWS1Xw9uVn+5YXpj1fk3NLPtvYCt
0fNJbVJXOi3fdfkvLi9xj/iBfeO313ukf5K4ZTDWU2OK51FT5Pnjm+SH5nX+
jecit+X6aIHsq/L15lHs/Jydy3qz5qfVe8R3mZvEt6/3Va99/MU4/VqWG6w1
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
Xz3yyCPX9kewp+BtaFBr77S69uucJzGkOlS10HptODc8p8/hkznfrvLZrsv1
uc7KH9Hir+aa6/A3a8Du4q75ZN41WsOjjjqq/J0cbNd2ZRb8DbvDln3pS18q
1yl/xwf2zrH7/FQ6A/Z2lnEQ31wtYOXLvatyB+wjX45Pxz6053Wxq95jeVi5
Bv1i8MV8Lfr6Qw89tMxt9jOrOcazBthUa+DjH//42jXAXrO31vss10CtoeET
e978Jf11zA4Vtw3mGutMDNfCD7CfWCNsu3yOd3iaM2/aCH8z/yi1etetqUt+
ekknvZusM+tNnR++odZXtP0s65mfx/+ehn7TNXnv2cWaf/eOWJddzLz02Ww2
nkNut/p13j/vIc0aP9k98XP0ca57sXvtHoq/2Cg5fVyuXLx5aOqG+Ip6jPm5
rnLFzoXdE4uYScsnqjN25KftR/YR+Qb5A7HGUjoAnycnoX8Vu8UPVltz//uv
8fPFMPwMe771gKcWi3lGXcHappHT72xwDTqsTzHNUnWJNVbxGWohnedCc5wm
OfDsep3phd0F2Fe9EPmz4jR/6t02rV4rKwXWt37a8hKeDy56cB2phTNPUBwx
y1netc8O37DOLn75y19efNr0UVs5qL2V7S/sJg2v/48bD1Ye6oxr+xgbo85K
XtFeihugeRdD0x2LYfE4Xcbq4nR11HyY9rwLeSR+zLT6ZtXZZjgRcZp8I02L
+7D54zcveUmHe7LLLruUPpdiZHrtS3+2dE5yWFQ9O303zRPfcbE91c/R9PB1
zDGt942P6NzYafsGDocPYu+Xk5ATtd/ss88+JSfOf/Se+z31ANbBLHuV0XvL
Xde1wDfky9t7gpWF2leA7yhul48a5G5wAbhdObSuetUOC++C94cPxjfzrsnn
dAG2w/uJmxKXyOGLV+Xo2VyxgPjB/sv+iov8jjwMLkaund30PuMD2Cvxphp8
vI34Uywn3jFnh4/WZ77pyl9eWThWeV08l2vy7NSTiPPwSJV7wRvTENtPXAeO
gL1jd+nd5BLxuHifRz7yUaWfnl5ieAw/T1fIJ2G/9BT2c+5JF5C/FBd7Nvin
Oh9AnkycI1YedSaN83WtnuOTtn5S6ZVAx2ht4SzF3up98DftAzclv6ruyPV7
nn6v9ltQq2jNdFUHr68Ov897WOcdrkauoo3VzN9Ubp2fwS55/3baaaeSp7E2
3As5J9y7fNE4+uHFMC3+pubCTvnqKcW+4ov5v2wwG+D99J7yA2l/5c29y+Kh
rrRF7DI/jx1ke+TnF/LB/JxnImenNk5ep+ob5GPYf8/FObOJ/DnXRBtt36C5
dQ38WP62/in8RP82y9zCrLF2DZyyZg2IdQbXAP/Y+nP/3FdrgAaqyzWgn4v8
qDXgeSzlh3/t9K+V83Re9ge5W++Kc2Oz7KWeu33Sz1kPOD7+PntGp4WLmmV/
g/A3qwdcT7aLxkhtOf+w9oqtB83K7W93++aZz3xmeQ+mOSMCcCf8Zr4X+2ot
iu8nhXdMTTd7y7dif9lwuVP5Fpoteks1FvxLvA4/WlxE88M35vc6jjn6mBLL
iwfYKLaJr+Z33TdxkpwyLWQf8Ln2ZfeKTXFNtXcyf1+MhEv2jOUZqi2qfj6u
xv/n/9uP5CbkethZ9slhBqg9ie8hZ0HH5hrpuPRE6ApyNlU76LmrK6r+Po7N
GmVT6RoWA9/eOdK61/2460MuhK/lnnSB4449rtR8eV5iW+uRjxeMBnu/tSxf
JT5Y6NnhdazzPvs/jgJrlV9DkyrHgMOZix5HQSdgb/XGtbfi1HHt4WVXLsQI
dBXy+fYgz53vYl6hvJn/rrX28kf25C7n2dMIyj/Wmtx6sCvqEqdVayhvV2de
uG65s4U0GfWoPcqcp9/rgvOoXJq+tfTYYrHFalr9HM07v6Z9nnJ6fGT5Bf1w
adOdK3/E+fJTcCJ8Ar6kfxc/+Z0un+u4kBuVo+RDuR7nzbfj7wUrC9awXIWc
sTqUhd4zujTcxCz653mH5Cfvfre7F10VX1fc1AW823IuuA05Id+FY1H3o5+k
Wny9rGs9Nh5Eng43I1Zzz8Ru6qH9fe1BwU7LM8vnyc9M228smqQLLih6Os+u
3Vfa4b/xzc6R34ubE0uwufxJnEm7v3a1T/rm1T5scl3uk7gLXyXW7bL231oT
n+KhaJVwRHJkYstNH71p+bdR4HnSRKolZIvZXc/MnscW22PV+6i78nzvcue7
FH2Un3c/9JKw9sRb4gS/z36XmUwf6G4mE67P91lDGz1go7LW5TVXM1Yzf+N9
k9OWP7EurV3vAz+RDbIO5W2sYfyzWdRdYVr8Dd8X90vvS8fS7t260GGf4pvJ
k3Wlaas6YHaQzbHmFprvVmto+Jzt83T/6QrYGTZfHo/Nqs/GM1Pfye7aT9gS
eX920/Wvdv0lGydHat4BLn1da4Dttje75zicLmAN0GvxdeUp+cHr4kOr/7Tb
bruX/cO+ac8UE9B+eOb8C76Lmkp7qdjCezoPNVbhb1YP2C7xJV++7iWD75W1
SxuAd5wF7AP8SX6Zc+Gfd6Eb5E/iydlkPh7/sfYakwPGBdtja/9ctqfWtbBH
8nD8ZBooPmGNjR10RXgGvvA0/ZJrfr2G+7CHqOXkj7b9/Oq/s0XOz7n7Of0a
2Sb3QY7F7/A3/Qx9l3vB7tV+wfyAqnWrnFfXkPuQKxFT2StxaTU2keteisP7
+tfPKBycZ9cHd+OwFtT3dKVhVUtaYxExl76pXdSZrRbUGbPylnR09tbBmTfi
BX4iveL5550/Nz1paYNwoHglGh62xTl2Ncc4mA1oHdQ94tT5fXQ6tGiea3rk
rUzI7Yn3dt1116LvpfU2f632i6CVqDW+bD1/AofzmRM+U/yPLqDWBHckJmL3
xJxy9nJHXfRnGgb2bzaMzlI+lD0e7Mk7eKyZ8fDHxQbiO9nySWM5/pD7jr+Q
H6G9WSx/5rvUqtT56s7HPu/5qQfiF9LD0+fLFfMxxP1iJblh91x9su9z/Tj4
eXjP+Shyz9ZA9V34sDT5wcpA9X9oQcRr8tOD2iXvFm0Xv1pcMouaMDk0eRR5
tcqhWJsXXfT9id8VPrQ8jXeRNu3yy68oMW6Nc9lF7y67xHf3s494xCMKz1F7
ickh8b/ERGIjOjZ7Nv9M7SJ7Mm2/sfZFkGfFL+sR5hrlXp2/c2bb6APsKzU2
pQFjf+nH5WzV34gNq30a7JvnPsnv1l6WXWpMrDV1pl/60pdLLsFBwyzGtl5H
rb/xPMVH1nvtfUZb6XPkanHT/o2+rn34O//mZ/S58fOebe3B5mec5y+vmCyf
XWcm2evZW3uJPY0tXs2902A18jfeLe+TNWYdeGfxCjS11qH32hr0b/IWcjdy
cupz8KhdcMZ98zd1fjZ/iE2Vz8BHLZW3r/w4/1B+B7dPJz6p7anzvWrvM7bf
fjAInLVcEn6mnqe8gXyTa3Ee3mOcm2dn7zQf0TXy/eRpPEM2iBba/VU3uVpn
mlqndAGveMUryhqQU8RxDbMG8HjWAH/AvZxUw2p/kIOlE1DrZc9bV20Puy03
bK9np9TI4eDtnZ53feY0mDT73ltr6yc/no9ZkuFvVgfYF+uU7ZFnaPeJrYcY
gP9nHXcxc2Yc4NBxBPYy8b/aZ3Z0IS59FMitWeP8c58vp8aWQ+1BoP6Bb8d/
93PqcOizNtroX2/g7/OXN99886KZwIfxkdnyafpqNYbzvWyoXILcg71JvCR3
3fbznb/z9vxxMfLerhOfbO/jY+Nmal/uCmuHHsw+a+/voyaL7fZM7KHOg5/N
F2aH1RsvVX8j18Ln4Yvj5fo47Nds/KQaRs/MtdoPcGfWuJjMdU+6xlcT3Ct7
Pn+U3Rq0ZXwIuQv3eam1Myt4n/gabAh/o9YIsbur1RdczuD3600vT2R/YHfZ
VXHAvM5uDyYDW26/5C/QQ9hz5fj5MG0/QLxOk8LnYpvoKfgi+k10AblLMXrt
ASZ/hD9kT/qGvBr+CpdRZ32vK3YbPPw8vY57xP8SP49jAz2Pb31rTV9gfg6e
TKy1WK6C7s7PVp6j9jHlC7UpLz6W3CcfQ66TH+Sa9aISH86LLqCCHyUGrbN5
K58nf9p3D6hgOrDfWIvq7On9B7Ur3kO6IPZI769ZQYwlV6umjX3ip4mr8KqT
5uy8v2IeNngx3xlfwWcX24kpcDn6MMjLePcd8nO4brkbfjhed5b9D9tgW9jY
2pMSB+vdrtcg9yVO4muoe1SjQjvgOuQ0xRrzYp/Edfpm8pG66tU2L7APWI91
njmuQi6+j3lJyw2rkb9h2+SE1KTgFGhQ1RrIrdRaDT4FfkBepl0rKS5c17zf
YdAnf3PhhRc1xx57XHmf7TPrqrdYzO+jz2bD2PBxc2d8RbYFPybPJd/Oh1zo
vfNc7APynPU8+Ebuu1mNbTgfcTpfT72FAydQ621Wux9Fh2qN60FU536Pswbo
vewJ/JRJ1oD9kW3BCdkPF1sDS31Gnd9kPcoveeb4PvWZ88jDh79Z+WBmaEzo
VeSKa1zX1kHSbsrp1xzirOCdo2Gmh5LfxueXXMcpk+U68MTsNi0O32EhfUOt
Kee/y4nwg9Ww8+/5Ynx9f/Kd6TH1IHZe9tpZ23K2p2q2aH49RzwVnx43rr+A
8/ffzt+/VT5ZbDCqresb7OhBbzqo7A1s8UqpTbn6qquLPyCerX0Q8G3W0LzE
jPMO75p7ODh3un3wCcS1S82wmjWcF5usB7ncIT4VB1l55WD5QM5eLGZvFUOw
WeKzecmdBN3Dnisnrm5VXa++3vbgQXtDW1Hzl1UXL27tag4EfYt4lL9U41F+
nrxJn3CdcoSujX5xkvpWcZy8Fz2JOG4cG+hdq/PSadG9j0vNNcCrsb21llp+
Ce/DJi9nyC+oTdDjo32PzSKivYk+YHnDe8fP5zfSuS30Pqlhx+3IO8yD/8M2
ymPyc/TY0Z9Z/idYPRAvb7fddmVuAK3LSoK8fM3Fq7OlyTKzO1h9/A17S9sh
PmXzcAO0OoPxPd+ED8hXqXZbH3y6ky56MfTF37g+vpN8YdW+jHvIgeh9SDOz
1Izjpc4Fl+LdsxficJbqE4tP5bO3OTP1T3omrJQc0zTgvqttFHfUuv9J1oC+
BHyEcexCXQNytfob195pqwHhb1Y+xGv2UHUXC71ratr19fP+zENsRy8lNqn9
CPXMpUkIVg9ozvBm9B38YJz4SoD8nutR1yVfJZYVzwTDgy6CZket7uD8LrGT
v8dT4njmvS+t/Aotqr6F/GH5S3837+cdrIH9UpyED9cPGQdH40v3Lwc9D7mz
SVFnfspR4Km8V3LsK+WgqaPZYJuH5dvovWmI5f/F6PYqPvNCv+/9lreqPIF6
CL0DaKW78Lf0yOEj1Xn1alnoPWkz+gS9MZ7SHtbuJ9u+Rv+mr8ImG29Sapfx
6uL1heas43DUDdFssIGjcp/WphhOjkjuel08kPeUVq/eN7kT/bvtL8sZtWeV
mLh9f/lS4uPsLcsbct/1vas1fe1YTtyEH/nKl7/S2WzgSeGdsv7YBDw2fR5t
a+bCrR7Y7/DjcrVs9UqBPUZvBjN09eLUG8r+Q7cRrD7+pvbyUpdiTeh/+P3v
/+AGvp48l5wbW1jt9x/+4R8Vn8R6mjR26IO/oYekb/EM+UuDdZ/icf0waNjw
Vt53vQjoCbwbC/X4pzvSK4YfO2q/X/ubfUTPNPyN3Mp3vv2dRX+eNl2MLc9f
z8EsIjX0Xc3AWumQm8PfiWn4mIN9W60BfZP0/Rl2DdRZsYe87ZCR14C1rE+l
Wje5H/2QVrJ9aSP8zcoG+1bfNe/O4LtWZ7dY8+ecfc5c5JvUqal9sfeJ8Wma
+f5s76+uTI3CagCdqN5pDrWxXc0KmCXkTfBQ+j/b33ANs5w1tdzALpx91tml
b4R6XTnCwdwFHbx+e3rczFM92VKw1vkf6r7xTuxccmzLA5W/0ddEzsxs+qXi
h+UIMZucoThU3lAt5wt2f8GKOfi++iyyw+qU14Wqf9c7FTeh1kUMuVitB90x
brZyzeIVtkvPMTZqUp9LPx31PNW3E1OJ2dnAPmC90847f3EZu8tPw+GIofWt
5LvRNFovevbS3+BW2Dizgugk6YnkoGmKKpcjtvOZeiGMsufXWkafK2/iO39x
2S8W5McqH4lzc6/qnB79293LLud4zwJ8fvfvNre+zfX2R76UuK7L2cXzDLGt
3Cq/ATe73HueeG7sjpp678jg/FLvP+7GjBHPvwvb0hXYC3WC/Dack/NcCe9a
sG5Yh3Tv/Ha50qM/dvSiM8mWI2g/9PGTE5ZPkbc8/AOHD+VLrAasJv6m1iXU
2hu+cpmRsoCOxDvAH7Je2r1wxLD6PU5au981f4Nr5z/YX6z1WjNNL+Ra8VDm
DsrV7b333oWbwmPhRtT+0sbQO8nT87X4w/L4DnuC/Puos3/4iPxQs8vMd1Z/
vdi18QX119WrvF03pO+xNZr+9euGNUC/98xnrKn9rWtAjpY2i47MGlCTT5ds
DeDU1DyJs+oawNdV/W17DVhb+t2PojvBg/p8Mce/P/DfS/+m1eTjhr/5TUzn
ufP3/blc8n+LgT1iz8TR9oRBrSP/nz8lxj777HPmpteLOEv9qFymvUFcItZX
F7kS8vjB0mC76bPsyXIOtOyXXTZ/vSdHhbw8307sTX+sbnfcmtHVCL4oXxDf
vFAdbp2hsJi/PO9wzgv1XwrmH/bO5Z4fXAxssRhw0IdYSYd4jk6M1mVd8Kzx
NTgT+jIzJpbq08XGV56j/Z1+j5856Zox804fycpn0z/iltTH9AHxkni33fcD
70Jfp4+1f/vud7+7pP/susVp7oHab/em9s5Wn6PX67A9dty//8/enQfNVlb3
4v8jMRrjlMlKTKyfGlLOcYLgFbyCCQ4oenGIlhqcgyhKgYiKeEgpTmhAnJgS
RRDjCMGIGlQUkZIoQSZBLxcFjYA4/EQEB9D38nnOXcfn9Olh7+7d593dvb5V
XYdzeN/u3Xs/z3rWWt/vWsszMePbM6GJGDdfwc+KQ8WStQ4Ql2Te+aL7mO47
7s59rNebs1G/8j728e4aMQPes+QP0NbSSfQlxpkG+uKpYZD/GmbD1LbIRend
3sX8667BzxWL8nvlufHe5l0llhv02uyR3Jy+RWoLFj23UgNXSjdAhyCvrXeI
/lmJjVgV/iZyiPgEuWl51HH2zZk0WAvi5R7xL2fV8HXN3/DXzAmLnuWRc3/k
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
b+T69DWz3uftY+Hr8TH0OHSv9pt8fg3nOy7BHBY5/OT35w/n8nHvOa5oRgaf
R9cIjT4eVp8leebBOec4JJwinRoub5XXwCrzN/xDvSrFgPHdnc/maPVdK2+d
00rRgdQ9rgfjePmCLnuN4qzf+ta3lrl9Ygnc6C9/sfXrlJw/zjvnkR4R4rNV
5WAT/YBzhJ7RrDe9++l/1NsnxkN8xKc89NBDS585PSAHe4bwb9kb+YUu9VR4
bTV8/AXnXpP514lEIjEMuF+2TJ5cvWDYMVr6+97nvkXn3lUfp3H1N7TCXdbf
xEwOtRs+d55ahNA76wXPLquxoZcM/OyGn5VY8sEPfnDJO6ubXIbZ2F1CHzGz
kOlUV6n+Rt8c2m46b99ZTwIzl7/85S+v96WNhPUePQPVasdcpnpP8yf5J2Ke
LudOySeas6NXoT4N9CvrpYMTj4sv5ehobLP+JtEHxHkkVlCDQNvbp5qOaTCq
/kbOtOuXeorB+hu5qXl8lpfcP26K1s+8WfnNPsCaYb+dTzU/r/aGDtm6uvGX
3dneLvgbNvnyb11eNEfz1jXyKZ1HT3va04qeUlzOj4n/p48WX0+OVh24vkOJ
+cMasI621hpQh4V3jVrcmG8Ua0B98r3uda/yM3yFVcYq8zfWo3hGbjC+Oz9W
DNBnPZ91THepTwDN1GCfIXU4+Gl9hvgcXfIaek/KF8gR6CU5ar7UvGHdyrWq
hzSryPPK+pvEesNe4HPIN7Ghy9xrvivgl+U1+d21LilsmXmGevfQiXbZy9h7
0bLS+7D77OWi9+5LJBLrh2uu+X7pYW7e4GB/DPFGl9r5UfNv+H50A4veE0y9
jznR8h16XkQqV4z/7ne/u+iWxHe4nKyZ3Bz0Z+4NzibWxTLPv5Fjla/Sm0Z+
MOrexHZ8i8gD9RH0pXrFPOIRjyizV+u97HvwicRccpFd9i0Uu+F/d9lll6Jh
3GeffdY97g0NVMZyib5BbCfvsAyc4rD5N3Lj83jR3Q2bfzOvz6MvNi+Apndr
zb9pArUlNCnqggZ11hs2bCh56y7RBX+ztcE3obdwJumhhs8H14vTp4l1/3CP
yzAnObEl5OXllvlDeth47sAv0CvNeqbLsddjfawqVpW/8b3FgWrx7nCHO2z6
7uqyPve5z/VWz0eT9LWLvlb6c+BuBnskOyPVo6gh8j268jW8j54Wxx57bPlc
/UX1hVpveI7rxSElEsNgLS7TLOR5Q322s3qw/6OX+d/6TePDuo7p6ZDlAW9/
+9sX/ZN8YeYBE4nEtBAb07PzkWo7pl75Xe96V+k91hX4Y+IXM3Xqz/LZ7OWi
98ky00bu5053ulPR3IWPZ3Yp3ZV/10PDfUj/b3NYZ+a/qtuo14Wealdf3V39
Rl/AN6Bvlt+p94L+cXq/dNmXpmt8+MMfLjVmt73tlr2M1CLTtfBNuvYp1fHQ
xMiHyZepG5fXTSQSia5gtpU6H7Gc3NRzn/vcTnvCLAo+/vFTy33AYdU2nkZF
XVfXMwUXkb9x/vCT5e3NITef3JknH2tmgnpr9TdnnXXWzLO8E/2EfYB/VQ+s
zkbttDXw4x//uGhx5GpokfRUXvU1sKr8jZiP/oD2uralzhYapL6uC2tbT8DB
644XTSKtlu/WZR8gsQO+Czd+m9vcZu35z3t+qcVJJBKJaXD1VVeX/AGflu50
sGcI3SkdOz07jWrXfBh+W409zpv21Jm3tWf3JjbHRv3tL0q+TX6J3+6sTi40
0XfwkdQD45vlKuoaQr1J9H4Ug3SF6NWmNrG2m2KeD3zgA2vfvuLbk9+kx1Bj
zt9UT/Ha17y22AL3WHz/8Ic/vPSaUrdQ/Nw0D5uBNtVcIDrFui7L/eyy/1Zf
oG7Weqlr0cQp1omeYH08161nPWD0gsFFDs78M79UXfAJJ5xQ6oe6PgPZowMO
OKDUN+vDbWZW01nQiUQi0QSrzt+w284fdU7qQaO3p966/lvsKb7teqbgIvI3
4j7xPt/FvVKvrs5cf1HXTjfuvHSmp2ZnOeF566nEZtAfyTP7N3rbvfbaq6wB
2iT1bKu+BlaVv1GrSPcUOkm5Q/6y2XTi4j6uC5o6NS87PWzz/ICX2bh/+qd/
WvxweUk8dpf+Pr/+Ix/5SLGrPlu9LRuaSCQSbaG3D33105/+9LW73vWuW9gy
nIqaHHXSbNlNN3bHRbOL7PuRRx65Kdeqrl3dbh/t/rJCHlFtNB9drwM1A84Y
WmNaK/GO3JVZHn3VU6waYu/cdNPGXiLL8OrKT2LT8An07HUull+mp7cYtEv7
Yk94T/mQ2n7SpvW9Z1QTqC36p386rOSX5Zn1wea377fffqWuAheBL0tsCbGt
/iN1P65tt922zMNc9L56w+A7HX/88cVniO975zvfufQsnPfM3WmgVuiMM85Y
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
mWeW+puo09Sba1Y/e9lhXb3lLW/ZFDfRfLGnai9mndXpd+XjzCWzxr03DZv8
in3QpC5KHka9Gj1Y7BfcxiMe8YgSd7SteaHB0I8m5qaJ5fQnEP/TAU7ShfAP
rDPxTc39iBOn5Tb4Mvwf8aSe03yd0B/GS9yIMzLbQI3OvHSl8j3icPOP7KH4
fNeFo5omjk4kEokmWEX+hv2nQ6BpENNEjSkf0T1wPuNQhsW8fk8vCrNfcD80
bOrD22IR+ZuoPXLf4pppLuURppkNuejwDPUN4ct7jup0n/ykJxd/i98zLr5Y
VMQa0G8/1gC9jz4D2Tttc8yLv+HCmzWgTxkbxG7x0dVrmxE7ynbVUFtoH/PF
49qivl1v72nWLRvgmsx7jfeU09MzjV5RLfmk+OOKy68oOUc9AOKa6B/56tPC
d1Hfbg4o7eSwOnv9OJx94iQzfOYBz8R9V69pDlDkBPxpjWTsnEgkxoH9ZGdP
O+200l9FHmnQlqmnlK/hl03TB7MJ+D6uQ22kHio+E4fkWnDjeuzyi+fVaz7R
HHoFOPdCs0BzT6NGf59I9BXsi55P8rO1fTNPg35yVH8Mfpa6AXlweWz9zcXt
03DY+rPhgdi36D1oxoZa6UXuM8Z+49fxN76THD3dVs5aHw9xl1g/6lvEJ2pb
nLWzwFpyXpojLKbDR4jpxAl49qbPRYylt3kd1+EVxDZyFU1hr7gm2jlrP3Jk
4jnnfVONmzq4Cy+8qOgH4np8P7NP21xPwH6jE7R25cvwXIPaFc/GfaPPvuSS
S1p/RhOIKfFP+F2xmzo/zyz8Hz3n5PdSv5JIJOaFVeRvfvmLX5azUp+h2u7z
y+jZ+YzD4OyQo5YHjL66arin4VsWkr/51a+L7oFORw278wqPpdfQKvbJsIbk
lelc+cHObn7Onf70ToXX0pee5mWZYA9YA3roxRoQJ+nbPa9ZIYuKefA3/EZ6
InUkOAdchBhCnIpLHjezq4b6HbNldt55503XRqtoLdMqTnNd7Bm7WNey77DD
Dv9vhk2zPsDq8T/1qU+VmCg49eiZPA3EIc6z97///cVe1304Ih73vfUZEr/O
q96dfWQv5BV8VnBIPl9M5PqS/0wkEuPAzsqdsLP1TOH6pS+9/OI8fTJ9XuRQ
cEhih+CQ2GucEj3HouY2lw24tLv8f3fZlOdS9+lMpp9OJPoKuVd+bt3f3Eut
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
L7PNfLkmwCXyocXWdZ/qPr2ix1XwEvOA+4CPq+NN5xqb1IZTi+eLq6ljJ2ei
+tUu5yj4nDe+8Y0lP+uzcIBquJrMs5GzoQ/Eo4ulcInO9Tb98exLOt7B3n1s
HY5+771fvHbYPx1WctTiEjklPUTd4+hZES97ynluLYo/B1/yl2ph2nDf0ROP
H0JrLD73WXQD8p327yRbrOecPHLE036XtllPvUQ/Yf3LxVtz+gbiHPr0ck0f
/tCHSy6Kj9i1jjs4ZHlGfATbwze3bvnvbftZ4IjxFjSd3g+XaU/NmouNun4+
EV2PM5bGle3gA5ojRD/rzGbXaELtW1p4uYbgruVovHA/193sJ0zjX8nBqZmM
mdhhl/QQ8cyc12IafqvrlOd49UGvLvYPn+O65Vr8vJl7dK+z5HVcj+/HVxZj
0v7LpfA76Jt8LluqT4o6YLZcPsx10IzJXXmP9DVXC1GPJlbGs/JD7B1r1J6y
lvbdd9+S77aH6f3b9opqcg3Wvj3NF+Wb8i2do2oj55WvnQd8D/lH+11OlH3A
IyfGw/oLLX7k7Pl3bP20+Ro+a/TwqH1HcbWzvu15pHca/j20RPg5sSe/tg3o
g9TsOGO9D3+aRojWSO6/6d768Y+vLXvW96nPIBoy50DT2EGOheaMLq+v/o8X
TkTudF59CMUbzmSxRcQlzk42qA34TPoLxJwkz1c8KvbyfLvgvnGazmz2WV6M
zRST66FgfTXxJfTMi1k10fNc7DWp34v1Kb7Se8J+sHa91Gay4XJx4/asaxej
PehB227WQ4PPIj+RswMTfcEq8zf2uZjgwgsuLOeVGML35xuKreS61NnpIS82
ZXe68gsXjb+hT/zPs/+zaI/lZumH2+pDlg3Wgmcl9nZe0DXzMdTa00eLQ8XG
y8Lf0Lryo/BT1gCOc5XnH01CV/wNG8UPrmspQl+lNritRlbeXb1N6LT4brQ3
08xR54exWbRZcV18NT67Gsamvqx7JUckh8NnCq6A79amxkj+zPnFlw6/er39
+2H+vny5vTRrH85RkFPwTPDs8VzkG2iP2vRy9HzVqcqRBBcmPtTDmJ3rKlaR
d8F1yNfJz/K3zRGy7pvEFPSx4mszYKI3nfyu2pZJ/bp9B+c7vkcfMvGR7yju
kEcVF1vL9Ar6N4kf1LHYd7gw/08/F7md6B/o99XGyBN7xoMv+n9xQhstIztg
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
VviubEWdE/dePgtnpKeXfJqaIDoy+R/3hp4m+6S0B/vD3uiRELlAOTT3mMa8
bV0tjoNePeZB2vv6AzWdgT3pOp0rkeuTU532OvUXsLbrXmi+v3owcesg/+iz
1Rtbp37WXvDf3sP6nEbrHfxl9JrDn8npiGGd9dPUX/IF9CPCl9dxiZ5N0+RE
E4lFA/5VjiF6i8UMFrNQ2kDeS54iepDYn/Ighx9+eKu+LmzDueeeu/bEJzxx
03yx0IY6L+VBmtoP5xzOt+5RFhz5t775ralyXt7PuRoaDy+6G+d+m3mV/NjB
WUHumZ5Rg7k/31deU86x7p0ij8cHcO/zPE8sG+yDmCvO3xUji/n43n1b7/ao
Wmp2gU8ojle/kfNLt4R7ddZZZ5W5aLRlzgxnkDqIeflcbCQbrU5SnM0fNfPk
+OOPLz6x2ilanne9612Ff2Fr5eKdaeob5LT5tHgT/rp6HHGfPDi/1LPXK1Rf
TrnupmeBOh0xpBpwOiJ8vs+RR6et+Pd///cSt+lF7LPVvDu/+NJ+N3t0zAbx
sHxSaC75QeIk66DNfWWPxEI0bdHvwEvNCp3eYC2Wv9OdNdVO8IlwNX/yJ3+y
6TrF9dZG2+cvlpJvilgqekhYv/yMwfwon8sa1/ugjv/UscmBTNNPIZFIJEZh
EfgbdpePyg9wfvBlnP+0gYktQSsjX82v4tPTZy26f2wN0IHzF53NfFm+2hmf
P2O9L6336Jq/AetJ3CWHxZ++xz3uUd6TH3/qqacWn5o2+eijjy7xh+emR4y4
Ur2L2gM/Ky9PN6jXPn/bz1u7fi50XR/96EdbzR3k89GsmY9F/ysOsRfEIK6N
/tl76jshTtFb2c/5GfUhkzRhifHAe4jN3Nva79XHsU1PsujXR9MnRxn99rwX
bffgXKLohScmbOKrhxYejxjXya7QarftnQa0i+rLInaQZ3ReqeVikwfXFA7U
3ggdWmjnp+nJFFDTr7+EmCXiF3pFMfm00MuWhjJ4pohLxFz0bn3xExKJeUEe
yBkXdS40mHJReIo2MLPAORx92PAkzj75rTZgS/h1g3U822+/cYZ5G3+Pbtl5
KC9R80DO9mlnocuZsaN1r/zoAd/GXtBi6H3i3sf7sJN8hUGfwD2hv65nB0dv
Fvc88yeJZYT9RIskz44TcTbjTtXg9KkHfdSy0ctEb0P+vTr79CE2R8xOx1Ho
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
RrGceof6xQdkJ/HDWwtye/hsealx86ATyws50VwDo+H8l0+mNRncs170H/Uc
keRvEl1DPC73WPc8o7G6293uVl78fjlM/Asf2prlw9JeyTG85jWvKX49P1vN
uByieJ9mSa7f71vH/psPrC8zf9fPm6/5vhPeN3HOJYhL6FDr69Q/SC5TvyK+
vPhBHerRRx9d8h1yj67VdeOg1AfJE6rX17tM7DFLzYs5G+IIeVtcjJhGD2Wf
7z7hcny+z8F3iHHEVWaB+f762/Pv5903Uz5IzyVaMPkGzxXv5Vrx6/KarlVc
Ij7Ck4nJzD6i/dDDWQ8pOVC5UHntprNFE4mtCTmB173udZt6i9V5Af3Qm9bf
2L/sE46lfh/xOQ5mMCanwWBX2Mmzzz576HvKzYr76erZsM3m3zQAu+qz2eP6
muhX8cLnn3f+pp+VH6FDlduwf333SXkEtij6zukfgquSv5kEWlg8jf5Bzg4v
fgsOBp82KefMjrLHtQ5Xfzg542nzxe6Vc40OVi0Re9uEi0ok+gDcpXo2Po28
K7tD/5K9y9YfeHj2Tk6FzaL5pw9KJNYbOAh9CuT8Yl6NF//dmWrepnOaTsI5
LV9obgyfRM1JzL3TS1XuJnR17BENH15FTMd3wbv4/dvd7nblPdTji6eacMzs
mFgRH1RfpxiJno5OhbZVbwK5TRo5P0v35jP5Tz5X32m93Oy/rmZH8xFdg3pq
sZrP8X1xX/Qp/CKcrXvs2vg6+reJqfiBapblP1PXlkgkBjGMvxn3ooOWI2YP
E4lEPyCX7cyP3u+TXsnfJLoE/5I2Wp6N5jn06nKf6i1oiNSm81/52HxmuQRn
CR6F78qnpjvCU8jVBaK+XbzAz/f+8mh8f3/H5+A58DKT/Ny4TnrH+joj9/n1
r3+j9EHG5fCvxSVilHvf694lruD76/1M947D8bk4oy5yIc5iMyZwI2J5+V73
zwzN4HRcizNYbEQvhkuSWxXnbC0f32eJb3A18rliD/dE7zexB00eWyQ+wrfR
4Lu/eoPIHeHe9NHbmtecSLSFHL2eHIO8i/Vt302K8elMcDdsGv0lO1dzQYN9
2HAiuEwctlpZfEf0iRyEvSMHK9+AR2ZT7T/aTXzDuP5Il1x8SbFb+Ag2ly2J
vIfcCxte90SsORW1djiSSf3o/Q7NqPyE65KvwDvjl4flZFyv7y/XI5fJnrAZ
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
AAAAAMAoxxe6mA==
     "], {{0, 190}, {1648, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{524.0192708333329, Automatic},
   ImageSizeRaw->{1648, 190},
   PlotRange->{{0, 1648}, {0, 190}}]], "Input",ExpressionUUID->
  "06168598-6ec3-496a-94ec-2af6326127dc"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQd0FtW694FQo/SEXgQCSugi0rt00gg10iGQSAkhhd57iyBEIID0UI1B
RFgB8dCUtgBF2gURzpKjcg7qOuBS7zn35vt92Yu5c2bmncxb84bs/1q6wsy8
M3vvp/2fXWuMjOkzpkC+fPniivK/PiOmdJw8ecS08FL8o9/EuOixEyNH95gY
Hzk2cnKLkT5cjOK/Ezz////OlJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQ
kJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQ
kJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQ
kJCQkJCQkJCQkJCQkJCQkJCQkJCQeLHw22+/HTx48B//+EdOFyTz2bNnhw8f
fvr0aU4XREJCQkJCQkKL33//ferUqRs3bvyf//kfzS24xObNm6OiokaPHh0b
G3vp0qWLFy+mpqZqnuSf3JoyZUqPHj3CwsLGjh177Nixf//736dOndq7d6/+
tWr88ccfmitpaWmjRo36+eefXVI7B/Cvf/2LwufU1/MaaO0DBw4kJibGxMTc
uXMnp4uTA8BA9FaQ20ECkpSUhEyXLFlCIpDTxfEiIO4XLCeSss5TQIFhBePG
jYM5aG7hwPv06bNhwwbh0B48ePD2229XqVKF59WPffPNN8HBwS1btoQePHny
hCs//fRTfHw8zKFmzZo7d+40/C6R4tatWzNmzKhRowZvUN8iXi9YsGDy5Ml/
/vmnK6tqAT/88MOuXbvq1Kmzdu1aD386zwIN/Prrr/v27Vu5cuW7d+/mdHE8
CmLHmTNnemcBfp7TxXEl8CdHjhypVasWkn3xGJFj+Pbbb0ms4rLQoUMHcjEc
Tk4XygWQss5T+Oqrr1q3bq2J2uCXX34JDw9ft26dupfg9OnThPjLly8rVw4d
OoSrh3JomPM///nPbt26+fv7X79+Xf/Rx48fR0dH86v+/fuXLl2akKF54G9/
+1vbtm2PHj3qbPUsA6ICTxg8eDBG7evr++6773rs0xL4nKCgoM6dO79g+Zc5
zp49O3DgQGhzYGDgW2+99YJxBnDz5s0KFSqsXLkypwviFfj555/JrfCoog+T
jKlq1aphYWEvhs5LWecRoL2xsbFjxowh69fcSk9Phzdq8j54Ml5OmfZw4sQJ
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
SEhISEhISEhISEjkOP4f55AU9A==
     "], {{0, 104}, {700, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{491.19999999999965`, Automatic},
   ImageSizeRaw->{700, 104},
   PlotRange->{{0, 700}, {0, 104}}]], "Input",ExpressionUUID->
  "6be42ee2-8bab-4412-ac41-63865f3d1175"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
X8M=
     "], {{0, 57}, {319, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{233.39999999999995`, Automatic},
   ImageSizeRaw->{319, 57},
   PlotRange->{{0, 319}, {0, 57}}]], "Input",ExpressionUUID->
  "b09018e6-658f-4626-a8d4-10f8a6278fe5"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQdwFdUXxhEJAmpEIUAGQidKFakixYD0DjEQikDoSBtCCL0TutRQA4Qi
ASkGEiEZmvQiGYgBAoyA4CAio+Cgjjrg5P/75447O7v7ln1v9yVB7zcD897u
vt17z/3ud8659+5Nmb4jOw/MnStXrtH5+K9z2NjG4eFh44ML8iVkxOghg0YM
6N9qRMSAQQPC3+37Igfr8W/fC7ly/f9zhoSEhISEhISEhISEhISEhISEhISE
hISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISE
hISEhISEhISEhISEhISEhISER/j++++joqI+/vjj0NDQnTt3Pn361KuPe/Lk
yY4dO8aMGTNy5MhvvvnGq8+SeO5w4cKFyZMnw8a9e/f+/fff2V0cif80Ll68
OGzYsCtXrvD5zp077733Hgrp1SfC+a+//rpz584lSpS4ceOGV58l8dzhhx9+
mDdvXoECBTZu3JjdZZH4T+PBgwfh4eG3bt0SX//6668uXbrguL393N9//71N
mzZNmzb99ddfvf0siecOK1asKFy4cGpqanYXRMIN4NfS09OVr0RBBw4cmDZt
2tSpU+fOnfvtt99mX9E8AeVft27d9u3blSOoZa1atWbNmsXnP//8c9OmTVMy
sXLlSrWOXb169d69e3Yeffv27bJly06cOFFmT1mPS5cu0dBeurl9buCjP/ro
ozp16vz8889OlUrC27h8+XK3bt3S0tKUI0+fPh0yZEhAQEDHjh1pUC7IxuJ5
gEePHo0ZMwbNF19RqqVLlyKPIuElwEMYO3ToQLpdpkyZ7777TvkhmXj37t1J
kD1+dFJS0uuvvx4fH//MK0UmHh0dPXPmzC1btty/f9/jh0pgTGw4bNiwx48f
e+kR9rlBE7/99tsDBw588uSJgwXLehD99uvXr6sOyMiIESOWLVt25swZb4/z
Zw0Qh3bt2hErqg9SNfJQyGanjjD2iy++6NWrF0obGhqK3YRecc8//vjDbrlN
QfOhOSkpKa1atXr33XeRQVy2Wv8FvvzyS+iqlkdxsH379nfu3PHguVSZ5yKP
VHbo0KGk80Tgv/32m/5K7o9lwsLCYmJidu3ahZiXK1cuKirKWcvQl9esWfPv
IKo5EhMT8Xd2orsjR45UqVJFpL20AnZr1KhReHg4uYZyjR1uAESjYMGCaCzc
QF569OhhOECNc58+fXr//v37WcCiRYtw956Vx2P88ssvJ06cIOTw9fV98cUX
R40ahfVOnjzJ/1u3bqW/0wXod5griwvmLDAsPZRQStOD7Msjd46IiKhdu7bw
tiSwnTp1wr9wHBviX7yae8bFxW3btg2affbZZ7TXnj17UMjk5GTNZYbySJXJ
wXv37m0oa+agdm3btoUbu3fvpoLcuVq1auvXr9dcRm6F2bGD+uD58+crVKgw
YcIEB0OLjRs3qkcYnl9gzM2bN0MnXIn+7LVr1+rVq6exp7v3nzRpUtmyZW/f
vs3d8FY8qGfPnrNnz1Y3hx1uZGQOPAoxgSfcdsCAAYQNenEjBz927NjatWsr
VqyYK1eumjVr0o4J/wAyx8bG4nahLmfRcMTK44rbwenTp1977TXDWchTp075
+/u/8cYbdhol27Fjxw4op9GHDNvyCNlwaqiE2n2sWrXKz8+PiA6C4UbtFNsc
EA/nq06CqMXo0aNbtGihmS4xlMeMzOVA+D6k1d1Hi4FH+C/s9uDBA7hNF1Bf
g3HwDtwfb6v5+fLly4kunGIUvWzy5MmXLl1y5G7ZCxqucePGPj4+69at05wi
uiNdJWKhvh7fH7lr1qxZy5YtEWGiBWVYRg+PuSEGHqtXry5GUWBIZGRkyZIl
XQ3s//TTT5And+7cK1euNLwAm3Tu3DkkJMROxe0gOjqa4hnOQorK/v9vbHfu
7O1U0UsghsH1zJkzRx/I2ZTHu3fvvvXWW82bN1fbbe/evfT9+fPnQz+vWgxe
QTz16De1GDt2LEr4448/qq90JY8YhHLWrVvX3fHApKQk6qhEOHjV4sWLk0Op
r6HurVu3hjlol8bySFnhwoXJmBwJIKksTuFfMwtw69Yt7KPn6vHjx8uXL3/u
3Dk7N79582ZAQEDevHn5H6VF/VxlrB5zQww8Ko2LqiMdpUqVwqUaXn/hwgUC
DOhkUrU1a9ZA9WwZPEEAITY0JurWNwp1pKacJfqiP2Z98ewjPj6eUMcwurAp
j4cPH37llVcI4dR2O3DgwMsvv2w4BugsLl68yKPVCoMitWvX7oMPPrAYPWZk
TldhHKJrtx69cOHCYsWKXb16VXzFI+TLl4+D6mvEqgCyNn2IQmSCW6FIjkzT
kK3PmDHjeZ8FMAe1Gzx4MI3rWbargJYiE9y3b9/Dhw/5XKlSpfbt27tKWj3j
RmpqaqFChRA08ZW2JneGk67mkoiTycTfeecdjU9Xg1iXjMOtYjgF2Fu1alXo
jbn0Zx89etSgQYPnN3pE/Lt3796qVStDXtmUR7r/q6++umHDBvVBtMjX13fp
0qUeltgyYmNj582bp1bm06dPE5WRpGjcnIk8YhaM07VrV+uNK+ZlatSoIfiM
hfv371+mTBnrr89AucqVK/v5+V2/ft3iT0ywadOmbdu22b9PTgYhJUplk1Q0
HBlN6dKlRZ4rvhJGcvP09PTt27draOMBNzIy52VIJZQBcFIM+ghtZHgxsg95
kJc+ffqoHRwxp1pOY2JiPEjzHYEYeMRKBN76swcPHiRAen7HHtGEwMBAurPh
FIlNebx37x5eb9q0acrNIR7BNr5mxYoVeBZDRXIEcIlih4aGKiwi08dHh4WF
6UdITORRaB3i5ir3McSePXuouJjZxKuWKFFi69atri6mhImJiUuWLEHEiCUy
Mocu6aSkVPaXDWMHkndvB+rZjp07dxYpUsTmUDZy16JFi9atW4uEWgzF0I54
K2Iz/fSrZ9ygiWvWrCliThhC1jlgwABXKTwJaa1atYgelWhTIC4uTv3GzVdf
feVWGRwElnnhhReaNWumj68oErUjVaSoz+nqX7yYmGA1POtKHh88eBAZGenv
758nTx6aLykpSV19PuMThTc5duxY48aNx48fT35H+sP/GG3kyJFNmzaFFUeP
HnW3wKSK5DsFChTAK3Xr1k0zoI3kkmhANlHC1atXo8bEkGPGjOnUqRMBgGGO
aSKPAONgIs2SJ3NAlYiIiN69eyNNbdq0wYcaXgb56YB0FjwIZUhISMAy8fHx
586dK1iwYNGiRa0HnGg+eTriHxQURCiiNId64JG6z5o1q2TJkoZ5UE4G1cHj
9O3bt23btsOHD9fkoZBz1KhReHk8oOHPLdKVn5PnLliwQDl74sSJ6tWrjxgx
At4aKpgH3ODmaGPLli1pCzgJOU2CT2XgEQFUDsIuupJXpzUtQhl41Iyfcxwa
Y8z69eurS/7cgSgO+1+8eNHwrKE8kmvgFLAJQXWhQoX4QPCs9q1cMG7cOIXD
/BYRQ3wUA/IBv+nBZAE2hyp4K6QDheTRDRs2VI/JfP755+vWreP+1Aj6IQiw
+saNG+ZDUubyyK146OLFi90tLcGzqw6bkTn/QtcjXFE/F5WbOnUqJacjV6lS
xWTmVA2qOX/+fNIrPiCG6ngmJSUF7RVOAVN07NgRo9Hf3a1L9oIGwsPSiPv3
74d1xE7qs2KSCy9s+P6mdbpCm/v372sigYcPH2JMV8GPx9ygqNDymQPC69ev
FwOPxJxoDoWENjgIXKpFbngVYuARk2J8sfyyS5cuSGLx4sXxZVmzJpzsHseH
JuSyDB8fH/T8mWXjgvDwcFI/5ZVk/QUaeaRZQ0JC6NT4NXGE9mrSpAn9TkgQ
RIqOjsbXO2eADOVB+CPCLfG+mNgVp1SpUii8uIDQkeqIlJZk1vqYubk8YpyA
gABkx8G2JiysVKlStWrV9DkRLoBTNGKHDh3US5FNgGVQD1RCrLdEBJT3m4il
1QOPdGeoi5WcqogGiEnz5s3d4ioX4+NM3gGEVwT/Yp6Lts6dO/eyZcvUF+Af
cTR0TP3KFm/T1RvcUKAMPKLAlTNRoUIFclWOkDdl1zIeNU6dOuXr6wujlDQH
xp49exbqFi5cGO5lQU6NHVJTU0+4AxTVyjun2J8EkM7o6i0DvTwSotBkmrk8
YiR6JYFKRuZwCt7N8WUkmJ2YJyYmRmPwffv20S9EpArJFy1axAXUi2zI+iuQ
5vKIcTBR9+7dnSIkHTM4ODhv3ryGA5I0H5SjC0RFRVlhl3hTkrA5I3NdNFzF
feMpMjLbd8qUKeqVn2IdmkZeMv55/ZzUnmrOnDkTlcvwdFs2FOPkyZPWucrF
3NykpufOnZswYQIlR/zbt2+PVmjySihXtmzZIUOG6IMxb9PVcW6oIQYecQer
V69WDiL4kMezSSjHN1ITA4+4G03cjsOqUaMGUTr6af8p2QXaFFMrK1T10Mgj
/ZqeYvi2aWxsLLbC5qQDW7ZscbyoV65cgcb67ImQieO0O2XDiYsYg3odPnzY
+hoPc3mkrclucIhOdQHImT9//sDAQMMnJicnEyGQCeLjrNwNm6elpQkHsWbN
GnIxZaJNDDyq15shIMSZmlkGtJTscteuXbQyOok9Bw0axIccsi0baibGsQl9
/fz89GtgOItTUBbhK8gCujrODTWor37FIy04ceJE/asEVuDsRmpi0Qt+HOel
sTynQkNDrbv4nAm6AC2rLEHRQyOP/I+7NKwvukQXE/1RTL86C6jualkpbU3+
SEiPLHi2us9cHsU7L8QbFlNdc8CcsLAwmEMUZ9inCO3wyI0aNRIRoHUowRWm
EEfwGlOnTlXbhDgqMjJSnSzQposXL1Znl9gTa4hrcs62bLCOvob4K2MpCgg+
ixYtGhERoX8l1tt0dZYbGigDj+ruSUeYNWuWOp4hB0lMTLR4Twc3UhMDjy+9
9JJ+3xVo1rBhQ0g+f/58+w/KLtA9u3btajIFYH1hj5gc3L17N+ltFq/eP3bs
2MKFC+fMmUOm5tkdzOUR41SrVg1v6EiEIOINMibNUg0BguFOnTr5+PjExMS4
e+dLly6hEmpdJS7S5O8kO2LGSjlCcDVp0iRlWpa2I5sOCgoSCWnO2ZaN/Ldu
3boBAQH6taBiANCt5WdO0dVZbqgh3sVGYXr37m3i9KFTv379LO406OxGavqB
RwV4n2LFiuXJk2fz5s32H2QOQuuKFSuSyL9uGXQTXO0z2x2zk0aVK1fO1d4j
1uWR/hUeHs7FribBvQfybmpBGODxHlbm8sjxChUq9O/f35EXT2ByyZIl4dXx
48f1ZxEreCXW2rl7ZxJGCDllyhQhZWLgUR0n0EYooTrZ5EpyTPW6FAJOyKas
Mba+LZsAyhwcHFyoUCHrXIXYBKjPfONMvGzVq1cv+jjFVi+zES8ZmcuIBk7R
1VluqKEMPK5atcrkMvTHyiSsgLMbqYk0Rz/wmJG51p2okvYyXNJGd6Oxhg4d
iv4Tzc6ePdvOu078Njk5eceOHZ9ZBm7R1WS0GiJhgcziDw3oYV0eSS4IRHv0
6GHzrS4PgPOqXLmyB+GWAnN5vHbtmp+fn34UxbNWvnv3bmBgIAkOt9WcgrT0
2fz582uWoVJBniI2tvrwww+V4W7N4z755BN6k7JXAwGSeuBR7HUDpdVNCbHH
jh1LSWjlevXqNWjQ4M0330RmRU2tb8umgJ+cP3/eLa5y8TNXgGCZIUOG0OPE
DNTly5dRfiVgI9AlZm7ZsqX1t1ecoquz3FDDcOBRg3v37pHXK2MpGc/ajc3i
RmpWYDLwmJFJRU4p7zVgnLi4uPT0dD6sXbuWlFwshkxLS/P39zcU2ByCbdu2
YTFX65bdih47dOhgR6MIPOD8jBkz3B1zI6msWbOm8oKzBzCXRyiHidTLY+y0
MqQNCQkxpP2hQ4c4Pnz4cGUgiwchlUKyaAK+rly5EnWFaWRVKJuYYhbYuXNn
3rx5lXkZ9cAjRxAWsmZNgE3vIHGm52KBDRs2EKHBeY4I5bG4LVsWQOSwhLUE
ipSEgEo9WCpyRpMhdD3s01XAWW6oYTjwqAZNiQLjLpVA+pm7sVncSM0Krl+/
Ttbp4+OjWYMqIBIZ5b0GMiZkBE+NZycwmDt3rqCoGLqBxjl2J1IcMbWIjo42
PGtdHumnOCM7GgXHsDbhulicY/2HJ0+epKHtvPBuLo+4YBJe9Xt5NltZ9Klx
48apcxw8e5kyZfr27avuR0RidC70SrmzGNXBRPv379fslgn9GjduXL58ebG7
yKeffioGHrEMoorr0Q8+JCQkaCQChSxdurRw+la2ZcsaiPUz7dq1w3HQMUeO
HKkZPVu+fDk0dpUE6WGfrgKOc0MAh0WsTgBmuGSI+AFnV6dOHcJp9R+VM9+N
zd2N1AzBTVDd4sWLI7Ni2WqBAgWoIB5BQ8UWLVqQByGeKCQCcvToUbGMk1xV
WYNq/speTgCmbtiwIW7IcGzZujzCtD59+tjZkFOs+kYN3N2yj3SSYN7O3IGJ
PIodmZAdpWr2W5mibtq0ie6M2UktcfGDBg1C1pYsWaJ25Txo4MCBmnlGscFL
WFgYLNVnRiKk5ALuTOBHJDl58mTKzyP0w020KXbTzGch3WSLYsMEK9uyZQ0o
KiEQ8SF+AVeof4X89OnTFNv6lr/26ZrhHW5gbaIyRXzy5cuH+JT/B2KzNWVF
ff369dVjtua7sbm7kZpN4JRpDhxZVFSUGEcS7rVBgwYiPaQX0KaGMzs5B2Lb
uipVqhgub7Auj7gJ+rj9+Tsaa/r06dbvw5VoiM2tsE3kEReMw1VvhulUK9+9
e5fwDxqPHz8ekdQv4xcPUtZ4C4iJb6SVXNiVR6Cxzp49S/hBBmqy6QfBJBqr
aXfyVgRZTFhY2ZYty0Bl6WXIoOEgHnVp2rTp4MGDLU46OEJX73HDM5jvxubu
RmqOQ6QAyno29JPivf/++yQCpDA2/7qZ95Ceno5jMnwFz6I8iu1xkFn7yz9S
UlIIaaxnIrRyUFAQSaidh5rII34/MDBQnYVlWSsLJQwODlb3YqKF2rVrk0CZ
D/Vjxmfu8UiW2qtXL7X2ilSiY8eOJPj2t2XLYtDxK1eubOXvvzhF12zkhh7P
3I2NrN/6RmreANYQf6hLDK1TAF9fX2IbZQA8y0riFtAiikc31JfQojzSg0gx
3Nq3xBC06erVq/V/C8YEBw8e5NHWx+QN4Uoexdt/o0eP1uypmzWtzEPJTZRQ
RJRn8eLFkLxVq1YoGErlql00r1obIj4+nlBHWdlCdehQhEPKy5hubcuW7YAD
CJGrvzigudI+XbOXG4blMd+Nza2N1LyEtLS0Jk2akLMMHTqUpJu8qW7dusOH
Dz906FBWFsNdoAwkcQkJCZrjFuWR4I1q2h/EuHnzZkREhPWZa+R03rx5YWFh
NrMkV/KYmJhYr149fb2yrJXhds+ePYlGFixYwP1RyzNnziBrVatW5SthtmF8
KFY8mu/xSIOSJsfGxvbt23fatGnTp08PCQnhV+qxLIvbsuUcoOd4E5NdkgQc
oWu2c0ODZ+7G5tZGat4D5MStKzRDtN1dqZItoLmJSTTxv0V5JFahF9u0Ni04
YcIEw8XSroAq9unTx/5SE0N5xBRwydVeLlnZyjzl2rVrahdAskYA4Co3JDrC
kublefz4MdEFdaRl6eMm4bf5tmw5CsRskZGRKJL5qIJ9uuYcbiiwuBubxY3U
JDTAsCQmgwcPVi8sEfKIr8H34YxctTJJhPW3Pl2BJnM3R4bhc+fOdWtlghrU
LjU19fDhw2SslSpV0uy7iPdfsWJFjl2RZQI65pEjR8wH1ui/xIQ5YVMsZwFF
iYfNt6e2SdfnmhsSHoPm3r59e1JSkvoIaZe/v3+RIkUCAwOf6+2J9CCCCg4O
LpyJoKAg9Tqx5OTkuLi4fzH/ExISyKyzuxReASHTwoULvffHBf713JCQ+I8j
JSXF46hbQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQiKH439if/NS
     "], {{0, 57}, {437, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{296.9999999999999, Automatic},
   ImageSizeRaw->{437, 57},
   PlotRange->{{0, 437}, {0, 57}}]], "Input",ExpressionUUID->
  "b0e0ee7f-6148-4722-a86c-0c6e20dc6c2d"]
}], "Subsection",
 CellChangeTimes->{{3.5509202888331347`*^9, 3.550920307842222*^9}, {
   3.551726509418762*^9, 3.55172651497108*^9}, {3.55172724701795*^9, 
   3.551727256939518*^9}, {3.551740442654239*^9, 3.551740446534461*^9}, {
   3.5517456641776905`*^9, 3.5517456679599066`*^9}, {3.5517550060720167`*^9, 
   3.5517550152525415`*^9}, {3.738588447836997*^9, 3.73858845417936*^9}, {
   3.739026580352948*^9, 3.7390265955748186`*^9}, {3.7608161947106695`*^9, 
   3.760816198633339*^9}, 3.760964245330805*^9, {3.7609642833925004`*^9, 
   3.760964375100518*^9}, {3.7609808204315023`*^9, 3.7609808628119802`*^9}, {
   3.761502082492137*^9, 3.761502110896494*^9}, {3.761505223544675*^9, 
   3.761505223827094*^9}, {3.7615058114199753`*^9, 3.761505840757821*^9}, {
   3.761998962117303*^9, 3.7619989743177247`*^9}, {3.7619990105887375`*^9, 
   3.761999010829199*^9}, {3.762000827155554*^9, 3.7620008275956545`*^9}, {
   3.762020621667922*^9, 3.7620206845788765`*^9}, {3.7620237724640646`*^9, 
   3.7620238211065326`*^9}, {3.762023853931389*^9, 3.762023871825574*^9}, {
   3.762025282941674*^9, 3.762025283425213*^9}, {3.7620263761903257`*^9, 
   3.762026388189472*^9}, {3.762026422455056*^9, 3.762026448160829*^9}, {
   3.76330639149854*^9, 3.763306451593544*^9}, {3.763321508044778*^9, 
   3.7633215100675983`*^9}, {3.763774432838807*^9, 3.763774440127591*^9}, {
   3.763774479381225*^9, 3.763774536759104*^9}, {3.7637788453248167`*^9, 
   3.7637788552402287`*^9}, {3.7637800865132723`*^9, 
   3.7637800885870943`*^9}, {3.763780503472063*^9, 3.763780506896145*^9}, {
   3.7689329304444246`*^9, 
   3.7689329655059137`*^9}},ExpressionUUID->"f8fc6527-d844-4faa-aa47-\
5379d276b51b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]GaugeTerms", "[", 
   RowBox[{"aa_", ",", "bb_", ",", "cc_"}], "]"}], ":=", 
  RowBox[{"I", " ", 
   FractionBox["1", "8"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"10", " ", 
         RowBox[{
          RowBox[{"\[Gamma]down", "[", "ap", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "]"}], " ", 
         RowBox[{"KroneckerDelta", "[", 
          RowBox[{"cc", ",", "dd"}], "]"}]}], " ", "+", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", " ", 
             RowBox[{
              RowBox[{"CommuteGammadown", "[", 
               RowBox[{"ap", ",", "bt"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"aa", ",", "bb"}], "]"}], "]"}]}], 
            RowBox[{
             RowBox[{"\[Gamma]stdown", "[", "bt", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Gamma]stdowndown", "[", "bt", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"CommuteGamma", "[", 
              RowBox[{"bt", ",", "ap"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], " ", "-", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]5", ".", 
               RowBox[{"CommuteGammadown", "[", 
                RowBox[{"ap", ",", "bt"}], "]"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Gamma]5\[Gamma]stdown", "[", "bt", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"bt", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ")"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "ap", "]"}], "[", "dd", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.5528426313960185`*^9, 3.5528428641463313`*^9}, {
   3.55284292218165*^9, 3.5528429562605996`*^9}, {3.5528431499186764`*^9, 
   3.552843154111916*^9}, {3.552843201527628*^9, 3.552843272601693*^9}, {
   3.552843590460874*^9, 3.552843598577338*^9}, {3.5528436607508945`*^9, 
   3.552843666417218*^9}, {3.552844193457363*^9, 3.5528442541348343`*^9}, {
   3.552876682972236*^9, 3.5528766844053183`*^9}, 3.552876717180193*^9, {
   3.552876840979274*^9, 3.5528768425093613`*^9}, {3.5528768891430283`*^9, 
   3.552876889323039*^9}, 3.552876970800699*^9, {3.5529249839848747`*^9, 
   3.5529249845799084`*^9}, {3.5529250878968177`*^9, 3.5529251165304556`*^9}, 
   3.5529257065772047`*^9, {3.5594919383985987`*^9, 3.5594919566766443`*^9}, {
   3.55950226366817*^9, 3.5595022774439583`*^9}, {3.656862370308152*^9, 
   3.6568623709712076`*^9}, {3.6568627167881002`*^9, 
   3.6568627180712175`*^9}, {3.6568627509751573`*^9, 3.656862752770314*^9}, {
   3.7111631721852612`*^9, 3.71116318405694*^9}, 3.711163224463251*^9, {
   3.711858944792965*^9, 3.711858958055724*^9}, {3.7118590751134195`*^9, 
   3.711859087933152*^9}, {3.7118593129800243`*^9, 3.711859458101325*^9}, {
   3.711859609895007*^9, 3.7118596111300774`*^9}, {3.7118596627810316`*^9, 
   3.7118596674662995`*^9}, {3.711903835159498*^9, 3.7119038564037137`*^9}, {
   3.7120957371373434`*^9, 3.7120957398184967`*^9}, {3.737167142749919*^9, 
   3.737167147016117*^9}, {3.7615023880680027`*^9, 3.7615024484920993`*^9}, {
   3.7615024965193877`*^9, 3.7615025013630657`*^9}, 3.7637747185240602`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"0eb2a91e-d390-4ca3-9d6d-e5f43f0f516b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]Gauge", "[", "Rep", "]"}], " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Epsilon]GaugeTerms", "[", 
      RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.761502451497777*^9, 3.7615024724456797`*^9}, {
  3.76150251277414*^9, 3.7615025360292892`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"f053bcb8-3de3-4f70-8d9b-eb18b4c5e875"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Z11Terms", "[", 
    RowBox[{"mu_", ",", "ro_"}], "]"}], "[", "cc_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{
       RowBox[{"CommuteGammastdown", "[", 
        RowBox[{"mu", ",", "ro"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"cc", ",", "dd"}], "]"}], "]"}], 
      RowBox[{
       RowBox[{"Rfield", "[", "dd", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], " ", "-", 
     RowBox[{"I", 
      FractionBox["1", "2"], 
      RowBox[{
       RowBox[{"\[Gamma]stdown", "[", "mu", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"cc", ",", "dd"}], "]"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"E\[Psi]", "[", "ro", "]"}], "[", "dd", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], " ", "+", " ", 
     RowBox[{"I", 
      FractionBox["3", "4"], " ", 
      RowBox[{
       RowBox[{"\[Gamma]stdown", "[", "ro", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"cc", ",", "dd"}], "]"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"E\[Psi]", "[", "mu", "]"}], "[", "dd", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7633155539062448`*^9, 3.763315598509003*^9}, {
  3.7633164038699293`*^9, 3.7633165673742695`*^9}, {3.763318368299883*^9, 
  3.763318376880912*^9}, {3.763318685682413*^9, 3.763318688705301*^9}, {
  3.763321284632147*^9, 3.763321298459592*^9}, {3.763774780238872*^9, 
  3.763774921449638*^9}, {3.7637750806764803`*^9, 3.763775133537993*^9}, {
  3.763779055328876*^9, 3.763779079307557*^9}, {3.763779121252548*^9, 
  3.763779195734024*^9}, {3.763779483066337*^9, 3.7637794899613934`*^9}, {
  3.763779802733055*^9, 3.7637798074121237`*^9}, {3.76377985245934*^9, 
  3.763779855432755*^9}, {3.768932986880342*^9, 3.76893298992276*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"39236194-cfeb-4850-b50e-c1b41cb5d7a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Z12Terms", "[", 
    RowBox[{"mu_", ",", "ro_", ",", "sg_"}], "]"}], "[", "cc_", "]"}], ":=", 
  " ", 
  RowBox[{
   RowBox[{"I", 
    FractionBox["1", "4"], 
    RowBox[{"\[Eta]", "[", 
     RowBox[{"mu", ",", "ro"}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"E\[Psi]", "[", "sg", "]"}], "[", "cc", "]"}], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], " ", "+", 
   RowBox[{"I", " ", 
    FractionBox["1", "32"], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"CommuteGammastdown", "[", 
         RowBox[{"ro", ",", "sg"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{
         RowBox[{"E\[Psi]", "[", "mu", "]"}], "[", "dd", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}], " ", "+", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Epsilon]downdowndownup", "[", 
        RowBox[{"mu", ",", "ro", ",", "sg", ",", "kp"}], "]"}], 
       RowBox[{"\[Gamma]5", "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{
         RowBox[{"E\[Psi]", "[", "kp", "]"}], "[", "dd", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.763316620598942*^9, 3.7633168221517887`*^9}, {
   3.763317396866003*^9, 3.763317416295575*^9}, {3.7633183798510094`*^9, 
   3.763318412737122*^9}, {3.763321302765909*^9, 3.7633213128768673`*^9}, 
   3.763774928029859*^9, {3.763775192077272*^9, 3.76377545455599*^9}, {
   3.763779245320201*^9, 3.763779367729004*^9}, {3.763779411391129*^9, 
   3.76377942639727*^9}, {3.763779493395568*^9, 3.763779500550479*^9}, {
   3.7637798591377583`*^9, 3.7637798638017273`*^9}, {3.76893299539189*^9, 
   3.7689330049293013`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"88d80328-a658-4b74-8d6f-2e58ff9b6b9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Z1Terms", "[", "mu_", "]"}], "[", 
   RowBox[{"aa_", ",", "bb_", ",", "cc_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{
       RowBox[{"\[Gamma]down", "[", "ro", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
      RowBox[{
       RowBox[{"Z11Terms", "[", 
        RowBox[{"mu", ",", "ro"}], "]"}], "[", "cc", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ro", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "+", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{
       RowBox[{"CommuteGammadown", "[", 
        RowBox[{"ro", ",", "sg"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
      RowBox[{
       RowBox[{"Z12Terms", "[", 
        RowBox[{"mu", ",", "ro", ",", "sg"}], "]"}], "[", "cc", "]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"ro", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"sg", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763306564357188*^9, 3.763306609672901*^9}, {
  3.763315488516348*^9, 3.763315549404998*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"ce117ec6-fb95-42ed-935a-5c7abef49a6c"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Z1", "[", "Rep", "]"}], "[", "mu", "]"}], " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Z1Terms", "[", "mu", "]"}], "[", 
       RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7633064687159224`*^9, {3.763306515160906*^9, 3.7633065615446014`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"a574800f-6268-417e-82f7-b8ca0c74e050"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosureResult", "[", "2", "]"}], "=", " ", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AlgebraDD", "[", 
         RowBox[{
          RowBox[{"Da", "[", "aa", "]"}], ",", 
          RowBox[{"Da", "[", "bb", "]"}]}], "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "cc", "]"}], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "==", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Closure", "[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "cc", "]"}], "[", 
           RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "-", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Epsilon]Gauge", "[", "Rep", "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "-", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Z1", "[", "Rep", "]"}], "[", "mu", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ")"}]}], ",", 
    
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "_", "]"}], "[", "_", "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7633213297567873`*^9, 3.763321329888321*^9}, {
  3.7633213858087177`*^9, 3.7633213870035195`*^9}, {3.7637766218700314`*^9, 
  3.763776624896081*^9}, {3.7637794538653603`*^9, 3.763779458202568*^9}, {
  3.7637795298785686`*^9, 3.763779576649556*^9}, {3.763779837032604*^9, 
  3.763779877026024*^9}, {3.763817714139239*^9, 3.763817718186108*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"c7ec4e2a-c711-43d2-9434-06d30523d0b0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7637798837534933`*^9, 3.763779910732687*^9}, 
   3.7637805294515133`*^9, 3.7638176523475447`*^9, 3.763817719325945*^9, 
   3.76385036342163*^9, 3.763851941520217*^9, 3.763852927648966*^9, 
   3.7649514484590435`*^9, 3.765636020546358*^9, 3.7657286860669003`*^9, 
   3.7658406286438527`*^9, 3.7689330133475475`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"bbfff744-cab8-45f5-a7d0-6952d51e16ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Check against SSTPRS result found in adnkOnHolor.v5\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
frLeUirxWdDbrf480drkot6cTV/O6s15QmVvbIUkg+pGxcg2+YDTa+Iu4UIg
5nkayTBVWXhZ0eIwpz/94acxnbJfM6KSd1+/53qZ8npFK4f0xoqvJSYXY0UO
Y81jN2kJm6kjhqEZ/WY+UyI6Dyvy3nNzl9G9jYX9Dl1PLyGBro7OzrdrGq/b
fTT9/5IN+4vHKikUhwEAAMgb0cMtVi3/YgnJElmm4wws+MwkO44gx2WmZ/Rx
lfAfDm1rtczkXiMXjvC8te+t+uNlPBp83kZLVfBAjzarYhe4djymlqONuu8D
TJ/LWqrRX2y3+hNGnnr5d2vRpu23+ZJdI/qTLMayDPg3NXe/IZV9PB3dDuz4
H/U3nv+CIVKW9Mebfs9Prhxwz68ljD/a3ft4r/3P6DbXd79Tm3BDJ+dOEC5d
XfWJ4TxdbU5zPrjld9xoru4yuakL8yGf9Wpz/bHkl5JZtXZX7ZfLUjQkHmzp
UR/uKVWrHcmbmq0581kUqYt2C8Ud8kmT1vDoF+8/eyUo2jAylbKpyVUbI1wV
cjc4e6+7ukZ29/uoY4z98ajv7fM2cfSoYaGfjFDtTTPlDIhYvdPoNu7Sj2ub
G2SmH9eIt4aFfWN9zfXHk+tLUC+9TNI8YI3GZ4hNSlnjrenAvuLloN4cTV+E
B/XmNqFyMrYCklF1qba8LOMw3F4TZ5NVGEQ8TyPppiorLytaAguVvKWy/kz6
P2Q/rLIW3XRyLEGsckhjrHhcYnJai/0Tt9pqzhkmfdH2RGH/hKZZ0vKBK2oM
N70Wo20hOeck9xUZW7KdP29bwrBN96c9XZcU8rOtrZ1X5G9LG4bG/UkxYSbD
DsVhAAAA8gaHOMx+uZUMF8MzB2GwlSltEypV2g98M6ocWVJvvoM/CC8/+2rs
yyfzjJGPvI02WsEjsbU32co2TR4ve6lSPm1CW+2tebMi8fIvvoi/33OTJuwT
O8lKrN7PUJYBC/xgaJGizR/GyubHsoCEaSkey8U6GOe2z6JOzuZdtnWhSIXG
meUpMvEi8tHphuK1U1OHoBdty0m7g921qZEGtKbPvnjwAqjiltLByQNRs1Kt
aJ7zMZ1ri073wz5bbw2C0vjM0WQb6qPCi1Mf6QwTL8gP3Qutr6yH6N54btoY
4aaQuwHXBy2Vlc0GV2zehXxWuYRVAlshYKWf9GzO3e+trmAxs8Sr3ky6HcHW
nmgbKhKvslI3QGPbZwrqpSde8yRj4wm38LJWb06mL0qO6s1lQonN2LKGheqS
lSXYVl3j9JqyMFmFQbzzNMI4Vdl6WVRxmKpu6/yBN7P3s+nEEZobhSKVA+NC
zO8Sk62xIi8BlTVpp1bif06uL+WNerJyy47H1GmkOYLMdUXGNp03Oy0p+TvE
FK6TdFjmdg7+ha1hBwAAAHiEQxwmVm6FaRmKkCkT34/21pej1T3GqUWGIMXu
quOaFKloMXniciipJHaGQhmbP+obyf7Tkj66qxB5HS1tBQ9ys5ymrh17qVLO
EnJC69xfu1/aL2kPfGAsMGfTKQ1P/DSZtPRtDujLMmCL9j7cSWgzzu6fGWE7
cw96auplxn+vCXFESwlp3yPCAlM3332YfFi8O2OsK0PaLFlmSGw5NQ03XRkq
0WUL9rulrSLRRyJ/TBZ8RltM3ngnh9yPJL4Ulqq1+Zu5owypVTpSymyE/xhX
v4ky1SAKTKiIYdyZmvmX/urth3MsYpg5aWOEk0JSR4do80ezof2fbs496Kup
6TROvxJDygAr/aSBmFb9I/qhxiOZN92iVW8G3Y7uwZM6ysVvn/d/RvfSyThM
0ulqdurNxfQd/HNu6s1+QonP2LKDpepioV8+bStLWsEp9rZC8ZtJjq8pC5NV
GEQ7TyNMU5W1l0WbsETGYWgCZeKUA9NCzP8Sk4WxokoFltHcVKKikURu0t6m
29h59xlNBZZcV+SgWy+nSw6kInJxCWmsDTsAAADAJywjBuGg/6mpnezAjMqs
yZuRcHB5fvZ7++hQey2K1spuP/KuM0dLiJsXFSm9ocm+JOhZ8xzdSQt1KEDA
7m4yj6OlL1NGBXn4iMMQTu3vX2nfrpSc0T2aXQntRTYmBy5SDurOutdh0mqM
jt9D9E4DbZuDWFmGhEMQbNNtaERRSe+jZbG4tlGvmzpcI4Rg+KsjOVE2Es1g
z/YQGVuwnFVNbuQ+VFqIFJfUlF3qhniSA0z1iKw4ZX5+8DXYqxaRXh6nIYS4
VuenH2jbjlc2D455aUvtUck2CFpZWYFWtypumx88fOxeyFgAMwdtjHBRyIBb
fwpFqnvtIr6lwUo/U9h5brmgsf/5jNjIZNZbsao3vW6TFxZQJCnGGN0+J3RW
pX3p0eP45I/NRr3Za1riF8hevdlPKFEaWzZwUF3y3qWkSW3fFxdZheOTd7sN
P8Tt+ji9pixNVkEQ6zyNMExV1l4WfcISlb1Jk1cmSjnQG6v8LDFcjVU0eYzO
V6SCXWVy28t526UBphPGnFZkbN7SeZMuOZAyxVWKaJNr9oYdAAAA4JUMEYNN
j7GFRQlWSX1rh1z9wb1H38+liWmQRLP9k+rAHBwN0O4pX8/eu9wgqWkbuNL5
fppb6fyPNlrBg3a0aWrIc4nDkOysz31vM91SKa6q5M3Spt5bxjt6ncH08Ed/
mmRsDlfvqR+KrfngbtD7UKe4rNLd1hv+5qTf5FInqo00XRozgzv8l98y/5qn
Y8gtl+5Yqn8VLSqSJH9qP0JXHIalamGbfteYQfmXpiqiVDJa1dyp1FsmvOuM
mxSq0gLuaPmDK3/652cmH+hk1eWVzTdYBBOy0sYIF4WkvrvYD9rY6GcSm3OW
d/vtixjlY2fesIhTvRl0O5rBlZTeQG2faYvD0M4CujgJV/XmXhwmjuzUm/2E
EqexzQhX1d0LEe9MpVAOakZu6W+/pzXcn/Cu0lQA41YcJjuTlW/EOU8jTFOV
tZdFm7AUC4glBWcOfl9UcmAwVvlbYjgZK2oYCfeR9z+HPIhBmofuXD9Pk1oW
T5Yrcqw4TOq/UJZ8Pw7D3rADAAAAvMI5YpAj0aJwSfdz9+bMp1Cm4jBxhF16
PbsuDTxBl0gf81KSzg7iyV6qIa/pKqveVZyu3lP+cJE2H9z8QVdTnpUzsOJQ
NMU8Dd4hN5U1KVnWlN+VtIvZe24+VZHkjGWpWiyhSbbZDThv1Bw8EQtvbDBn
tlBw0MYIF4Wktgl0fn5RQxQ2vNRvJ/xetptZcao3g25Hd9BViQ9NrK1KQXuv
IRpjfCeliSpnsikOQwMX9WY/oYrS2Galuhk/NIviMLmarLwhxnkaYZiq7L0s
2hvWVLyU9t6ZCOVAb6xEssRQ3SIYhkHlvqJJdVrSwmlFxtVgpDW5oi/1L9Qt
pP25xtqwAwAAAPxS6DgMlQ955ETC6hCfqMxQWIwEW/hvg/1lQcYZhVxGk0ZL
5bvS3RHeJ2up4r7o5dvs9hGUr5Wcjptw9T4wMXDp4dL+1kDsJSKZIG/6cNhe
xdiYVJWzKiaZ1aCmNEcrE+4ZUVAZ3YmNJhP2I5tT2s77+H9kqVochpecbJMY
+Xk1OXA9w1khB22McFJI6ociqcfLG+F56yVttComh82s+NSbSbejG4fEyucJ
2+d1p7af+A/q6yfMguhtHbqOrlzhYvrSfQwX9WY/oYrR2Gapuunh+Jp4MVl5
RHzzNMI0Vdl7WVQcJnFGU+X4pNcc9N2lRSYHBmMlkiUm7TDozGmGj+O0Im/N
mXt6aLLysLDvvqws3hQzG/ZoQlHMsAMAAAD8Uug4DLUnTfQQQh4z0bGISlQO
ug39DAemO4tjd/5e4LWAWOWPxJ3+UG0vKhq0T9KVW8xaqrj/1M/Sc6AOrRIl
ia27Da1o9IfxES3Sd6LL0cWCz21a3UO21Y+Fgax8W7XfPpglux5jXZoqzTmx
u2q/coTWU6W8l4QdaNBr7pJE83uxbbexkzpnzE61WBHtxJS4A0pwznGR9l8Y
W0z/IA7aGOGmkGT5Arp6qrvBuYfawS9FXDWGiZDPOtC/3yGLy2ZWZOrNrNvR
rVy8u46FvPdkktj2efupofMzMpWLPGCN31PjO/3uKp5aD3MyfcxwUG9OE6ro
jG32qpsWTq+JJ5OVT0Q2TyNppiprL4uKlcXfESM7CqHJzX0SPlxEcmA2ViJZ
YhiHsRfyPVI3lHOLw3BakXFXRF5Xq01pOU2Y4mqJ7LPZ4L7QmA075ckcGHYA
AACAVwoeh6EqwJdFb15g4bUZ6/Dg0JVmlFwFsFXHwGUb/RK5+dNH73+T81kq
VzbnLD3Sg9H+aJI1NGvHGarTx8hSqrhTdPsyy6oC0TokcXdYsMDcQ716qK8J
Jc+8sEV7/7B9Odb+mGhKWNtxz3NwlhIO+Kb/ru0bYaiEKSp2/LY+aULjg4xs
zZvP5Os4jDgxrOux0XaNIJtWl8UuX4RfzVpvki+F9IqxJcfAUKwiX1aqxQra
TkwRbPlRr6ScdM7xrWL/MLOnTf06B22McFVIUkrS7nve/V7xWDjom75/o0/7
T28w9616gSGudfRdijNc3DazYlLvdLpNmZGjsQsLO2uzY8PqgStNFaS7vrvq
GLkc/UOyS4j0zP4scJu6qvkq9MHR9DF9Chf15jahisrY5qi6aT6Y02vixWTl
GzHN00jaqcrey9p5bumoO5jRbpOsulXroGvAd4Bo5JBxIRZ+iSF7Z0vaDO71
2DD2Qiseh2lIqX80M3GrESVvA+Fv4aIhU6ILxxU5MDHQd/cf2is3p/6Mvc2d
de//d6erqUU9liQB1oYdAAAA4BXsV3NLOYIcaTTOFO6ULrzoNA10y1U3VJf6
dGPu5a1I+MWEoVcmV6nVH03Q+urY6rThxv25XAsLZAP22mu71dut0GgU3b06
i9OX0fug7qGk3LfNyKbHqGKZuBu96tLUf0ff39Wl0OiGlMpbVvdSGPd17YYe
mfyacvBuQjNuwhmzGfpxsY/oRjSKC3K10Tr1G3OhV5FBHOI0nDZ7WWvpS7v8
DZk1H7fDN38znzvWa1tkrpHrd46quntx/e7te594KfhPJj7skfVeV183TLyI
a+7LWbXYgfvJl6qbdZPJW1FyYHLlkOrqwP2ZYIZncdDGSDYKiTt7Dw3KC3LV
ezrdEP791caxqbk1MdftZQRXzj6V1Rd3rMl1MysW9c6o21jYP2VSXZSrNKpe
hc76dDmM/+RbQ89f5NcH1IZv46KIZJXj3gsKzXVF92VcuRfSF3lmDXdNo/+m
XNSb64QqHmObu+oywPE18WKy8o9Y5mkk81Rl7WVhwZ9tusvdiuu4ovbq7jsX
NjKPVhRyyGisRLLE7AbnvjZSwxhRybuVOvPXz/xkzAV3AMaGO7quXFMM3/dk
jNByMllE5m2X+fle+NWs7QNlV7dc3tXepdSZbE56CbA37AAAAACPEEcbEqIj
9BXbouBdCZjY8dsN709yy4MVjuAvZNNstNHg5naHemFs0MKuRSBtm4NDDnFk
c+Lc3Rl2B8q7bv3xNg4Zv2zZDc789fQJXq5XiBz22hgpTYWMEV6yay9Z5xOc
W+6bWRGod1HoNl+axkm9Dyv8qC4dh9YgiGCeRsQwVYWWg/ASKDicTNa2z9Kv
TW2WDQAAAIgNbGna0CFBELT+8uiT34U/cipisPDyU6v2HQmC5rnbJnX1PrWx
7OEGC/u/Huh4b5yNYNcc6ksMF9wKM4DSojQVkgTft56sbTrbnsjb9ZUoglaR
Pz931fYfFpoorHoXi26XsKbxDm+qm8ohfk2wDHEfBs9yEIkERAz2wna+X7ii
1gAAAAAntpbdX5o0F5qrjhAOWPuwXXS1BEVOwG2SN+HSQyT17VcNY0RWZx6f
Rl29pysFedghc2Xf/S/PthDhwu3Ze4OmKfD9UildhWSAapvFOalAOPUuFt0G
Tcs3WapuIof8NcEyRCGQHEQkAbESa8sIAAAAAAC/JPRBBgChAYVMhpfNLJAC
aFre4UN14TUBgIDseT9tP3RXAgEAAABADGD+L3qkb/Q8+BWSlgAxAAqZRLRS
96HNBxAM0LR8w4vqwmsCAOEIL9muD0y+EnoYAAAAAAAAAFAYthdsg+3t75BX
FImevZX1b+dQZAMACgaoLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
gIgJ+6ctuu4GCYKc1Ls3hB4NAAAAAAAAcBhZtnWhCFp1+prpm/ngrtCjAQAA
AAAhwAJz9tuy6iMIDlor0z30wpoIAAAAAAAA5IPwotOkbKpECc+zskV5b3o5
jAk9JgAAAAAoIOE/xtVvkguhtFn9d/fyltADAgAAAAAAAA45WPA3x52easIH
RSWyz2bhEBAAAAAoEbA/JwbIIAz6psr2PAhnEQAAAAAAAECB2PJPfdguQSEU
AwAAAJQM4SW7UkpkwkhOm707Qo8GAAAAAAAAKDHCyw51NeGOljfqf9wUejQA
AAAAkF+2n+pry4h1r/GuZwdSYQAAAAAAAICCg/msHeTBYNll+yqkxAAAAACH
mT2v6QS55tUZZ2DNAwAAAAAAAIRgd9V+mTwarNe5gkIPBgAAAADySNilqyTr
1LdbF4QeC1C8BDwPhtobTrYrP37s2xB1WhX2ymW61tXe3t5aX3l02Lkp6sGW
NsWjVCUPtjZtUna3t59trZce1UyVxIWCTafunWv3Pa/jNHPLP/VR15nPvHvC
jUoUwMxNz7pT16O8PxNXiw8L+78zdl0weUMCDit/cLIP4JQCAAAAxQTR7ahT
61zP5k9hyQP4Adt0GxpRBG00uEUd3MDCwVeL08YWfKinLT4xjxQoGqUCwsEV
37TxNIpUnrbMl8SrCjgURxAEPam0TPtDu+Hg3ISxpxo93mF5DmXWYOamZcWh
qEKQ8gbl31z+TSz8en7ibld1uaTDMndo74ZzsA/glAIAAADFARZa8Xx9p6sO
RaoUjpUsPgCWPIA3oje7a5WOJXF7k9imc/goUlarf7ot9FCADBSNUgHrTk09
gjTp3aVxm4CKwyRQ3qD+2h8GPSWBmcsIFYdJAG0YGvdvCT2wvMLWPoBTCgAA
AIgd7D+2q+fa28/JNR/q5W8gEIcBhGd31XFNiqCS3kfLova8g259E4LUa7JK
IQMKS7EoVclDlXwvnbt+AYfi2Jvtna31lSiCVjVfHB59/FuwNL46O2DmMrHi
UJxoau9orZcgyJGq5gua0W/mD32bZtb2gU+nNLw4ZThXq5oI5PpBAFB4Ql7T
2Ual1XvojQMAFDf4VG2FOAwgCjanNEfxXck5i0/EmSbYvOV0JVImty2FhR4K
wIKiUKqSB/NZTqNIWbetVLIfAg5Fk6nkS8GkBWYuPSsORddhLQXDBHv7wJtT
SlzYf/NI219nYBsLFCmEDjdJZZ/Ngg4DgHiBOExJsRdaXw2KN/V9Y9b4NopU
tJg8oi2SgC3ZusugOEwcWGj9VVDEMakiUKqSJ7xkk5eVTnGYiEjiMLAcFCMl
GIfhYB/4cUqx1zN3z5ZJr9gWD/dtL+CQgwVdhuajcOMVAESM4HEYotT/3cG/
ebYLaCW2Z+8NmqbEcp+aQQIx4SK8Rbqw7dm7J9B4ZwYLr3sdo8MXm2ur2wzO
NeFj5tSxF1Jz00Wbfuy3th/ciU9pTJmX17oXWnhi1vR1K4ZGVFcH7j97MTEo
FXtxmIJpVCS6V0o4s95Z9z4e1Vxorq5r00+tiWDxF59SZYcQpjKSHwlgGwtP
7mnkFxSaYZVi+L7ntwlVneiLw/Aqf65xGFgOUimamRvhVXlEFocRmX3gwykN
L09oG9CaPvuiCJYvAMgFbMdrakElbaZZ0ZgMAADiETYOgzsnXw90vFfwEnNC
PZfLSAjhVsnNky6CHz3+3Lu5bs2Zz6JInWryFfnkjYVJk9bw6BfvP3slKNow
MiUCxztDecaQ30OKw/W9WV6e4njz/1q3/I4bzdVdJvcrMt8j5LNeba4/Ju7i
MIXUqEhk77n5VAUiHZwMEFtKLOSb/EhneDTjtV2RIOUN2idiiMOITKmyQ8Bh
8P3o8B8ObWu1zOReI9McwvPWvrfqj4u8OAzfQiDiMB9OPXtoUPYpNCMjqt5u
lenxfIDx+8NykPqvxTFzeR/JikPRaZz6wWZ4V64Y0o2o5N0DJiGLC4nLPuQe
h8GWHvVJ0bIOa56iMFjohcv++R21XNbeLpOrb5tszrk1ESeUHipKUvgBt/4U
irYZZ8V8zAEAJYuQcRhs7Ym28YzBvS6EB7EbnPnr6RMCe5vpJEAIN9W3zOVh
L2zdR6OFTcKLU/h+eeIFuQDthdZX1kMiKVXArjwjo3B4fK27a1MjyYdiVJeT
WNhBhBRUo2K3tMhr+8SB70fajycobxwLrb9cD4llVy0epcoSQU1lhE8JYCtT
2iZUqrQflFfaCzj6jyCoVMT1MPmXP25JpG90m35ci6aL7wbdHzaXvake/4N+
UwDLQXHO3Aj/yrPiULxR3f1ZNEwhiqsHIrIPucZhsOVJdQOCnNS5XjM/45XH
btLITxNFtivrW7v69ZYJ7zqby3O7QY+lr13xyVdPf1/Dl0csHFxwf/WxvKFB
pv82/69v3Tl8w74qgviqMAgr/IiA8sdWx5VSFG0xeQ9ta3sAEB+hX6zKFkm1
/G/e9J6bcHEYbNHe1yDo1e/N38znjvU9EqwyZHoJ8O54ByZUhCm+MzXzL/3V
2w/nmM9eBST8x/jAW5KKTOUZ0wmHn9dKu3LFhR1y+vB8UWCNwj3kyUEpUtFi
nJh59MFV3Zdz4iwHJxqlyhLhTWWEJwlQ2+qkih9U8Yej3bYX4pxVeZF/2O96
8jwhhwFbcihrEUmfzU/3HFgOinHmRvKhPFt+178Te6BQ06qqx7Yg3EsUi33I
LQ5DXeJA0iTDYMFnpo42+SfjnhV8Lx8O+mcdn/TVowgiOaOLRjKZP3zu/vme
0ZSiqVh4+RtNgzTvkbTdGaPsU6FrUgmF0MKPCCv/1y7dScbEQgAA+Gd31X65
jFiMjsntL9P+plBxmPCSXSlluvddMDZ/0NXUCXQLOJMEeHa8sW23oRZB0MrK
CrS6VXHb/ODhY/eCqIo04h6OuftUh+nJ1J1M5RnTC4eH17rpNb2TMoZo2OGU
+bkofZkCa1Qk1sK7rLKyHK1qU+hHH9i+cS8ERJXlKyalyg5xmMoIHxLY8Zha
KhD0HZM3/lrNq0lVHYKeNc8Jfn+EloLJf9tnOceoorAcFN/MjRRMeahCOgKf
d4vDPuR2OEjGQvcv69GM8Lnl3JmUpLWtRdsVKf5MlDmfLUJesrswaKdvs4ht
um7WIJLTZm/+gu3Y/Oedoq5rl0+EFn5EaPnvzZlPCW4iAKCEwHbmHvRUH29S
Wr0Z7gYIE4fBAlPamuMiOADdXbVfOVI9NFnwvOXMEuDZ8aaqAeAv2h9c+dM/
PzP5QCerLq9svuEQ/vo8AXHMJDspMz0LYtEzKcbyjJGMwsn5tVLNqZMLA1Jh
B76qie6uuR587nrF1xQouEbFisMc6XesBlb8L+ZncZ06V41Km7XjIinOLy6l
ygrRmMpI7hKIll2tNbjjq5VuP9XXliX/MIdBFnpa8QZ1/4Ih3Q6Wg2KbuZFC
Kg91YZa6ZSYYorAPucRhsEVrRxnCXIhmy2fpOan/kaY2U7SQEYJIrznoL55Q
m/0jVW23Jpfp3hH2q7mlPJ9XnvG3oxmYXM3Ph4scwYUfEV7+UZ9WzLUNAaA0
ESQOQzqBIqnKuDmlOVpZ8AwHFhLg1/GmqgEkZHfvBpw3ahD0qGaK9Cuw8MaG
QAU9iEJ/6vjU0PTlGSMshJPjayX+HCUiDPHrcmJN2pwJunT1lToXT35zwTWK
toU3turUnohb68MbwS2BJrn4lCobxGQqIzlKANt0Dh9FkCMKR3ydB/Kcjsfi
MAWfVtzBlr8dbj5e3fNgLuFoMhqHQU7Q9VGC5aDIZm4kL8qD/Tk5/Lakuu/B
XGIwgIrDIK0C91ESgX3IIQ5DBSeTB3DA9lP9Gxesi7RJE7HJy9hce9NjbCEb
e7UYPbRFtjfc+pMsMtizZnVyQFOqxWEEF35EBPKn9nqirsMGACWJEHEYIn+1
XDSdf8kkhwKn/bORAL+ONxVYSDxU2vOaThw43q8mB64LcZq2F/I9UjdUSHtt
iwdJFJnKM2YWTm6vlXJrEzdECcVhNqe0nfd9OakMrxvGwmtU1G1OauFN2ZNY
HCYwMXDpoRAXkkWpVFkgLlMZyU0C1FblyAnTz3GzKr74A65RNzvpdzEcRljo
acWZ6H4z5eicEsW+QU4EloPimrmR/CgP9eJSQlLU2iSCjmPC24fs4zDRhAHG
zTg2byY285Une+89o+lOtWzrQokHo122ZZq/3l1z3mqW1MkM3zFUnA77rV3E
x/MWQ056/oyx6/McbWvRIrTwI6KQ/65bfxz/kknHiwAACEzh4zCUF9qoc4kk
KEuNp5DZeuwkwKfjTVUDSPLwE9webHW8/8JYwa/Q7wZnP5NJyiSyz5Lrp1EO
J1N5xszCye21UufFCXGYoNfcJYmKC5ensTPX0os8bhgLr1GR2C2tJAmvOBRV
sWNZfPekvWDNLViVDWJVKs6IzVRGcpQAuVtM3GeFPGbZ8ZjCBN2G/sTSEFlQ
8GmVxeeujl89NWT3bSRMDao2RXJxjBiwHBTTzI3kS3lwJbnaobb/npiqRFve
VhCEtw/ZX5b3W2Voupyi2CcjCHrRtpyS2LD/z1lan2goAGm3+rP460xg8593
GWdKMxuGBfkVfkQk8o9mzYnKowAAoPBxmIBL1yiukCxhndBjuulCXYxnJwE+
HW+qAmRyxwFs+VGvpJx0eza9pv7hqZXC+t2U142ijbemA6kL1Maskbk8Ixvh
5PRayabVZbE9UfjVrPWmeqivCSW9RNwZHhiib2vCAR43jIXXqNjpYXJFgvCy
XSGhXNkdj+n8rYJ3jBWzUnFFfKYykpsEyKa0ZdFSgVh4bcY6PDh0pRklFQZb
dQxctvlztUEFn1bZgGvp33UffTMfjA0T2/DZrzdImVuuwHJQTDM3kj/lwYLP
Ptd9OjH/OqYnVAZRTZvuG1FU5RLaPmQbh8E2JgfK8b8rH5jcoH8G5v+iR0JE
atBGgzs14Wc/DnNc72Zc9PZC/h8fmnQqlUaHo9ff1n085qZWUOpqTJ5CAUIX
JxEFQgk/Ihb5U2VwklPOAADgkd2g9193cfOiUfaqR52sCu5Rh9rZ9QzdWbB0
kAvPSb17g/UYZ4x1ZUibJVOHxZ117+NRjbytXlpZf1quufdkgW51xFbd//3d
Qo42hbJOdUZPYbaMLCWQzrfkKpwdv+1SdbMupUbZlt85qpIrh1RXB+7P0KTa
coPrqDY8pvYq5sqQ2PLETVlDJW3hOzaOd66vlRROd6/qhqq3730rsV5v+Sc+
7JH1XldfN2ToUMkG/jaMPGhUhPPrwxZsPY3Nw98mJ/qGF52mQbliQKUYvu95
nfPG4JApFRdEaCojOUuAUI+Bbjk+qy716cbcy1uR8IsJQ69MrlKrP5rgoUhs
wadVlvLHNwWuMcO7csWQbkQl7+jVmL4kpMEELAdFNHMj+VUeLPQCVx2lXKnR
vaeSd8k1pofuNFfISss+xNJayuq4pR9QJ5II0mJmvjyyG/T9YH/4rWeFbhgZ
7iVFsOCv9tt/qanpMU7MHTQmwwJzDz+4afeFMZ9VJiHiQKpJ1s50PPjkvafT
vT+i6OlSpTr/ScVJcE/GIKtp6P7bz4KWEyoceRZ+pEjkT6UrI2Vyu9AhIQA4
lBBHbDfv/bSGGxnsd0tbBXrKPMe4qr52GS+247TWxzItq5rO4v//3FXbf9j6
X/sl4jldByZXqwqNM92Cir2eNXVKkEQkXWZvkqOF7XhHLxjoytdz47VTU0ef
a5oP2EggwuxbFlo47CjwqFidDhf2tXKGvw1jjhoVAaUiEZtSidFURmBaJVAw
+cNykAaxzdyIaJSnBO1DtMxLSt+lDLy0y48h2W9R09fpxcL+cW2zFG0YGqcJ
Jb12GW7Zf3eoiHSc7HIVwssT+qufklVraJ3/7af6zrjiJFSQECmRUiH5Fn6k
eOQfq1dcsHA0AJQUmz8a+h/4qEjv3s+mE/ia0GX156/OXnjJrqSiMH12DvfI
yeTNijbL74x/EvUcJA3dI6NfOJyuf0/a//7JkKwaRdBowur+by45Bm8ydAnk
xNa8+QyC8NrSl5nMEjj4vZQhCSAcFhR+VKwc74K+Vu7wtmHMSaMioFQxRKZU
ojSVEZhWBxRS/rAcpEFkMzciEuUpUfuwuzY5VE24plXd1nm2diB6ZSPb4i77
h5I0bbup/l/lSFm76Rd6mex5P1cpzteSY86iRAC26hh81x4t3Ezn/O95P5Ul
ZAdt+ceHGojsnbzuEcRA3oUfKSb5x8rglET8DQAKzM6idWA4VhsN81lOo+ku
uuZM9Co3/oyGgW8YKpDTQtkBaZdtkemTA9O3TtRcME2/TDRPO2tuk0zyhmry
Vewn2I73s7/ofuDjBGd32XYRzabR4f5YFidu9smo/KIMPQsySmD/F1N9S0GE
kxEhRsXK8c75teYXvjaMuWhUBJTqgIIoFeb/5qb8XHv72dZ6KX1nnNhoRGkq
IzCtYhRW/rAcpKEwywGfq3wBpFTC9oGsM0NscyWdpll2d2Oj1V3KW8y/cnea
sU3XzRr8r9EmbWpVpZ3nlo7jCFJWk0bCq3Y5mR+BoN2xjXnA82CoveFku/Lj
x770fjxRzcngppSfKsGd5Pzj2qjWJlVOxl5Nqt9AKrTOLZ72CNgrl+laF6vZ
UUCyFD4n+JI/+zeeyu6aa1TZhRunt+srG5irZO+u2i+T3/XQx98AoOBg85bO
mzHTF20Tn9bJz+VZgTm7ro0IwkibteMcS8NRJWWYXaYdj+mtTobANXHMUUt1
DSZ47bqpsS7y0x+AbUYBI1g4+GrRqW9EYn2NGckkgYQxJf6aQMLJgCCjYle1
MufXmlf42jDmoFERUKo4CqRU4eCKz6k/lakql0hNZQSmVfTfCyt/WA7SUKCZ
y98qXwAplbh9CP8xrn6TDMV0GKYWM1uD6GY8q/BR6JmxuQJBjndYnqcIccdv
6yPuhTG1+qKINrJBEls0YptuQyPKUBZ4n90Zo+zT2F+tOzX1+MOkqom4jjgr
jv73UvIfsC2ntiJz/SL2kLNj2tiCD/i0pfBdEunIRfis4VP+7N44Lbhbsfi9
saUi/ZeNFZNmbAoGAECWYKvPf46demw/1deWpfST5YWtZfeYTlaLr25o9V/0
2ZQqJZxkZv8E23Z/eEb/E6OBwOYtZwcpg4Ytjl3oH1/lydpT1ik37z28ZMNX
8opT5udpbXl6CSSNKf7XBBNOWgQaFQfHO8fXmj/42jBmrVERUKoECqZUVFd0
9Kx5Lk31CJGayghMK4KCyx+WgzQUbjngZZUvgJTAPhDXsrxjg82VuLt6rE1r
TVcEG8dvbUeyisNgq9O6FhQ5LjM9oyltvTNjbCQ2+elDE9i8mSzbkVKfJHrd
qVbpYA77hV96PLEqzdGQQpPeHad4W9O6i2Opfabw11THc/swqmt5Wa3+KXPU
o4DkKHyW8Ct/Nm+cic0pzVE0fVmkWBxGtNeKASBf7HpNJ1EkS9A2LqFLyhIy
1ihj/1iaz44WhC9v1Nh9weyuEmfwT8LLvz5/lWb13vZZlFrna9y0zZmvGdy8
WRI+PAcqEp5ogWnIPg4jlHDSItCoiiIOs/WTvu5IttOenPonTd7M8yynOAwo
1QEFUyoW/pJoTWUEphVBweUPy0EaCrcc8LLKF0BKJWwfEsDl8NSqO1eNZnKk
s4zDhHxWuQQ9qbT+TNtfbNdjrCM+Nv11p1iNX5pMht1VxzUpgkp6H7G4/h/9
nKQisXvez7poIgy7q/brV7Mqh8IM1X2V1RFwAfZEOQufK7zIn9Mbj4e6EpXh
HgTEYYDSJbzk/uqf1qwY++rZMoe7P68mVXX5ahBPtBRUNhHnC9Im5eeu9OcL
9LDeMzKw6/lrF25Ut58auj5n7gbFGR48ByoNKfPF2Fx2zRnIk3ByJC+jKoo4
DLbp9/zkYmTSLK8ql5u/Z/4Nl3eFxcjzqFERUCra38pJqVj5S6I1lRGYVuzg
Wf6wHKShYMsB76s8AwV4d4fWPsSDBeYdd7qqic1xJU2j9jiyicOElye0DWVv
qsf/YPjcWFlUpMXoSWPsY92EaS+7UUF7VlEC6nOSGjbhYxjUuQLJv4v9ab88
zHOxVqpTVZnclqaJ+sG48r0n4kP43OBJ/hzeeDzbPss5NMNlZ4jDAEDewZZs
3WW8hHaZHxH8eUz9FjGXJWd0nK8msa5lwQRuW3X/Xp0cuWBNzTTcC62vBrnV
q4mS+41mqjYyC2OeWzWP9KQTjnDkY1RQH+aAfGpUBJSK7rdyUipW/lKeTSVu
sELrr4LZ6R5MK1bwq6KwHKShUMsB/6s8EwV4d2kfgYVeZ2seRGIfsPDytLm3
kbxE33PH8RttvsoBnOvDkL0qajrvJpdBjocKx2VoT4Ot2nuJhIyTOtdrun/f
mDW+jSIVLSZPhgo+G5NE8+Vk55++OEk+CndTuw/RFIfhRfhc4E3+rN94wkdS
l50zbP1icZj0sSkAALJmZ9Hagy8mZR3WaCdpLDDvecGQwLcbnP9mVHNVqRnR
jajk3eq7ds8ayyBGtB8ibnPSnAXQwrq3C+MHuHQXDZ9cvm5P7rGIbc/ePYHG
x6Kx8LrXMTp8sbm2us3gTG4mGE+GCv9YyPfEPCzvVmhG1IqBf3gCq97HXz72
xtfhp66NV54e/e4n6y2lcmhE1dutpk0ZyrG7TaY/oReOoORjVLw0yAiv4vqh
kXfJVcMaxQW59n5WKV5ZI5J+SRk/HpQqnvRKtRdaeGLW9HUrcAtwdeD+TCDg
fTz2rTf+FmfUX+oY/eF7q+5dpWZYJb+ovjedcsCXP1MZiXp6CT7bzrr38ajm
QnN1XZt+ai3dOgDTiuUH8KqisByk/8yclwNhVvk03yjf7y7NI7afGU+UJ2yo
qUl98VR1dbvemdISKIH0co56ZfIOuWpkSNHdp7W4uOR7syTWrRhBJbKPp9nY
n+gGtawuob8w8+f7rN01XTTNmLD/2Eb+OR/ddm+49SfJXa95nvErbnpN76AI
KlUyluiJ9j+tuelKm4UVvYaTVGyWtjgJtmjvv27zJ+3yyfQeaV/iz7GQ9+FN
7adTNKlESYvdsxcTg1LxFIfJSfhcRUGQs/zj/p3FG0+2Vy8eq6QZLzvHLmFB
vyQAyBNUWiByvNf+ZzQM47vfqaXNft/yj9+6avrxIPASfuU2nW9Rf822/xG2
7ja0Evc70XdMXg6R1VzPSojiVtUnhlO/1Nac+SyK1EW7MWIbC5MmreHRL95/
9kpQtGFkKl0cJs3pFb6gj2ubG2RRWeHr71hfc/3x5OWGujZeJmkesEY9N8LC
lzXemg4kP5etBLJzvOmFIyj5GBUr4aQ7lMSCz8zdb0gPnLQd/6P+xvNfpJZT
yxt8bRjzqVERUKok0ijVlt9xo7m6y+Sm6jKEfNarzfXHkqtJRLOOjzarxqLx
mR2PqeVoo+77QOL7y5upxN2x5+ZTFYh0cJIq1BnyTX6kMzya8dquSJDyBu2T
tHEYmFas/55HFYXlIP1n5jRzhVvl03yjfL875kfszZlPofs9X/Dt9sRHWuOj
X2ZsvdX0rZkTSCPn3eDsve7qGtnd76OxF+yPR31vn7fx17SHIjRraiPPCZs/
dLOsZLj3s+kEsUNlYTrIIE/LefqO2BuTA5ftq9H/E2sT3G71M33W0qM+fPtc
rXakuTPFrnZrNJKU+Cy64iRbizZtv82X/Dz6W0VMBZGYFrt89AfJjhyEz00U
UXKVf8IA0r9xJnuV8bJz7K5WQlttAAB4IxpEPbi8vO2zqGnT7bDlR33vfOrd
wZL+3tpxotfO2mXe/EFXQ9i5g/QbNpDFfis0ziyPSEmPi8bUU6fMlOUML07h
24ronam90PrKeij9NdjXTk0dgl60LScv2djaE21DhbTvUZw1pC6BxgI+FNS1
cYnc6jtIPtrzmk7Q3j5gKYHsHG9a4WQJFl5+9tXYl0/mAzmZbJ5HdfCZmYTD
/FoDPxhapHFOGnm8JUHTp7DyDW8bxjxqVASUKgkmpdpdmxppQGv67HG2kOqe
EAt3kESLw0i6rb6DiHfIa2qluVafJ1MZSyAnr1fgHt13H2k/nvCTD8FC6y/X
QxleDEwrdvCrosIvBxF+Jq/oZq6gq3zab5TfLS3jI6i0H+pLbfmnPtUavqWO
51iZB2YLGXB90FJZ2Wxwxa4IkUVuEeSIwpFSPiMXqCQHopqrcZb9fHlplx8j
vFn5fhSFHiz4zNRzmT4IQ5j3D9riMmqi116O6VxbdL8e9tl6axC0RTedvl0V
u9qt1NWqOqPnQPBb82ZFYnGSLf/E+z03k2P+EaZbRfQFkVgudgKTtfC5iCKO
3OSfSLo3ztZe0UB6GkjSIAEA4A0qHru/qGGBqZvvPqSLqhDrbDnNHWdiknJZ
E2OTmlMz+t0ZY10Z0mbJ8ghky6lpoMvWC0yopCjacmdq5l/6q7cfznFxFLHf
LW0VNKYJW3Ioa5MTfuIDPvs/o7s2TnpodAFqlhLIwvFmEk52bP6obywnXq+k
L00KZaFHRcFGOIyvddHeV5PopGE7cw96auplxn+nzQTgF/42jPnTqAgoVSIM
SoWtjisJ+2OKD27HhTv2f0ZbHIYypCl7ojyZysheYHJQilS0GCdmHn1wVffl
HKfmdzCtWMKvigq+HER4mrwim7kCr/JM5ENKbB9B9npATxunXI/0g7qHzzNU
VkmCyUKSuQdo80ezB4GczbkHfTU1ncbpV3x+T2q/jCCozMolDW/TYyTbFyfd
K0kiPG/trmtQfPSApnzsA4vpfUVrfeJltM3fzB1ltIkN4T/G1W+ibK724785
8JakIlPtVmxlStuEIie0zv3Awkv7Je1BDBwLzNl0SsMTuqR3+pbTtDrPerET
nOyEz0EUiX+Xi/xThsf0xlnbKzpWJ1U1CP+RTwAAYpCxCOoIBgv9/pXhrw4/
7WkMuRdAWw3u9URzsO7UNHK53YltObUVxNJ1TG5/yXqUZHZftiek2ILlrGpy
I+XH5CkzglZWVqDVrYrb5gcPH7sX2NbsJSL5qa4UtuM1teCGMHG5iQZ8EjrT
xa6NJ5RJp25i0iYKspMAd8ebQTjZEq1ch+R0z533UVGwEQ7Da910GxrRLNoC
8g5/G8a8aVQElCoJeqWiTmCTCutFwx2nzM8P3gp9MT3qMCv1bDofpjIS6y5a
VllZjla1KfSjD2zfuBcCbPUQphU7eFZRwZeDCD+TV2QzV+hVnoG8SInlI6g4
BlpRWVFe1arQmx/YSF+K7efSyzng1p9CkWoO6dbZQkbGEO49Q2OlM9Jc2aA2
7xl6Kp/UuzeS/sqhfbtSckb3aHYlRN0DXZ2ffqBtO17ZPDjmpc2rOYC86Xmq
w/Rk6k7m2q2E2x//rI3JgYtU3GBn3eswaTVGx+8M+Uy0LadpdZ71YicGshE+
e1Ekk4P84z4k3Rtnb69oP/pXc0t5pkbeAADkwm7Q+1CnuKzS3dYb/uakD8JE
YiVtEUTyjvaLmViJGKry2HnLHNdiL1yb/VHR5kaaVm4sHrhku/wWjQ2hisNU
KRz+4Mqf/vmZyQc6WXV5ZfMNhkhUwni2XLpjNJsg6uQ6KSpOBXxor40n3Rul
jDmt3WYnAc6ON5NwsgV7PXvvcoOkpm3gSuf7We9r+B5V9FMzCofptVIvK2O3
mgLA44YxTxoVAaVKhEGpooW5aC0AXXGYpGJ60Y1P6llnPkxlrDgMvkNcDaz4
X8zP4sbyXDUqbdaOsygOBtOKJXyrqODLQYSXySuymSv4Ks/wffIiJXaPIIvD
IEcU46vBV34/bh7+oZPVopVvax1sOjIwyJmyeyw7GudGVk4pAea3ytB02d27
bv3xDEEYhPbiG64LfteYQfmXpioi0oNWNXcq9ZYJ73ome0vcgZKdlJmeBbHo
BjxjtV5iyz/3vc10S6W4qpI3S5t6bxnv6HUG08Mf/Wmu57OviMJ+sRMJXIWf
VXGYOLKS//7DM7xx9vaKDqqjU5ZGCQAAXolm0BGnBtWy2/a59eCcTcVUeYyZ
LJc8orBMeVZl1VcciiaFYyX5xzSnzLsB542ag4MqLLyxke4ggGZ1owxvVeLj
EqsBU1AV3pLujUb3VgxFjNlIgLPjzSCc3Am79Pqs9zX5GVVm4TC8VmqRzWdj
d9bwuGHMk0ZFQKkSYVAqapeRdPadWAs3+jOaWwyxXL6kE67oJ/NtKmkvv2Or
Tu2JuBPA8EaQ9kZ9BKYVa/hWUfEsB5FcJq/IZq7gqzw9+Xx3GR5Bc+6PBaa0
NXGVMcKbQcYdJb2cqTsdhelonHUcJlaqN6dETf6gWj5JG/Z7Z7Cr1htHyGu6
yrI9MYeKKKwXuyIly+IwNHCQP/VkFm+ctb2iI9rRidu3AAAgb4RfusyX6/eT
LCUdplnOMdJslzwyszELa0CEc8+Y51NSXOhOmRO3PK8mB67Tn8UQf1tJl05J
XRZIPBxJCPisO7X9xH9Qy3fCteJolj5zL0IWEuDqeDMJJ2ewhf82cLh3lkie
RpVROEyvldowFrRwKBO8bhjzoVERUKpEmJSKKlGYWFggwZ3bnNJ23sf/gzRK
SQnzVMY+k3fNt6mkv/yeWKAmMDFw6SG9rw/TiiW8q6holoNILpNXbDNX8FWe
lny+u0yPoDv3T4hB7QUmdZeY0t4Y5EzFYQpTlSL7OEys4KEIqmfshXyP1A0V
0l7b4kHaBrtqvfvganz5NjvdoxaF5NtkCRVR9hcF5sUu+puxxa444SKKDJ/E
Xv4R1m+c2V5FE3hi9oqGrXnzGQTZ74MGAIDgbC27LVdPyy6crSWDMWhl86B1
9hUn9zX7FFCi0lfVfn9tlhDhXJri59EWJImWk7rtG93y4I/rvzBG19Rpd9V+
5Yj0mmM1tVIldTAUb/GwkPeeTBIL+Gw/NXR+Rh5hk65LfBSIKOZWlb5ZdmYJ
cHS8GYSTOzuLY3f+nu0xd75GlUE4aV4r6RvTJUhjwec2re5hLsVjuRFedv7t
M+dLvkTDu0ZFQKkSH8uoVJQjlOCaBr3mLkk03IEbKGMndcub2KcciYuBUB2F
KtK0iubVVEYYLr/He3e476e9YKX1o2FasYV/FRXLchDJZfKKbuYKvsrTDjeP
7y7TI2jP/eO33tiSo/+adZF2OjPLecdjaqmgq3G6G5x7qB38kseqMTnEYVJb
jgrCbnD2M5mkTCL7bDapgjp14Mgy7RD3gPtZBpSoRSHxgABbdxta0egPsU3n
zU4qRYpxsYv+5sFiV5RwEUV6OMif/RtntlfUGzmwVylEL5SdpG2hCwBAocFe
z5rOt6hsRKeM8Kr3ka5NQgVjmrRTK+xXoByWvB2/rU+aUDw/I0Q4l+6ogrYF
CdGbu1dSTlpOfI/QP0z7vYgGEHU9NvqeBmR7uKOxMlk7a7Njw+qBK00VpMXD
dysjl6N/iO3MWTqkZ6LJyeFXblNXdebSNJkkwM3xZhJOzmz+9NH736TvqshM
3kaVXjiZX2ttxz3PgasVDvim/67tG8lYNE/c8KtREVCqBNIpFdnHs+ydfQsw
a72pHuprQknPDd+5DAzF+stszll6pNErSFh47UeTrCFTYRYeTSXT5ffwsl0h
obw7fMd0/hb91hKmFVvyoKIiWQ4iuUxeEc5coVd5GvL57jI9gr4pDOa391aT
AsF2vKPnhxmCxhktpLT7nne/+RIWDvqm79/o0/7Ty6lfWyZyicNEsD/tvcdZ
9P/NH9SWHEUbb00HUsWyMWvMXK2XBNt03r7MslpXdIcedzcWC8w91JNLGHlD
DVu09w/bl6klg/1iV4RwE0W6D2Itf25vnLW9Soaq+0R//RkAgEJD7gUSfAMs
vPzTffVblRwvD+a05BHHSQ2nzV7WJvulXf6GjOagFnd1LlU36yaTbeOW3zmq
kiuHVFcH7s/Q9V7c/M187lhCHmASWNg/ZVJdlKs0ql6Fzvp0OYz/5FtDz1/k
1wfUhm/jdk9kheTeCwrNdUX3ZZ3FucCiJFcGCXBzvJmEkxvY6rThxn0upZsT
yc+oIumFw+K1rs3YDP3dctWIbkSjuCBXG61Tv2UsmlcE8KlREVCqODIqFWlt
untVN1S9fe9b3Uth/CcTH/bIeq+rrxsmXsS1v33ttd3q7VZoNIruXtxU+DJv
0XgzlcSVEltPY/Pwt8mZ7eFFp2lQrhhQKYbve2jDJjCt+JB/9mMQwXIQyXHy
inPmCrrK05A3KbF4BOb/oqe6dXgyKYGHEtElxZBKMfAPD33YJKOc8T3jQ4Py
glz1nk43hNs+tXFsam6N97q9OTmlsX40wvVf3vCY2quY43vY8sRNWUMlfXJX
PJseo4rl1bboFdqm/jv6/q4uhUY3pFTeIpYwLDBnN/TI5NeUg3enFuPeFOvF
rtjgLgom2Muf6xtnb68Sn2J8i0txIQAA8gmR6naMprFFNPsutacAI7kteWRo
98S5uzPsTkuJavVtTKXsubMbnPnr6RPpkooLQDoJcHK8eRYOxY7fbng/2SXj
Ql5GRcIoHFG8VgHhTaMioFQHjxRcqQQ1lRExSEBYhJa/GJaDSK6TtyRnbkQM
ypP3R4hCzhQ5OqXExStlLWPt5aJhYWzQkqGLcRTaimGlCY+iYC//QkBekEQh
GQYARAJZK5K+Nx8ZDa5iX6g/1yWPrBA+0PHeeObu0pHImkN9ycbTPWIuz80v
zCPh5HjzKRz+yN+o6IUjntcqIDxpVASUikIkSiWUqeT46EOLgPIngeUgDaKe
uRxHUoB3d6jtQ85OKe4GP+qTlkl6vhDdDMoLtBXDSpPDKorgrLENRduMs+Lr
Kg4AJQkZbEmsh79PwKEo53AQkPuSRy7i3xre/S/PdgHXvO3Ze4OmKXG4DYwS
iAkXyVXChwi/tX1fJEiK4y2u1yogoFFcKBqlEsJURkQlAWERSP4UMHlTKZqZ
GxFYefKKuOTMi1MaXnaoq0vkEgd9xbCS5HCKAtv57d7pMkmbaTafOXYAAHAB
W7T31dI1W9xddahqu60+1jf6+VjyAAaw9fkfXTF+9PiLOkuWJ0J+z75IXO75
9cO0XOYf0ChaQKkA8QOTNxWYuUAK/Dil2OuZu2fLpFdsi2KJL+WJaEWU05ai
7TTNG4dSFFjQZWiulKYr3AQAgABgwWcm2UnZ3Sn/fqE5bNPvNPX1mZP7pqUF
4jAAAAAAAACA4PDmlIb/GFc3SVNbCR8uiMrM0jd6HvxatC2OeOMQiqI0dBgA
ipXwqtdxT6fo6VIM6TSKbrnW9NC9zDFkCnEYAAAAAAAAQHD4dErDi1OGczWK
8TU+BgYAhWVn0So/obTy2xceAABRAXEYAAAAAAAAQHDAKQUAAABKBFjyAAAA
AAAAAMEBpxQAAAAoEWDJAwAAAAAAAAQHnFIAAACgRMDmzS3EklfeYv4VinED
AAAAAAAAggBxGAAAAKBU2JhUlRNrXlmHdRECMQAAAAAAAIAAbM2bzxAuKdKo
cwWEHgwAAAAA5JXXLt1JctU7oXWuQiQGAAAAAAAAKDSbP+obyaPBmpuuTXBI
AQAAgEMOFvheRy180gv3fnkNKx8AAAAAAABQOLB1t6EVJZzRBvXkMviiAAAA
QAmAhf1fqxvIUIzkjM7+axDWPwAAAAAAAKAAhF9M6M5ICDf0uMz0DLxQAAAA
oHTAgj+Pqd8iy6MdqZbpHjj/A+sgAAAAAAAAkDe2ll2fK5ukhPuJ1nWbIQgD
AAAAlCBby+4xnayWzAut17mCQo8HAAAAAAAAOIwEf9A3kxEYpLxe/tfH8wGI
wQAAAAAlzG7Q94N97FtvcFfokQAAAAAAAACHkeC0sbtHqb8/CREYAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAVYf+0RdfdIEGQk3r3htCjAQAA
AAAAAA4vy7YuFEGrTl8zfTMf3BV6NAAAAABQWLDAnP22rPoIgoPWynQPvbAa
AgAAAAAAAPkjvOg0KZsqUcL/rGxR3pteDmNCjwkAAAAACkL4j3H1m+QSKG1W
/929vCX0gAAAAAAAAICSAAv+5rjTU014oqhE9tksHAUCAAAAhx7sz4kBMgiD
vqmyPQ/CKQQAAAAAAABQULb8Ux+2S1AIxQAAAAAlQHjJrpQSmTCS02bvjtCj
AQAAAAAAAEqS8LJDXU04peWN+h83hR4NAAAAAOSL7af62jJixWu869mBVBgA
AAAAAABAIDCftYM8Hiy7bF+FlBgAAADgcLLnNZ0gV7s64wysdgAAAAAAAIBw
7K7aL5MHhPU6V1DowQAAAABAXgi7dJVkhfp264LQYwGKmoDnwVB7w8l25ceP
fRtizqzC1qZNyu729rOt9dKjmilIexYlRaNOQBTslct0rau9vb21vvLosHOz
FF7aulPXo7w/E1dUDQv7vzN2XTB5QwIOS2hg8qanRNWG08oLrikAAABQHBDd
jjq1zvVs/hQWO4A3sE23oRFF0EaDW9S7sHBwxTdtPI0ilact82IeaGlTLOoE
UGDh4KvFaWML/spOW3wl8cZWHIoqBClvUP7N5d/Ewq/nJ+52VZdLOixzpX7J
FyZvGkpWbTisvOCaAgAAAGIHC614vr7TVYciVQrHShYfAIsdwCfRa921SseS
uB3KdaemHkGa9G7IeRYxRaNOAAW26Rw+ipTV6p9uCz2UgkBtqBNAG4bG/VtC
D0wEwORlpJTVhu3KC64pAAAAIF6w/9iunmtvPyfXfKiXv4FAHAYQBburjmtS
BJX0PloWs/NNlaculdsTxUuRqBMQJejWNyFIvSar5MwiBN9Qn2hq72itlyDI
karmC5rRb+ah024UmLxMlLDasF55wTUFAAAAioGQ19QKcRhALGxOaY6iCHrO
4hPvkTjms5xGkbJuG5zUip1iUCcgCjZvOV2JlMltS2Ghh1IY8A111+Gu6ZET
MHnpKV21Yb/ygmsKAAAAFAOHLg6DhdZfBUvEjz+MbMwa30aRipb/v73z+2nj
2vr+/AFzw2UukJCQJV9EiiLEBRGqwgVRjpAgahVFaSrkVI0AJZGhUU1S1YCC
TZUYNbV1WqftsdJYyVNyTiye5zjnjVvhtJAj3FOc1lGwUieFHtLgJiT8sBwE
wTB+PTMG/GNmPPaMxwN8P1ctsWe2115777XXXnstR3Cl1E3hIfbcrS9Dcpit
gfrVqXSobKqknrtby3ZOcpj4Tt5QiwODlxPl1IZaWlDTDJHHyqtG0xQAAADI
pOR+GDrV/+Web4KvZTG+Gcst7QRtZT5056rpVGN17RHr6FzqS16PX+txjKri
VjWPENblS+wki4I98yJq+v2cscdhV/PmtfisqpTF6FPq1ZO710z6UwZTn9HQ
dyP427CxVvXJYaBRSVSnToWzzabKtaUnd52mjlZD70Xj2e4b958O92i3QHIY
GXshzw01Bm8GO3TwKuWHeX3ffqA8zS8amw15r5pOH6qubrb6XqT9EpWtvPDD
AAAA2AqU1g+TME6+6z7+sWwp5tYeOQ9VENqekcga/fSlqZEvLLbbD0LuDzRE
eZ35btrmQva3Fwh/M2j5VumdI36ae8HwziiSLJyhcSkcZMTh/9GpL8+yvWXv
09gfXvPhap0jMMccycYmXR1v7t+r8uQw0KgUVKVOhbPNpsrlsPdCY3WLI/CS
OW5fmnKdbdy/R/XJYeSVQ2JDfcI++pPb9qHe0Gu5aNS3djvu/Bblm1cweDPY
oYM3T7UplLUJ5yGS1BqHI8z/LT0Z/sJsv/3rA3d7NUE2mEfT/TAqW3ml+2Go
pad+z/XPu/S65madvutTh9s3Maee2CAAAADbglL6Yai5u+b6Y7bAvFwWBBvZ
zlwfpo+fvjB/OcxaBdTS/LP5JY7XrEYffHX0wMXRuZKluRMSAi3fbPNy2yMu
QyOvcOTrU+rFqLmB1HZ6NhNWrEW853YRG9apGoFGpaMadZLA9poqV+dGL9aR
NR2e6c33RLyGXcSGX0idyN0LiQ31G9WtXyd3monnR/22xt11Xd+FY1xvwODl
Y2cN3jzVpkDYS0C7W91PqfhyePSK2fYD+3zeGUJNK68003Q1GhzoaDb87dtf
fp9L/FIqFn0S+PZLfV2dzvqDrEIWz7yv74JndmdkYwYAgG3A0q+uziZNtf6b
kLDZVjo/DDXt6aiT9er3WmSkR0tUNNmHH9z+61nLvyZEFRFY/M357p6O26XJ
uSoshJ1oeNMHYUPdb2oqcmVoFBKOLH3KbgEyshOkWqeqBBqVgVrUSQLba6qk
Zoc6tSTZ5AitbD4oxS8k6eFFRP5eWA77/xNKkzw751S1uZ/AiUqDwctBnmpT
IC9HjLUEedQ+6r9t7bHceiQu3kYtK68E05Rambhxsu3qeOaUSMVmvjfVaeX2
d4lj9YFddyWkXhc1AACAVFZnPWfK6GVoj97zTPCTpfLDxJ57OrV8974LhC17
WlZZWU5WHTFYr950fx94EskdSrr4k6WmNu1wViFyCWHnGd5U9L6z9dBxx93R
z3NlaBQWjvQ+XQk6mioI8m1HKDX+n7VO33FOlDzWnRNoVBoqUqfC2WZT5WLI
8XZWXyT9Qoecj9S61ShGL3DAZkTJcFKtNwGDl4edNXg5EFKbwmArRJMVlRXl
VYcNVudN953AEzE5e9Wx8hZumlJTrlM9Hu6SbdSiv7+G0Bx1hhROHE1NXj+h
9sRZAAAANqBWJm62Ve9t6HSFOANINymNH4aKjJpr9socVMBmPNh1zjsbeRF+
Ojk+ctPybjWpbTQP5Tq/WJ31fLCrundE2ejl3ELYeYa3Q3dQ57gfpaiVkKNJ
IENjPKdwpPZpMkXkPlsgNbMia51m/LFwVuf8N6/7X8p22QQalYKq1KlgtttU
yRanzky2yfqF5Mp9LfOwihepFzhh72dxFu/G4MXg5UNAbQqCSQ5D7DIMzUZf
hsOJGeIfFt0+svIts/ePXC9QxcpbqGnKelp2VR25NDLD9UOpx86mcsWvTyZE
auoemVXwjQAAAJShJH6Y5QnnO6TcmU45yp5Ssz7zgZTcj7FX0WXuVy6OmnZX
KnsaK0IIO8jwprP8daUG/QpnaIyLEI6kPqUWfX27iYQh6k29jZ6eulA6Ub9l
f6XFL1P2P2jUBmpTp4LZdlMl/XWSdgGlbmTSkwZLRt5hFS9KL1B/jvS9panu
uDmRnm6X3VAThzkK4mDwYvAWoDaFwFEhmvEppaTJjS1Gl3jEqYKVt1DTdDFo
b2LKbzXZg5x5sF8FrAdFxJnLy+xItwnJYQAAYDtSCj8MHblaLnd9Unb5zih7
yv669c1FZLj7/Vs8lhxzIFv8+OFNxAhhpxjea0tTt7vqKrTt7unN4/hcGRpz
C0dKn7JZAXcdcDxMMSZTr6gn9K3/RIqZWhCybhihUUlUqE6Fsv2mSnbDeMCR
musgLTnM4qj5xI0pSTKW2w9TjF5g/VFZvgVWFNxFYTB4MXgLUJtCmPeZ9mfG
p609dBzYtf6KtciI5X3eOJ/Sr7yF+mFW53yXGjW1Otu/efJCx8KuFvq5crp5
czbqgb3lukRTAwAAgCpR3g/D7gLqLX55C86wke0ZZU9feA1V64dECVvOfMrF
Z+CzrVKsaqo4IewIw3s1Ov61TlOm0X2dmRmPtTn5MjTmFo6kPmUs23RrcCno
1O1dV6dowHYu/QJ7Aci4YYRGsahUnQpiO06V1FN36+50P0w05GzRJHde1OuA
/YTUpKby+mGK0wvUc+/Z412e39PvDXNmKF0HgxeDtwC1KQD2ElCGVyfVg5po
xrmPXNN8byv9yiu9bjXfg1k/DNHsCsv6XAGoyest9geIhgEAgO2I8n6YiN9S
nxmXLh027UDm/ejYjMegYZfvlaDj5CWhioq0mUHusYwpkoBVnBB2iuFNkvWX
xiLZXfNq3M6foVGMcKT0KVM6syyZ+ZCKzT1w9fX0ftBIMupEzXq7z7jDUo+o
ZNwwQqPiqlanQtiWUyVTtLpsPQln7OW4q7+rt6OBZHZeif1dd687LHE3Ka8f
pji9wKRAuW65Mjy5sN5ONhSk5ojl+x1ZtxqDVxR5q00Br2AytGQWL6PCnvZq
xg9DrYSunuy7OyfwtlKvvNL8MGtL4Xu3HBaj0WRJYLV+avlyMMBOl+y9JCX9
MEgOAwAAW4XVaOj/XU6sGqbO9q6rvrCYNZA9Gy2sDu/Kk4HjzF3ag9bAK9Ft
fGCvLSOODOSqsLgyH7pz1aQ/sl9buf+o3nTt7pNXHN+gZgP/9+8n9AHNE3db
fWPfD5nRpLFpn6NHb+g2GvpuBBeE3slmYKu1BxU4eBAphBzmZZ4iUoJ8m/Qq
6Giuarzg5dFVama4X1dXqf3Im305WoztLbFPaeXpbtUbLxjf77AMBmaW47Gn
w7Z2nd7Y1fXFsKjxJYx8G0YZNArqVGR1ypdtO1Uuh31Xja3tiXHV3vGJi97g
LIeHP2vTtZ/vOm8bfip5OMjqhxHVCwWOHWrpqX/Q1qnvNFk+Nupb9CbHrQB/
olUMXgxe9v/yUpv8X0GF/9lWfbhv5M/0j1Gx8KjD+L6h12jo/kdQuNJ9qVde
KuzSkQnTtKw2z0gSKvrY8+l7NTVt9uGJ6IZfi4pM3Pprv2cqRk25dJrEc8uN
I6JN3pwk5sNrFssnFw1tLcZsuz0jOUxiqrTpaupav3koSyYgAAAAMrEaHf97
/7Wf5xJrB/X7wJEK8pBzgtfiWvDbTzcnOLyfOTUgCLKq4Z3E/7971v1fsQ6Z
ZPY8wUIG2cy4W0iiwuQTWkqphXHHCQ2RjqbFGcowtOhzmVO2exIvh6yz4DPV
EuRp90zxDTUxQogLmpelEZEgCjdJ1Omwgn1aCPJtGCVqFNRJheqEqbJAZPXD
5OwFxboAg5cPDN4SvoKbUk8RybpsWXWXBL8TCw+ZG7VkXe8Qh6tnwW+75Pnd
ayxPPDQjfY0UYjPD1rNX7kfp2B8uu/31L9YTKclhWP8e3QT5Q60AAAAUzuI9
27mbU6wDn82oRrS4wsXLJRZ77ulkvTAdnmnxsTRMvGjFkYHfeb+StBw0da0X
r/7T6/P/Z8Tz97/16qpJgkyGqm588rm3p5/jdKxAliedxwhCicDv3ELY/JyA
4a28iPhRvkmibG/l+rQgZNswStIoqFNcjeqEqbJQ5PTD5OgFJbsAg5cPDN5S
vYKXkk8Rq3MjvdW0gVrV6poUMRWwVbrKibJmx6/cbV4LXTcaTu5jnlnYRX6O
t856ez70JO9/cdnta6ErurSQnuXwUG8dHepTVPMeAABAXqxMu7r71rOisdd7
ifLuEa74UzlIXuVOvKOu+3uexPKcsFnOtC3uab4nR8YuHag55Rh7lr7GrMwF
HDrNG8aRl+t/oVZCX79n+Um+E5zVGfdpUkpiN2p6uL9Dx0YZCVUuyCmEjQ9y
mpclFBEfpWiSKNtbcp8WF7k2jFI0CurEoIw6iZ0i4tt8qiwuMvphhHtB2S7A
4OVDobVgJTxs09Oj9639lXWCSWjVMHhLqxsqmCKYPDO0x0JzwjEueNEywcqj
geN7CaKsRkAOsx49E4pCkK2MD2Rtaf55mOXP+aVCbO3FkOOcLVmUinodsNFO
njS7PaFIXeYMTaNejnS9QVSYfct5vTIWffFnsrUvovDgAACAnFCTAyf61616
NvUuuds0WhSji4pMeCxHaCeMttE8lGdqODalDL/JtBJ0vHmC5zyCPuDYt5k7
bsHfb+LP2F8IYoMKeKFi0ZfTPms9kZXjLo1cQkhrUNbHSioibkrSJHFZKyX3
aVGRa8MoQaOgTiwKqZPIKSK+3afKoiKjH0awFxTuAgxePhRbCxJ72el/W+t3
ZaW5zkAFg7fUuqGKKSL2x1DXXxhXzHHb6LRACp2wu4O+vcVXkIuFrRhFrBeN
StaYIwq/JbT6wK67sl45jq0VTmqNwykVtl54z32c9WRq2WeuyJ16KJ1ksE1q
+wEAAMgENfvo4fqpB1tzsCglGpdnAoMW3b7EukZWv2ctJKEibSHz2yfU68Bn
x6w/8+YfoyYH3ulhVyVqevDUuaFZWdd4Nse+NAM+9tytLyMqDjkf8S90wkLI
aFDGx0osIs5XlqZJedjeEvu0eMi1YSxYo6BO6yinTmKmiPgOmCqLh4x+GIFe
ULwLMHj5UHAtYKoqE4LJ9+IqGLyl1w21TBHUQmiwp7EyYbTuOWJ20Sl/s1l5
YK+nfRTk0YEpfjlQk84mIjU5zAuvYZ+kRDGxZ8Hgujsv6eRpsAZSdGZ5zHJ6
MLs4VEK2tWm1qCLBm73NdQebO7+8MyUcBL8W8Z7bJcYPQ730Oz5qERW6CQAA
amc15DhIEgVCHqFriYqFWvT17ebPTib+tRzPZlLPEUR5vckzJZwtn5cc9kls
5vGjlwLr9uupgU6zbyGxPk04P7IFcu0680QOy4E91EhfTDOR5IcprYi4KFGT
toQfZvlna+0u4YGWY/QfdIRyD7XC/TBQpyTKqZOYKSK+A6ZKCSg0rOLCfhil
uwCDlw/lBi9rX5Xts/7CHzYRV8HgLb1uqMUPQ5OQxi8uy7vVJLc5vRq019Kz
QnmT8zG/u4HxYBCpMTOS/TBZD8/w762Fvm7heP7qrOf82cwENdRiwFZPEmS9
LSDkMxHth2FDN8fsTWQO9xQAAGwBYs8D3/6vqyAGv70/k8fdn5cjxlpZ07mn
/oppn6OzgT5Z0DZ0XvdznizkQPSGkYfV4FctibXy9S+2luuCB1KFIIPlwAYj
5Tg+kOKHyU1RRVQYRWnSlvDDUIvh4M9+Xkac+qpyvfNH/k/4Qy9EtLyIGgV1
yvyUElNEfPtPlVJQaFjFJfaCzF2AwcuHcmtBNGBtEBFsrOrBq8wrVOSHoSKT
3s9bqmk/R2WjZWQmo0VsMp8ETfagwFX+5C2klPukMvph2IdXHh2YTFkVEg3r
sfgjmZ+l/vSc6eO4BpUsYLqv0ytw4VW8HyYu2usIAAAgCRs0m+OWq8RXRB8O
dr1JVwTUHLPkfTVJdCILPhJLpuU/syMXT7nk99BLv9HMZkiWmvkhrUH5y6qY
IiqQYjQJ+WE2KaZGQZ0yPqXEFBHf9lNlMVEqP0xO5O0CDF4+FFsL2GrIOZLD
xFU+eJV5hTqmCCo2M+Zsr2eu0rd97v0tytEa1mmWI8cLNetpp6NhDlr8C+t/
k88P82qELoedabdzJ4fhT6q8Ouv9SEuQmvbb/LUz8vLDiPQ6AgAAYFmZdrWV
EUTZcVeykjQVmQw+FX+pSSzJeoiJheMvXUN/5GPuii7swvsAv+W07W9nznvk
r78pnOF/benJXaepo9XQe9F4tvvGg0gkdGfwh1Da/Sw280Pl0av//tl1qbMz
8cn21q7swCGJ9ZJyISSi2MywuU7b4Q6nJuWjlkK3+s1XRjPPieSjGL0mQ40M
KjYf8l7t0x/XGy/2Glo7zAP+fGLPpKOGekk5nw112iBHERBqaequs0/fajBd
7DJ0/yMYmQ3d+dedUGqpDpFTRHwrT5UJVuZDd66a2umBZTK06i8M+J8peCyu
WL2knN+WtQsweAWeqcTgXU8Oc/TKTz8PWjrPmS4a9a3nr3HotpoHrzKvUMPK
u16KmiA1ui/HeOO3XwWsB5lwGOckbxMWQ463SYLUdqYm0pHND5O8GJXhHuFM
DkNNe86dTx+zqc0cNe0mBc9h8/HDiPU6AgAAYGCnTWJvu+fPpBtm6sYJM1/V
pNXo5PdXTWc7TRcttDnRddkTnBO/FFLzAdthOlsM+bYjlEddJqmnJHSGsuoD
fcUoBSVwhrUc9l5orG5xBNgb10tTrrON+/dkJXlgMz+UaRq7XUn7jV6+y+ov
jUXSTB2xQijYD8MnIu6FVWTCCgkUo9dECUegT1ej49daq2t0l39MWoDUH7c7
3jrpzq8KgTRk2zAWUaOgTpsIqFPC5h8yN9bpHPeYWZSKTQ12NO7fmxnULXaK
iG/VqZLx0jtPV2vfu7xeMJcK/6uj/gPevYP8yOiHkdYL8nYBBq/AM5UYvMnk
e6TmTaPrIRNZQa2EHE1lTZaxzDS3Kh68yrxCBSvv0rjjCHNa2PhZQCif4eqs
5wxdj7rZFeb5BPX8doeWJKq7vGn+SV4/DLW08DKf0tDsHa6MBnAlh1medpvP
uaf4H/1q3P4WSVQ0OYI8s20efph1ryOSwwAAgCjYiPeUzAOvpwa6UqIoU1kO
D106m7Q6GGIvA46TTV3f5VGHevEnSw29fG2G34iBSfZbYfIVkFyGhrG4ihMn
ueAz1RLkafdMxpK9Ojd6sY6s6fCk/Eo2ub22ZyQ1apTN/KDRu6Y2Q5DWQo4D
xO5W99M0CYkUQsF+GB4RcS+sQgkrqNjM/W8H/3V3MiJpKS5Gr4kSDm+fRvx/
baqsbLT51wOVl6Zc+oTRtsvgzbqPXTzk2zAWT6PkVKe4PBqlOnWKU3N3zXUV
2o7bKbeN2Cv/tcaRl5ufEz9FxLfiVEmH7/ttRyvJw7bAfPLnxCZdrQk5VBky
E0sWDzn9MJJ6Qd4uwOAVfGbRB2/ymkZVq2tyU7WYcsAc1wzVO3iVeUXJV142
goVOzGsfzzFkkneO9lj8y1x6HZtyt9cQZLa3jccP8/q+/UB52siKzYa8V02n
D1VXN1t9LzjeMevRJ0zpWntwU1rLk05DenKY5fDwJ239PwqPveQuoKbfzz2E
BfwwGSHf958O92iRHAYAAETDOtU3ljMqMtr/4a3smnf0P83c7nj7Smgl/d/o
NF8H2j2c3+BkKeQ4zOQ3O5xHRafVB/baMuLIQIGHH8s+Ux3fEiMN6veBIxXp
SyHz59mhTi1JNjlSxcUasRnWF2fmB2aTRe42pZ86iRRCYX4YXhFxZ10TSlix
eM9aX073sKZD0nF2MXpNjHD4+pQ53iIbvxhf2mjS4sTNjpqaE/axl1sxHqaI
GiWjOsVl0iiVqVNCn7yd+zIjA6mn7tbdGfEGeUwR8a03VdK3rjydWqKi0X5/
cz1YeXyzra5G98XYXNFuWGQiqx9GSi/I2wUYvHwoMni5I4gYPwyH50q1g1eZ
V5R85WU9igRB6lwiLNrF35zHyzgz3Mb+GOr6C8l9AZ/bD7M24TxEklrjMGOH
ry09Gf7CbL/96wN3ezVBNphHufww1ItRcwNJHDD7Nlw9zzzvmzeTw1CRCbel
03Y39zlpjmy9fH4YvpBvJIcBAADRRIaNWpI9gqGWfv/W9pU3zHkaQ+coKOew
tWi/Sj6nEtSyz1xBm2V79J5nolvJRD4LpkQTeuWTgXeMI68K+GZO6BCX7N0Q
e6qSEee5FhnpSWw3DjkfpfyG9cwPaRnv2XKE2Y8VJ4SC/DD8IuLMusbZ7HXY
YxoaCVfdi9RrYoTD3aeRgPUQSVTn43IsEjJuGIulUXKqU1wejVKZOjF3E0gi
w1XLzsbpdUjzmiLiW22qXN+nawye4mUXEYWsfhgJvSBzF2Dw8qHE4OWJIGIj
YzkiiNQ6eJV5RalXXsa5TeRROTT2h9f8VqXmmOX2+Isl+hvU0uzk2E3zkb2V
jT2D6WmC1uH0w7CDiI1vXA6PXjHbfmCdJ9TS/LP5Jb4fTlvsqQ14NdJ9mjXR
V+ZDXofZZPf+zvvlNISz9XL6YUSHfAMAABBiNRq6ZTGcMVo+tdq+8XE7YeLM
faV3ydTQ8SQJy6E+ryjE5LVWoYSN2bAncfUc9fhEvPC5+8ybzsfFOOJd9lv2
ZDv/kyl3Mu7Ls0YsZ3IYzk9mW7bihFCIH4ZfRAUkBKAWxq+dqdPUHOn+4MQn
Be9ritNruYXD06dsLjtVZJ+TccNYJI2SVZ3ismiUytSJnU6zUkm8Dtj2cSeH
ETlFxLfYVLmePUNEKahiI68fpuBekLsLMHh5n6rA4OWMIGI/yZlDQ52DV5lX
lH7lLcQ0pRbD/kFb53sNVXRhJLKq8USndWA4NM8bgsLph3k5YqxNKIR91H/b
2mO59YirQhMfK/MTP7odl4yGs0Z9o7ah/ZL9c6vF5rh1L7wk2hkS+2Oo+01N
BV+2Xg4/jPiQbwAAAHJAvR6/fIAkCM3b5n8+WE8RQ8WmXK01Jwcm8k26m68f
hk0sU17QtdPEwtdQnDwDzG4o+1ItazlknGqtPXIeqsg8KeCMT2aDYzlTGYsR
QiF+GF4RFZQQYLMlVmvB+5ri9Fpu4XD3KRt7r47sc7JuGIuiUcVRp7gUjVKX
Oq3vXjPynyxPON8hM/JL5DtFxLfUVJnc0vJHUyiHvH6YgntB7i7A4OVvT9EH
b/IWdoZvgXWi8qRFVePgVeYVpV95CzRN84PLD5OczysqK8qrDhuszpvuO4En
+eTsZUgo21l7MO8MylT0vrP10HHH3dHP+bL1ZvthxId8AwAAkInkdVQ6brNa
96lnYj464TY2nXSMc4Zf8lLoYsfM/GLsvQxejRjLjzknC0x9J9iiUdPuSo5F
hw3OzDg+SDViF0fNJ27Q/8FustI+SS0GbPVkRq3DzVfmFkIBfhheEbHHc5mh
wmkJASLD3e/f4jz+oJ78ny2Pq2cimySNnMLh6VP2Jyubj5cPeTeMRdCo4qhT
XIpGqUyd1lN6pufIYvNLJE8k533mc/R/5D1FxLfSVJn0wyiZj5cPuf0whfWC
7F2AwcuHAoM36YdJ/yR7EU/7kZe79LP6Bq8yr1DBylsqPwyTHCbxG4dmoy/D
4cnxkX9YdPvIyrfM3uz0MvwkNPDMp/mqDRW979Ad1DnuR6nkbTsux2OWHyaP
kG8AAADyEXvmd57ZTxJJNMcd43kvjwUvdkwkZNVGfW2RrAbttXw57SWxOuv5
YBenNcWaZGlbp2jI2aJJxidTrwP2E8lzBOZkbZ8t8Hq9eUyhELLu4ihPgsrc
QsjfD8MvInZhTb8unSw+zv4xYZz3n+A+y16ZHvz87xwxrhKbJI0cwuHv05Wg
o6mCK+B2NTpxy9zzLwWzxsRmfN987Xsm1wtl16jiqFNcikapTp2SCQFSN2jU
UuiaTkMmZ4PXv9hOfM2EfOc9RcS30FSZTLXBVfiJTjLZ33NLsYrwMg+reEG9
IH8XYPDyocTgZZ1XqTtTptAPX+ZV9lnqGrzKvEIVK2+J/DAcGZaoyKi5JiXM
LLYYzXnJKOI9dy4vbxUVC3/XVaet2yh4yputN8sPIz7kGwAAgJwszwQGzh7V
nXpnH+OMISsbe1zjL/M6Q5Sw2K2E3R3atLT5uRs86TxWlMMU+lSrts3NuU1g
MpiVrd8aiL0cd/V39XY0kIy9Sj33dveuV46gViYGjmuPbXwy4GipbrzAkyqZ
JZcQ8vbD8IsoeeqRkpAwsTm6ZWV+C2M2UNOec33cCTYXf/7ik+95zuslNEki
wsLJ2afa1muhjavbVCw6NXbjQof5f0NRxaq6FAN5Nao46hSXolEqVCe27u3u
9bjulbnxwb6u7g8aKhj/7eqs9+KZ5BcLmCLiW2eqZMMsG7XHr4cWN6z3xMD6
zw3zWfPgw3zyJKiQfHuhCF2AwcuHEoM38Y+PBo7Xbn4y4NBVH84V56CmwavM
K9Sx8pbID8OVYSntOupaZMTyfranOg1q0ffpmRyfSWVtaep2V12Ftt09vZnK
hi9bb5Yfhj/kO+kx2wj5BgAAIBfUwrjjZJPRPZFY+2KzoduWIxrWGSN0uJON
pMWOPguuO+oMia5/+cyjf0Pnkn1BWPzN+e6etCUsg+Ww76qxtd14wdje8Ykr
8DyW+MvwZ2269vNd523DT1PMMCZPcvspg+m8ofWMZcD3JOfBh7AQ8vbD8Ioo
eZeq4dzn1nMtLQaTpbez8xL9WxIWuMfWptN/1NlzeXSaw6SkZsdsF27kkzVI
ZJOkIiScnH2asLdv2TpP6Y0fWyy9htb2Lvvg6MRcyfP2yoCcGlUEdYpL1Ch1
qhMVC486jKf1RpOx3WBx/TITS/zlB1vbe/rz3V3r9TIY8p8i4ltoqmQ81e6/
diZmy4sWi8nQqu+xu0Yn5iWUvFcP+fVCEboAg5cPhQZvnIo+dFvOtBrOmwyn
2i03fE9e5f4tahm8yrxCLStvafwwnBmWUh0d1HPvuY9c08K6sBi0G0VfGVuN
jn+t05RpdF+PZziy2ECXzGy92feS+EK+k6FxKSHfAAAAZGFxYqAt/YyGis38
fKPrTXrlyuc6s8TFjj6KOvDu5QfiktKsBqx7j6TdzpaB1eiDr44eELoXUGyE
hJCvH4ZXRJy1HsSwEvbYPhnJL6xaXJMkwyuc0vdpaZFNo+RXp7hUjdqp6oSp
Ug3k0QvF6AIMXj4wePOiWK9QhbRZSuKHScuwtAEV9rRXM44OaiV09WTf3bkc
evBksGdgQtR9INYJQ5L1l8Yi2TJ/NW7PztabnadXfMg3AAAAOaD95Hu4bvGz
N8SzazvyInmxo6+1dh//eChHZD7DnLfrfbesuTvyeXsR4W9Gvn4YXhGxCQHy
6FnZkL/X1uEWjkr6tLTIpFFQJxWpE6ZKNSBaDsVQVAxePjB486Ior1CPtGlK
44cJ/7Ot+nBfpqOSDbh639BrNHT/Iyjn9atXQUdzFf/NVmpmuF9XV5mWq4ej
bnU+Id8AAACkshZyHMhI+78OE7GcR8ELORY7Jgb4w/8Jvi6q5cHF6/FrPY5R
VZgNPEJYly8hUchsQoAyvfv51l9Rw67mDZEQWba3ivq0tBRTo6BOpQFTpRoo
XS9g8GaAwase1CXt0tWtVjucfhgAAADKwThbeArSRbyG8vUARREostjtYKj5
yXv+de4FwwUmaUkrtL3VWQoHN0TiD0zOb/3dhJLIoVFQJwBKAAZvBhi8gAf4
YXiAHwYAAEoNNe3p2KftHMoqebA66zXua3VNCaRhTAd+mC0BHS6rfaPt5mPc
8gXSgToBsEXB4AU7AfhheIAfBgAASg8Vve/QHdRdHg1vVOugFsM+R0eHMzPp
uiDwwwAAAAAAAJUAPwwP8MMAAIA6iM2GvNcshrYWQy9TYNTsuBWYER0Jk3wG
/DAAAAAAAEAdwA/DA/wwAACwfYAfBgAAAAAAqASl/DBVySzRu855I+p2baw9
dBzYlWwt/DAAALAtgB8GAAAAAACoBEVM07Wl+edhlj/nl9Se+DoWffFnsrUv
okhpDQAA2wBq0tlEL3blTc7Hal+FAAAAAADAtgZHhAAAALY/r0aM5fRqV3bc
NQ1HDAAAAAAAKBnLk85jzA2ceos/UurGAAAAAEViwW85yN44Nfuy6mADAAAA
AACgDIv3rPXMAWFNv38RZikAAIBtCxX50cIuedpT135dwJoHAAAAAACUhpoP
2A6TtEla1zUyA4sUAADAtoaKhb/rqmNcMZpjFs/jKFY+AAAAAACgGLGnw5Zj
GtoY3atz3IctCgAAYCdARR8Odr3JJEbbVa2z3PT9FysgAAAAAAAoMssz/uud
DVraCCVrW51wwgAAANhRLM8EBi26fUxE6H6LP1rq9gAAAAAAgO1L9CdrI+OB
Icr367+6MxmBDwYAAMCOZDU69ZNn8IdQdLXULQEAAAAAANuX6Ji9ta3TemME
HhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAFRCLDw2YGmt0xDEQWvgValbAwAAAAAAti8z7haSIKuO
fuT4fjK6WurWAAAAAMpCRSY8n+qqdxEJyH06y60QVkMAAAAAAFA8YtM+R2dD
JUnbn5VNndfGZmJUqdsEAAAAKELsj6GuvzBLoLax6++BmeVSNwgAAAAAAOwI
qOhv3s/bqmlLlNTovh7HUSAAAIBtD/XncDfjhCH/YnQ/iuIUAgAAAAAAKMpy
ePSzZg0JVwwAAIAdQOy5p1NLR8JojjpDK6VuDQAAAAAA2JHEZrxd1bRRWl5v
vbdY6tYAAAAAxeL1L9Z9ZfSKV385uIJQGAAAAAAAUCKoKddx5niw7IxnFiEx
AAAAtidrIccBZrWrtT/AagcAAAAAAErH6qznDHNAuN/ij5a6MQAAAEBRiPkt
lUyG+mbXk1K3BWxpIsGbvc11B5s7v7wz9UrNkVXU3Jijs7W5+Z3D+7W7TaMI
e1YrW0ajAA310u/4qKW5ufnw/srdfb7FndBj8z5LW+eNBylJ1ahY+N/2llOO
0FIJm6UCMHiFoRZ9l97u/HswNf9JbHrUfvqY4+Fa6ZpVVPJaeWGaAgAA2BrQ
1Y5OmH3zhXwVix2QDWoxYKsnCbLeFlD1LiwWfTE1Zj9KEpVHBybV3NAdz1bR
KBCnXRDRl9Nj9qZEfx0dmNoR3fXCa6giiPK6zm/84UUqtjA5fLmlulxzfGAC
l3wxeIVYi3jP7SIIsu7cgP/pUmLoTH5vb6klNW0DE9v4ZCCPlRemKQAAALVD
Lb0Ifvd5YvkmqgzeFwU8AIsdkJPkte59nd7n6ra8532m/QTRYA0g5lndbBmN
AnHmlL9vN1G2z/rL61I3RRFYP0waZF3vUHi51A1TBxi8vCT9MOmq85euoT9i
pW5ZkRG78sI0BQAAoF6o/7rPvtvc/K7e9JlV/wYBPwxQBauz3o+0BKlpvz2j
ZsubTU+9U25PbGm2iEYBmmjA2kAQ+00FBWduQV54DQcamo8f3q8hiF1VjadM
V7+fRKXdTTB4+ViLeD/c0/DOicP7EwYYWXXotOnqncnI9heS6JUXpikAAICt
wFLIcRh+GKAWFkdNu0mCfHdgSr1H4tTUwFGSKGt145h2C7AVNArQUJMDRyuJ
Mr37+XY/1U/ywmto2fGpYATB4OVmLeI1NmzfVDB8iF95YZoCAADYCsAPs8Og
luZfRlW8z3k1bn+LJCqaHMGVUjeFh9hzt74MyWFSoJYWVKxT6tcoQEM9d7eW
7ZzkMHGV+GEweLcgO9MPk8fKC9MUAADAVqDkfhi6QsTlnm+Cr5U1vl+PX+tx
jKriJj6PBNaFS8hpTjBmbdrx4sp86M5V06nG6toj1tE5FeyA2DMvoqbfzxl7
HHY1b16Jz6pKWYxupV49uXvNpD9lMPUZDX03gr8NG2tVnxxGQaV6fd9+oDxt
+xybDXmvmk4fqq5utvpelFynJGlUfCvMFcWmKBJYW3py12nqaDX0XjSe7b5x
/+lwj3YLJIeRsQvy9MNg8GazQwev+vwwKlt54YcBAACwFSitHyZhmXzXffzj
UmQmLOGrxTWDFm6V3jnip7kXDMtRB2HtkfNQBaHtGYnQFhy1NDXyhcV2+0HI
/YGGKK8z31WDHyZHesalcJCRiP9Hp7482/CWu1tjf3jNh6t1jsAccx4bm3R1
vLl/r8qTwyiqVGsTzkMkqTUOR5j/W3oy/IXZfvvXB+72aoJsMI+WfisnTaPi
W2Cu2HqvXg57LzRWtzgCL5lQjKUp19nG/XtUnxxGXjm88BpO2Ed/cts+1Bt6
LReN+tZux53fonwDBoM3+1936OBl/DD24fvuv3bqO02Wj43600ZHaZMLqWvl
le6HoZae+j3XP+/S65qbdfquTx1u38ScauPGAAAAbE1K6Yeh5u6a64/ZAvMl
MvZWow++Onrg4uhcyawXIQnQwuU0LCW8jon8Z65X02dzX5i/HGatJmpp/tn8
UultbhZx6Rl55SNft1IvRs0NpLbTs5mwgi1UsbFzUSPKKhUbK7671f2USmyu
R6+YbT+EY/Sb1aRTEjUqrva5QglklMDq3OjFOrKmwzO9+VsiXsMuYsNFrE7k
7oIXXsMb1a1fJ3eaiedH/bbG3XVd37EjKBMMXgzeJHSeXm31qXU3ZuIF8wHb
4bISF9tS0corzTRdjQYHOpoNf/v2l9/nEqOAikWfBL79Ul9Xp7P+wD025WTe
13fBM4t83QAAsJVZ+tXV2aSp1n8TEjbbSueHoaY9HXWlvve9+Jvz3T0dt0uT
cFVYAvJb3WuRkR4tUdFkH35w+69nLf+aUGdtjtgfQ91vaipypWcUko8s3cra
/xmpCVJ3LqpEaaV6OWKsJcij9lH/bWuP5dYj3tP8EiKDRsVVPVcohDwSoGaH
OrUk2eQIrWw+KMVFLLWVxUL+LlgO+/8TSpuE2Tmnqs39RBEnKgavIsivOVQs
HLgbWkj9NcywKtO0/TNcyk5Uy8orwTSlViZunGy7Op5pHVGxme9NdVpeN6lc
rD6w666E1OuNBgAAkJPVWc+ZMnoZ2qP3PBP8ZKn8MLHnnk4t36VvJVn8yVJT
m3YyqxC5JCC/1c2WhS2rrCwnq44YrFdvur8PPImoKtSWit53th467rg7+nmu
9IzC8pHerStBR1MFQb7tCKXG/7M7l3ecE2pIOJCN4krFFhIlKyoryqsOG6zO
m+47gSdqSvspm0bFVTxXKIYMElgMOd7O6oiki/iQ85Fa9x8KdQGbDiXDSbXe
BAxeDF5+2HJjmQuW4qhj5S3cNKWmXKd6PNwl26hFf38NoTnqDBXPH05NXj+h
9hxZAAAAhKFWJm62Ve9t6HSFcgQXl8YPQ0VGzTV71RFUsDrr+WBXde+IskHL
uSUgu9XNJofZdc47G3kRfjo5PnLT8m41qW00DxU/1FYUCavboTuoc9yPUtRK
yNEkkJ4xnlM+Urs1mR9yny2QmlaR3blk/LFwVuf8N6/7X8olfeWViskvQewy
DM1GX4bDCZ36h0W3j6x8y+z9Qw3bOVk1Kq7euUI5JEuA3S1mJttkXcRy5b6W
eVjFlewC9n4WZ/FuDF4MXiFeeA1VROljNVWx8hZqmrKell1VRy6NzHANAuqx
s6m8mNcnE9IzdY/MFufhAAAA1EZJ/DDLE853SPVkOl0cNe2uVPYoVoQE5La6
OcrCUrM+84GU3JixV9HlEnUJneWvKzXoVzg9Y1zMAaiUbqUWfX27icQmxZt6
Gz09raV0on7L/kqLX6Zdj/JKxVFIlNl3pGRTjC1Gl0oS41AEjYqrda5QEokS
oL9O0t7g1I1Mev5wycg7rOJF6QLqz5G+tzTVHTcn0qMXWD8McZijjhIGLwYv
TWxmxNKoeaPt5uP0qAzWD7PrQMnrKKlg5S3UNF0M2puY2ltN9iBnWNGrgPWg
iDjzgpkd6TYhOQwAAOwYSuGHoSNXy9VUn5Q5jVUy7F+MBGS2ulnzJqMsLNv7
636YyHD3+7dKcYN+bWnqdlddhbbdPb0ZmZMrPWNu+UjpVjYrYIZNm3pFPSHP
/hMpW5iCkHXDWAKlmveZ9meGMaw9dBzYtb6VW4uMWN4vwflskTQqrtK5QlGk
SYD1MxxwpCZASEsOszhqPnFjSpJ05fbDFKMLWH9UlmOBFQV3URgMXgxeGrbj
SG3n0Gya6jx1t+5WR8Wx0q+8hfphVud8lxo1tTrbv3mSQsfCrhb6uXK6eVPf
/8Decl2iVQEAAGDroLwfhnUI1Fv86ik4wzZJMQNGnARktrrZyP+M38ieoLFn
rwlD13zKJW0DVAir0fGvdZoyje7rzMx47FaFLz1jbvlI6lZmQ5RuDS4Fnbq9
6+KKBmznJN/El3HDWAqlYmPFM/aMqRtt6rn33EeuaYWTyxZPo+IqnSsURZoE
2N1imh8mGnK2aJI7L+p1wH5CakZTef0wxemCxNA4e7zL83v6vWHODKXrYPBi
8NIklKTnUNftqfRQJc701yWi9Cuv9LrVfA9m/TBEsyss63NZqMnrLfYHiIYB
AIAdg/J+mIjfUp8Zl15yaPuT3GMZUyT7qjgJyGt1s2kZMtMOxGY8Bg1r3qwE
HScvKV7Zk7W6SbL+0lgk+9Wvxu386RnFyEdKtzKlM8uSZi0Vm3vg6uvp/aCR
ZMRFzXq7z7glV6aQccNYAqViL/Jn1rihwp72amYrR62Erp7suzun6LagyBoV
V+VcoTCSJMAUrS5bT8IZeznu6u/q7WggmZ1XYu/f3esOS9z7y+uHKVYXUNH7
1y1XhicX1tvJxoHUHLF8r0Ddagze4lO0wUstjF+3fTE8EV3XE2rpd09Xg/bI
peFS1q1OodQrrzQ/zNpS+N4th8VoNFkSWK2fWr4cDLCWE3svqUh+GCSHAQCA
Lc1qNPT/LidWDVNne9dVn6gVmQ2TKCy328qTgePMXdqD1sAr0W18YK8tI44M
cBXmTHv4fOjOVZP+yH5t5f6jetO1u09ecXyDmg3837+fSDdz2PRrtfagAn4I
kRIQMizzFw71xN1W39j3Q2a0bWza5+jRG7qNhr4bwQXJRne+DXsVdDRXNV7w
8ugqNTPcr6ur1H7kzb4xLcbwltittHC6W/XGC8b3OyyDgZnleOzpsK1dpzd2
dX0hh8Ur34axFEpFhf/ZVn24b+TP9I9RsfCow/i+oddo6P5HUIba6Hk1rMga
FVflXLHFZsvlsO+qsbU9Ma7aOz5x0Ruc5fDwZ2269vNd523DTyUPB1n9MKK6
oED5U0tP/YO2Tn2nyfKxUd+iNzluBbgrtdBg8GLwbigPtRimVafDYLp40ag/
rjcnVGeGN9++svNDvPQrLxV26ciEaVpWm2d4CRV97Pn0vZqaNnuKmytORSZu
/bXfMxWjplw6TeK55cYR0SZvKomp75rF8slFQ1uLMdtEz0gOk5gVbbqautZv
HmbligIAAKA2VqPjf++/9vNcYu2gfh84UkEeck7wLqkLfvvp5gSH9zOnBgRB
VjW8k/j/d8+6/yt2M55MnSdYxSCbGXcLSVSYfEJLKbUw7jihIdLRtDhDGVYW
fWZ3ynZPjjKNCz5TLUGeds8U3z4TI4E4v2FZAuGIQ+GGiTK8FezWQpBvwwil
kt4wsfEGKpsrtvdsWQiy+mFydoFi8sfgFQCDt4Sv4KDUU0SyLltW3SXB78TC
Q+ZGLVnXO8Th6lnw2y55fvcay4lCkyHHZoatZ6/cj9JhPlwm+utfrCdSksOw
fjz6bSqLhwQAAJDN4j3buZtTrAOfzbZHtLjCxas/GXvu6WS9MB2eafFxFEy8
aMWRgd95v5I0GzR1rRev/tPr8/9nxPP3v/Xqqkki8+4z9dzb089xNFYIy5PO
YwQha51oHnJLYPNzWe0pjXBEoHzDRBneynVrQci2YYRSydAwsVs5Nc0V2322
LAg5/TA5ukBJ+WPwCoDBW6pXcFPyKWJ1bqS3mjZQq1pdkyKmArZEVzlR1uz4
lbvNa6HrRsPJfcwzC7jIT816ez70JK8Bcpnoa6ErurToneXwUG8dHdVTVEse
AACAdFamXd1961nR2KvfRHn3CFfwqRwk73En3lHX/T1PYnlO2Cxn2hb3NN+T
I2OXDtSccow9S194VuYCDp3mDePIy/W/UCuhr9+z/CTT8c3qjPs0KX9Wt2xy
SmDjg9mGZamEk5NSNEyU4a1YtxaGXBtGKJUcDRO7lVPPXLHtZ8vCkNEPI9wF
ysofg1cADN7SvIL31aWfIpg8M7QbQ3PCMZ7rzvXKo4HjewmirEZACLMePROf
QpCt+TtGFkOOc7ZkbTLqdcBG+3PSTPSEwnSZMzIbUy9Hut4gKsy+5ZLnXgYA
AMAPNTlwon+98AGbepfcbRotitFFRSY8liO0E0bbaB7izijIC5tSht9eWgk6
3jzBcx5BH3Ds28wruODvN8lYzUFsRAEPVPj7fv27zc3vHN6vFZR8LgmkNSj9
Y6UTTg5K0jBxhrfEbi0ycm0YoVRyNEx0HlRpSrUSHrbpdc3NzW/tr6wTLCmy
bWfLIiOjH0awCxSWPwavABi8JXkFP6qYImJ/DHX9hXHFHLeNTvNPCCthdwd9
dYuvGhcLW02MINLLvYlj9YFdd2X9W+uVx43DKZW0XnjPfZx1/4ha9pkr0lIM
RYI3e5vrDjZ3fnlnKu9zVmpuzNHZKsJMBQAAkA/U7KOH60cebD3KohRnXJ4J
DFp0+xLrGln9nrWQhIq0hcxvnFCvA58ds/7Mm5SMmhx4p4ddqqjpwVPnhmbl
W+PZBPsSrPdY9MWUz3ooV9JjYQlkNCj1Y6UUjiAlalgefhgp3VpU5NowQqnk
aFh+WzkJSpWYKqb/ba3flVW/LINtPFsWFRn9MAJdoLj8MXgFwOAtwSuEUMsU
QS2EBnsaKxNG654jZhed8jeblQf2etrDQh4dmOIXAjXpbCIKTQ4TexYMrqtL
0p/TYA2k6MbymOX0YHYdqIQYazPLTlGLAVs9SZD1toD4xIzrz0uYqWP2oyRR
eXRgUpVedAAAkJ/VkOMgSRQIeYQuKywWatHXt5s/O5n413I8m8k7RxDl9SbP
VIGVFHIYJ7GZx49eCqzbr6cGOs2+hcSiNeH8yBbIbXSJRwazgXrqbt1NkO84
JwQy8xW+ZS6hcAQpUcO2hB9m+Wdr7a5CRz4z+g86QrmHGpRKjoYptpWjkzG4
W8sIwVTq8W0+W0pBoWEVF/bDKC1/DF4BMHhL8Aoh1OKHoUmI4heX5d1qktuc
Xg3aa+lZobzJ+ZjfNbEW8Z5jnDWCMTO5ST4nQ3/WQl+3cLh3Vmc9589m56JJ
1sjY1+l9nr8vhY3GSfcCAQDA9ib2PPDt/7oKYvDb+/zlCLN5OWKsLTSde85f
Me1zdDbQJwvahs7rfs6ThRyI3jDysBr8qiWxVr7+xdZyXdAKyhsZzIbFUdNu
Mld+/oK3zLkpnnAkUpSGbQk/DLUYDv7s52XEqa8q1zt/5P+EP/RCRMuhVHI8
UbmtHOstL9tn/UXQoN/Ws6UUFBpWcYldILP8MXgFwOBV2StU5IehIpPez1uq
aedHZaNlZCajRWwmnwRN9qDATZ0XXkNV4kNlm5e5CoN9TkY4SqINPRZ/JPOz
1J+eM31cxZJWZ70faQlS0347n/SMDGzA/O4+X96xNAAAAHLAntRI9tgLviL6
cLDrTboioOaYJe+rSaITWfCRWDIt/5kduXjKJRBAWgiSrzOzuddypuWRkMoj
J0UTjlSK0TDkh9kESiUHCqWYSBANWBtEXB3dxrNlUVEqP0xO5JU/Bq8AGLwq
e4U6pggqNjPmbK9nrtK3fe79LcrRGtZjlqM8NDXraaejYQ5a/Atpf19aeBnN
Z6Z5NUJXvs400bmTwwglT2ZP/fI39dkqHpK9SQAAALJZmXa1lRFE2XFXspI0
FZkMPhV/qUksyWKIidXkL11Df+SzCIku7ML7AL/ltO1vZ857OAosxmaGzXXa
Dnc4Nd0ctRS61W++Mpp5CJKB9PT+r6cG3iVzJIeJSyttkwsh4ZSUYjRMhnpJ
VGw+5L3apz+uN17sNbR2mAf8+cSeSUcN9ZJyPnvHKJViJVeoyYGjlbnyS8S3
8my5Mh+6c9XUTg8sk6FVf2HA/0zBY3HF6iXl/LasKorBK/zAHTR4ZaJY80Nc
HSvveilqgtTovhzjjd9+FbAeZMJhnPwJUxZDjrdJgtR2pmfReX3ffqA8LatM
bDbxw0ynD1VXN1t9L7Kfl7wDlZHplzM5DDXtOXc+Xf5pzR63v0USFU2OYD7p
lWPP3foyJIcBAIBiwFoIxN52z59JN8zUjRNmvvCM1ejk91dNZztNFy0XjfrW
rsue4Jz4pZCaD9gO09liyLcdoTzSrks9JaHTllUf6OP6UdwGksjLsMKnV2tL
T+46TR2tht6LxrPdNx5EIqE7gz+EUpPkJJPDHL/6048uy4edpj6j/nTXtbFs
60KsBAqzuvmEU1qK0TBR8hHo1tXo+LXW6hrd5R+TfUT9cbvjrZPuJwraJ7Jt
GKFU8jxQlHAE5wrq1ZO710z6U4bEDGDouxGcjYR+GLwTSj2HTeaXOHrlp58H
LZ3nTPT0e/4al6diS86W1MK483S19r3L69VyqfC/Ouo/4N9QyI6MfhhpXSCv
imLwCj9w5wxeuSjW/BBXxcq7NO44wpwWNn4WEMpnuDrrOUPXo252hXk+QT2/
3aElieoub7oDam3CeYjcKHuUsBKHvzDbb//6wN1eTZAN5lEOPwx7XSvjXVzJ
YZan3eZz7imBSYyNbCFq+v0CN4wyVfq3YTpxAZLDAACA/CSn5c2Ln6+nBroy
oijXWQ4PXTrruLfpeIm9DDhONnV9l0cd6sWfLDX08rUZfiMGJtlvhclXQHIZ
Gsbc4gwJXjeQ0jPei70Mu+Az1RLkafdM9nq9HPZeaKxucQTYnHdLU66zjfv3
ZK5lyTDR3Y3GwaR/ZiXoaNpdb/kxkvFmkRIozOrmEU6hULGZ+98O/uvuZOaP
yA/5GyZSPnzduhrx/7WpsrLR5l+3sRPdqk8YbbsM3qxL2sVDvg0jlEo6YoXD
P1fE/vCaD1frHIE5xucQm3R1vLl/b1l6zqhkKnVS86bR9ZBRP2ol5Ggqa7KM
ZVUs2XKzJTXrtx2tJA/bAvPJRySE0FpFEFWG7GyTxUJOP4ykLpBXRTF4cz1w
hwxe2SjW/BBXwcrLRrDQiXnt4zm0InnnaI/Fv8z1u2JT7vYagszuYja2hA2B
Xg6PXjHbfmDtZ2pp/tn8EreMZj2J7xC19uCmYJYnnYb05DDL4eFP2vqzTMfM
dufK1sun0kgOAwAARYD1tG8sZ1RktP/DW9mF8Oh/mrnd8faV0Er6v9Gz+oF2
D+c3OFkKOQ4z+c0O51HRafWBvbaMODJQ4OHHss9Ux+n/586eJ/YyLPX7wJGK
9MUx2dy50Yt1ZE2HJ8XVxJYd1PaMbN7nTSaH0bS6pjYdWYx8sgOYRUqgAKub
VziFsnjPWl9O97CmQ9JxtuwNi4uTD0+3ssdbZOMX45u20uLEzY6amhP2sZdb
MR4GSiUDIoXDN1dQL0bNDaS207M53tnSGBsHpixsfomqVtfkZr+vPXQc2MUx
TW2x2TL23NOpJSoa7fc314OVxzfb6mp0X4zNKXY1RlY/jJQukFdFMXgF2EGD
Vz6KND/EVbDysi4jgiB1LhEW7eJvzuNlnA6N2B9DXX8huS/gM0UxyKP2Uf9t
a4/l1iOu5DNZsJpGHDD7Nrw6zzzvmzeTw1CRCbel03ZXxJGoYLZesSoNAABA
JiLDRi3Jnr9QS79/a/vKG+Y8iqHd+OUciyntN8jnVIJa9pkraJtsj97zTHQr
mdBWwZRoQq98MvCOceQVx79wZs8TfRmWdq1wpNilZoc6E2ZDkyPVZ8UeFaVb
I5zJYVg/VfZ5kzgJ5G918wunUNizGxoJ99yL0bC4OPlwd2skYD1EEtX5uByL
hIwbRiiVZEQKh1upWJM447Z+6oHpRru5Av6ZrRzXMeVWmi2Tm3SNwZM7fURR
kdUPI6ELZFZRDF4BdtDglY1izQ/x0q+8ayHHASb3rtjKoXToyFuVmmOW2+Mv
luhvUEuzk2M3zUf2Vjb2DIYWOBrMunrIisqK8qrDBqvzpvtO4ImInL20cZ76
rlcj3adZY3JlPuR1mE127+88wTSZbR7qflNTwZmtV7RKAwAAkI3VaOiWxXDG
aPnUavvGx+2EiSedBqmh40kSZkN9rmqMaSTvuuaX9Y49aqnnKNIn4oXP3Wfe
dD7mWEQkXWemlv2WPRwOEza0NWMtW4uM9CQWuEPOR5vrezI5TFYOfLpAYfZj
xUkgb6ubXzgFQy2MXztTp6k50v3BiU8K3tcUoWFxMfLh6Vb2BlnuRIsKIOOG
EUolGVHC4VEq+hJiRVayLPbA9B3nxOZUzB3wz4bYcWzlttBsmbyyoYJKHPL6
YQruArlVFINX6JE7ZvDKRpHmh7gaVt5CTFNqMewftHW+11BFF0YiqxpPdFoH
hkPzPHEpTHIYYpdhaDb6MhyeHB/5h0W3j6x8y+wVU7piZX7iR7fjktFw1qhv
1Da0X7J/brXYHLfuhZdE+Y2o6H1n66Hjjrujn3Nl6xWt0gAAABSHej1++QBJ
EJq3zf98sJ4ihopNuVprTg5M5Jt0N18/DJtYpjwvh886L7yGBs48A9KuMzOn
P9npzpJ5jzMMD/aoiCs5TNpF8o3jEq7CgmIkkLfVzSscGYj5rdaCre7iNCy3
fLi7lQ2uzlSV0iDrhhFKJbk9IoQjpFTcMwBHfomMgH/2ViOPTm6V2TIZE6iG
Shzy+mEK7gK5VRSDV7A9O2TwykeR5oe4GlbeAk3TfN6QHR1ERUbNNSkiii1G
cztVlkKOs/ZgfsmYqeh9h+6gznE/SjHpibKy9YpWaQAAAKUgeUeVjtus1n3q
mZiPTriNTScd41zhl/wUutgxcSYF5Ap7NWIsP+aczHbmswZSZhxs2nXmyHD3
+7e4D2ppL0plWnzL5t/JzLjitUfOQxXpyWHYINiMt6+bZ+l3mjYenVsC+Vrd
vMKRAerJ/9nyuHqWTpEallM+PN3KaoWy+Xj5kHfDCKWShhjhcCtVMhQkQ6nS
q2mwcN5VZF27fBVIt8hsmfTDKJmPlw+5/TCFdYHsKorBK8BOGbzyUaT5Ia6K
lbf4fhiu6KC0G2prkRHL+zlvAFFP3Wc+zUc92GLc2rqNmhoc2XrFqzQAAIAS
EXvmd57ZTxJJNMcd43lPzwUvdkzelaqN+toiWQ3aa7lz2rO2UPpd4GRlbfaP
iYWp/wT3Qe3qrOeDXdqPvLNZaSTZeOMDjlCKPZF2VLQ4aj5xI/EfjB8m4yYy
exWaN5V9bgnkaXXzC0c6K9ODn/89O6pHHMVqWA758HcrE7LLdXtiNTpxy9zz
LwWzxsRmfN987Xsm1wuhVJLILRw+pWLzH2bMAKkHphvzD7uVS09szqZV4dRV
hq0xW7KFY0iu5AN05sn+nluKVYSXeVjFC+oC+VUUg1eAnTJ4ZaM480NcJStv
0f0wnNFBqRYj9dx77iPXdK5c1gnlOyfeMbW2NHW7q65C2+6e3rwtlZ2tV0Cl
2flZuAcBAAAowPJMYODsUd2pd/YxzhiysrHHNf4yrzNECYvdStjdoU1Lm5+7
wZPOY9yHKckLRCnBJwnL/5a1q7ejgWRMKWrac66PO3skbUfVtrm59ghs1pc0
P0w05GzRJCOTqdcB+wn2FIw+ANqVEn7MXPLSVNSZ787x/r5cEsjP6uYXjnQW
f/7ik++zqnKKpGgNE5aPQLeyNbC0rddCG/UNqFh0auzGhQ7z/yZrjm9VoFQS
yB1hxatUjHs23e5dCjp1e9cPTKMB2znmqj57Upl6isqUbSUbzKMv+IWxFWbL
OBtm2ag9fj20uCGGxMD6zw3zWfPgQ1HFRNRLvl1QBBXF4BVghwxe2SjO/BBX
y8pbbD8Md+koKuxpr2YsRmoldPVkn4D5l/zCou/TM2Kz5q5Gx7/Waco0uq/H
M2TFRm6nXIHnV2nWi7ih0gAAAEoBtTDuONlkdE8k5vPYbOi25YiGdcYIWxSZ
SFrsYpOu1rqjzpDo4pfPPPo3dC6Ou8XJGJWGc59bz7W0GEyW3s7OS67A81jC
fvDY2nT6jzp7Lo9Oc+4rfnO+uyftcCEVxmwoW891Fns57upnrBFmgaOee7t7
12t3Lk4MtGmTdgsVm7vn0NU1modyVB4UlkB+VjevcKRCzY7ZLtzIJ2tQOkVr
mJB8hLs1wcrc+C1b5ym98WOLpdfQ2t5lHxydmCt53l4ZgFIVTA7hCCoVc9Oz
bHMGeODq6+n9oJFk7F5q1tt9xp087V15NHC8dv0Ww8pcwKGrPpw7teMWmC3Z
dr4cd/+1s7XdeNFiMRla9T121+jEvIQCx+ohvy4ogopi8AqwMwavfBRjfoir
Z+Utuh8m/M+26sN9IxlhTlQsPOowvm/oNRq6/xHM7VlaDNqN4m6fsU4Ykqy/
NBbJfuyrcXt6tl7xKg0AAEBpGKdB2gENFZv5+UbXm/TKlc9dZomLHTV313zg
3csPxCWlWQ1Y9x5JCwlefwxX9jxRT4w++OrogYujcwLL5XLYd9WY2FZcMLZ3
fEJbI4m/DH/Wpms/33XeNvx0036gFkLuS+2tBlNi99FuGfBNiTn+EpJAXlY3
r3AkshL22D7JNDbyoVgNE5CPmG7dzkCpCkRIOCKUKjbtc3S36hNTxfsdlsHA
zHI89nTY1q7TG7u6vhhOqV5HRR+6LWdaDedNhlPtlhu+J6/EiGIrzJbbnDy6
oBgqisErwI4YvPIh//wQV9UUUfz8MLLwZLBnYEJUfaRXQUdzVeMFL08VVGpm
uF9XV5l6HUy0SgMAAFAUOohxD9ctfvYKcHZBUl4kL3Z0zrHu4x8PiVkU5rxd
73P68NnrzHk0O+9XFxH+ZuRldfMKp9QUr2Hc8lFJt5YWKFVB8ApHJUqF2bLk
iJZDMVQUg1eAHTF45UPm+SGuGjkn2SJ+GAAAADsOJqnsYc7TFiYkNY+CF3Is
donl+wfbh/8TLLiUHnuduUzvfp5PcOvr8Ws9jlFV2Aw8ElgXLgFzIpWwq3lD
KkSW4a2ibi0tUCrRCGtUXFVKhdmy5EjugoLB4M1mRw1eBShsfoirSs408MMA
AABQJ4yzJb3c3gYRr6H8bfH5u9Sw2KUVMNpOUPOT9/zr3AuGkVSNYSkc3JCK
PzA5vx1yuigHlCqbnaRR23a23Alg8GazkwavAmyb+UENpikAAADAATXt6din
7RzKqnewOus17mt1TQlnl01BDYsdnTBN+0bbzcfbIhckAAAUC8yWAAA+ts38
oAbTFAAAAOCEit536A7qLo+Gl9ZzhFGLYZ+jo8OZWRFPECx2AAAAAABAJcA0
BQAAoGpisyHvNYuhrcXQyxQYNTtuBWZER8Ikn4HFDgAAAAAAqAOYpgAAALY9
WOwAAAAAAIBKgGkKAABg24PFDgAAAAAAqASYpgAAALY91KSziV7sypucj7d4
fn0AAAAAALC1gR8GAADA9ufViLGcXu3Kjrum4YgBAAAAAAAlY3nSeYw2TIl6
iz9S6sYAAAAARWLBbznIrHcHzL6sOtgAAAAAAAAow+I9az1zQFjT71+EWQoA
AGDbQkV+tLBLnvbUtV8XsOYBAAAAAACloeYDtsMkbZLWdY3MwCIFAACwraFi
4e+66hhXjOaYxfM4ipUPAAAAAAAoRuzpsOWYhjZG9+oc92GLAgAA2AlQ0YeD
XW8yidF2VessN33/xQoIAAAAAACKzPKM/3png5Y2QsnaViecMAAAAHYUyzOB
QYtuHxMRut/ij5a6PQAAAAAAYPsS/cnayHhgiPL9+q/uTEbggwEAALAjWY1O
/eQZ/CEUXS11SwAAAAAAwPYlOmZvbeu03hiBBwYAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABQMf8fyNbhaA==
     "], {{0, 258}, {1496, 0}}, {0, 255},
     
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{1496, 258},
   PlotRange->{{0, 1496}, {0, 258}}]], "Input",ExpressionUUID->
  "168cab4f-fb52-4335-80b6-a37de25a5172"]
}], "Subsubsection",
 CellChangeTimes->{{3.7649515264029217`*^9, 3.764951551789178*^9}, {
  3.7649518257085514`*^9, 3.764951826582257*^9}, {3.764952894683789*^9, 
  3.7649529104751625`*^9}},ExpressionUUID->"d4b5efcb-9593-4598-b156-\
d4aea59065e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AlgebraSSTPRS", "[", "mu_", "]"}], "[", 
   RowBox[{"aa_", ",", "bb_", ",", "cc_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"I", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]down", "[", "kp", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "cc", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"\[CapitalStigma]", "[", "kp", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", "0", ",", "3"}], "}"}]}], "]"}]}], " ", "-", " ", 
   RowBox[{"I", " ", 
    FractionBox["1", "4"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]down", "[", "kp", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "kp", "]"}], "[", "cc", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", "0", ",", "3"}], "}"}]}], "]"}]}], " ", "-", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Epsilon]downdownupup", "[", 
        RowBox[{"mu", ",", "kp", ",", "ap", ",", "bt"}], "]"}], 
       RowBox[{
        RowBox[{"\[Gamma]down", "[", "kp", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{"\[Gamma]5", "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "bt", "]"}], "[", "dd", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"\[CapitalStigma]", "[", "ap", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bt", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "-", 
   RowBox[{"I", " ", 
    FractionBox["1", "8"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Gamma]stdowndown", "[", "kp", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"CommuteGamma", "[", 
            RowBox[{"kp", ",", "ld"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"CommuteGammadown", "[", 
            RowBox[{"kp", ",", "ld"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"\[Gamma]stdown", "[", "kp", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]5", ".", 
             RowBox[{"CommuteGammadown", "[", 
              RowBox[{"kp", ",", "ld"}], "]"}]}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"\[Gamma]5\[Gamma]stdown", "[", "kp", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "dd", "]"}], "[", 
             RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"\[CapitalStigma]", "[", "ld", "]"}]}], "]"}]}], " ", "-",
          " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Psi]", "[", "ld", "]"}], "[", "dd", "]"}], "[", 
            RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}]}], ")"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ld", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}], " ", "-", " ", 
   RowBox[{"I", " ", 
    FractionBox["1", "8"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Gamma]down", "[", "kp", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"CommuteGammastdownstup", "[", 
            RowBox[{"mu", ",", "ld"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"CommuteGammastdownstupdown", "[", 
            RowBox[{"mu", ",", "ld"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"\[Gamma]", "[", "kp", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]5", ".", 
             RowBox[{"CommuteGammastdownstupdown", "[", 
              RowBox[{"mu", ",", "ld"}], "]"}]}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"\[Gamma]5\[Gamma]", "[", "kp", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Psi]", "[", "ld", "]"}], "[", "dd", "]"}], "[", 
            RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "kp", "]"}]}], "]"}], "-", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Psi]", "[", "kp", "]"}], "[", "dd", "]"}], "[", 
            RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "ld", "]"}]}], "]"}]}], ")"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ld", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}], " ", "-", " ", 
   RowBox[{"I", " ", 
    FractionBox["1", "8"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Gamma]stdowndown", "[", "mu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"CommuteGamma", "[", 
            RowBox[{"kp", ",", "ld"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"CommuteGammadown", "[", 
            RowBox[{"kp", ",", "ld"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"\[Gamma]stdown", "[", "mu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]5", ".", 
             RowBox[{"CommuteGammadown", "[", 
              RowBox[{"kp", ",", "ld"}], "]"}]}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"\[Gamma]5\[Gamma]stdown", "[", "mu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}]}], ")"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "ld", "]"}], "[", "dd", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"\[CapitalStigma]", "[", "kp", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ld", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}], " "}]}]}]], "Input",\

 CellChangeTimes->{{3.7649515612255154`*^9, 3.764951565227414*^9}, {
  3.764951628195877*^9, 3.764951776284864*^9}, {3.764951846973287*^9, 
  3.764951877629348*^9}, {3.7649519126850433`*^9, 3.76495231560576*^9}, {
  3.7649527515537148`*^9, 3.764952771671211*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"26c44777-edaa-4a4c-a9fc-1d3375c02fb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AlgebraDD", "[", 
        RowBox[{
         RowBox[{"Da", "[", "aa", "]"}], ",", 
         RowBox[{"Da", "[", "bb", "]"}]}], "]"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "cc", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "==", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AlgebraSSTPRS", "[", "mu", "]"}], "[", 
       RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], " ", ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "_", "]"}], "[", "_", "]"}], 
     TagBox[
      RowBox[{"(", 
       RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "Simplify"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7649516031656733`*^9, 3.764951623004114*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"9c4fa706-1a1e-4a77-a4c3-6f11bafa40cd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.764952698691783*^9, 3.7649527795506697`*^9, 
  3.7656360217683325`*^9, 3.765728687213174*^9, 3.765840630077733*^9, 
  3.7689330235944395`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"0b032d81-b5fc-480d-9e4b-2b8ac03989c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosureResult", "[", "2", "]"}], "=", " ", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AlgebraSSTPRS", "[", "mu", "]"}], "[", 
        RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "==", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Closure", "[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "cc", "]"}], "[", 
           RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "-", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Epsilon]Gauge", "[", "Rep", "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "-", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Z1", "[", "Rep", "]"}], "[", "mu", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ")"}]}], ",", 
    
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "_", "]"}], "[", "_", "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7633213297567873`*^9, 3.763321329888321*^9}, {
  3.7633213858087177`*^9, 3.7633213870035195`*^9}, {3.7637766218700314`*^9, 
  3.763776624896081*^9}, {3.7637794538653603`*^9, 3.763779458202568*^9}, {
  3.7637795298785686`*^9, 3.763779576649556*^9}, {3.763779837032604*^9, 
  3.763779877026024*^9}, {3.763817714139239*^9, 3.763817718186108*^9}, {
  3.7649528062852225`*^9, 3.7649528143557873`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"6f3d8145-f8e6-4e40-ab3e-581148df93ad"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7637798837534933`*^9, 3.763779910732687*^9}, 
   3.7637805294515133`*^9, 3.7638176523475447`*^9, 3.763817719325945*^9, 
   3.76385036342163*^9, 3.763851941520217*^9, 3.763852927648966*^9, 
   3.7649514484590435`*^9, 3.764952816918719*^9, 3.7656360229822598`*^9, 
   3.7657286883585815`*^9, 3.7658406314375477`*^9, 3.76893302485717*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"62e49e66-5942-44ac-b3e2-92f44fc628dc"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Algebra Summary", "Section",
 CellChangeTimes->{{3.7638177321529455`*^9, 
  3.7638177337927327`*^9}},ExpressionUUID->"9255e931-ff01-49f3-a360-\
483fd490757d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosureResult", "[", "1", "]"}], "\[Equal]", 
  RowBox[{"ClosureResult", "[", "2", "]"}], "\[Equal]", "True"}]], "Input",
 CellChangeTimes->{{3.7638177389419365`*^9, 3.7638177490493755`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"05b0a3f3-e5e9-4a8e-aaa9-ec16a0ff20b1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.763817749766077*^9, 3.763850363528425*^9, 
  3.763851941657384*^9, 3.763852927799844*^9, 3.7649514484937086`*^9, 
  3.7649528267619534`*^9, 3.7649563292493553`*^9, 3.765636023061051*^9, 
  3.7657286883741684`*^9, 3.7658406315000334`*^9, 3.768933028242653*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"08c1165b-772a-4a0a-9c7b-5b50c42bcba7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Holoraumy, confirmed by hand that these match the SSTPRS derived results as \
in adnkOnHolor.v5 on 4/22/19\
\>", "Section",
 CellChangeTimes->{{3.742225197042542*^9, 3.74222519916434*^9}, {
   3.7633215800471992`*^9, 3.7633215815838985`*^9}, {3.7633997471890945`*^9, 
   3.763399750251582*^9}, 3.7634001408695555`*^9, {3.763777243677569*^9, 
   3.763777250454935*^9}, 3.763781172543355*^9, {3.764956370618826*^9, 
   3.7649564155862837`*^9}},ExpressionUUID->"506208ec-72d0-4aa8-9d9f-\
54191bcc9604"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQm81XP+/2f9yTLGzlhDZGuQfSdLZCmmsoQRyr7UWAqDJLJLlpHsoTCW
lFDIUrYkO5GoKClElmyfv+fH/9uce+45597uPeu9z+fj8Z3R7XbOd/98Pu/3
6/16r374Sft1/cPvfve7fzX59X/263z6Tt27d+75jyV+/UOHE/91zFEndjly
jxNP6XJUl+5bHv7HX3+4xu9/97uDfv3VP/3630FERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
REREREREREREREREREREREREREREREREREREREREREREREREREREREREREQq
jp9++il8+umn4emnnw733HNPGDJkSBg6dGiYMGFC+OWXX0q9eyIiIlWYN29e
mDRpUnjggQfC4MGDw9133x1Gjx4dPvroI8ctERERERERERERERERKShoLD7+
+ONw1113hVatWoVFFlkk/OlPfwqrrLJK6NatW/jxxx9LvYsiIiJVmD17dhgw
YEBYdtllwx//+Mfwf//3f2HbbbcN/fv3DzNmzAg///xzqXdRRERERERERERE
REREGiizZs0Kl1xySVhrrbWivuL3v/99+N3vfhcWW2yx0KlTp/Dtt99aGywi
ImXF9OnTw2WXXRb1FYxZbIxhjGWnnnpqmDNnjmOXiIiIiIiIiIiIiIiI5JXE
x+Kss84KLVq0CAsttND8XNWf//zn0K5duzBixAhrgkVEpOygb8i4cePCiSee
GBZeeOH5GsEmTZqEZs2ahZNPPjm88847cawTERERERERERERERERqS/fffdd
zD+dccYZYb311quisSBX1bp163DHHXdEX3YREZFy5Kuvvgpjx44Nhx12WFh+
+eWraAVXW2210LNnzzB+/Hi1FiIiIiIiIiIiIiIiIlIv6AMyYcKEcM4554QV
V1wx+qwnuSn811u2bBluvvnm8MnHn5R6V0VERHLCmDZmzJhwwAEHhBVWWGH+
eMa2xhprhDPPPDO8+uqrejOJiIiIiIiIiIiIiIhInfjxxx/Dm2++Gc4999yw
2GKLzfdZTzQW5KQGDBgQ+4mIiIhUCqNGjQrt27ePY1uq1qJp06bhlFNOCdOm
TVNrISIiIiIiIiIiIiIiIgsMeSZ6hSy77LJVNBZsa621VrjgggtirxBzUSIi
UkmgI3zooYdC27Ztq4xtf/jDH6LW4sQTT4x9Rn755ZdS76qIiIiIiIiIiIiI
iIhUAOgmZn46M2os1llnnSq9QtjWXnvt0KNHjzBlyhT72IuISEWCTnDIkCFh
6623Dn/84x/nj3ELLbRQaNasWewh8sEHH6i1EBERERERERERERERkZxQ40sf
kD59+oQWLVrE/iCpGotVV101dOvWLbz88sul3lUREZF6gW/TwIEDw7rrrhua
NGlSpTcWvk2XXHJJmDhxYql3U0RERERERERERERERMoUfCzwqLj++utjfoma
3lQv9aWWWip06dIlPPPMM9b3iohIxcNYNmPGjNCrV6/o35SuLdx0003DNddc
E/WHIiIiIiIiIiIiIiIiIul8/vnnYfDgwbEvSGqvkN///vdh0UUXDW3atAlj
x46NnhciIiINATSGX375ZTjuuOPCKqusEse8VK1Fq1atwu233x6+++67Uu+q
iIiIiIiIiIiIiIiIlBn33Xdf2HnnnaN3RWqOifre5s2bh+effz7MnTu31Lsp
IiKSV/C1eO+998KRRx5ZpX9IMgbutddesV/WTz/9VOpdFRERERERERERERER
kTLhySefDAcffHBYYoklquSX2NZbb71wzdXXhNmzZ8e6X5FSMnXq1DBy5Mjo
vfLN3G/sYSNF46WXXgrDhw8P48aNK/WuSAH4/vvvw8MPPxw6dOhQZQzE32KF
FVYIhxxySJg2bZqeTiIiIiIiIiIiIiIiIo0c8kXvvPNOOPbYY8Oqq65aTWPB
z44//vgwefJk63il5Lz22muhb9++sba8bdu2YdKkSWHevHml3i1pJPTp0yfs
s0/b0LVr1zBs2LDYR0KdT8Ni5syZ4bbbbgubbrpp+OMf/zh/LKSXFuMh98CH
H37odRcREREREREREREREWmkoLH4+OOPw/nnnx+aNWtWTWOx6KKLhv333z96
B4iUCvKZ5LPx7D/jjDNCixYtwjLLLBP22Wef6POvzkKKBe/KDTbYIHobtGvb
LjzwwANh+vTpatAaGOi3Lr744nid0Vek99AaNGhQmDFjRql3U0RERERERERE
RERERErAZ599Fu69996wyiqrVKnbTXzSW7ZsGW655RY90qVk0Kfmq6++in0a
Dj300LD88suHv/zlL2H33XeP/v7zvq8cjQV6EZ4lehN88803cUM/gk6En9en
Pv6HH36In9EQ+vpwDBwL5+a38/Rt/G+OMZ96Bs73Tz/+FM9/bc/b+++/H047
7bSw8sorh4UXXjhsuOGGMeduL4mGBfcDHk777rtvWHrppeN4mDo+tmnTJgwd
OjTelyIiIiIiIiIiIiIiItJ4IF/55JNPhk022STW6KZrLMgh9u/fP3zyySel
3lVpxMydOzcMHz48bLfddmGRRRaJteXkPh999NGYd68Ufvn5l6gZIB//6quv
htGjR4cnnngivPDCC+Hdd9+NtfH18eX46KOPwpQpU6ImpZJB+8A151jGjx8f
Ro4cFZ566qnoZYLGYfbs2Xnr14DehfP+9ttvx++sDeTfJ06cGM4777yw2GKL
xfuxadOm4YILLghTp07Ny35JeYCGYvz4V8JWW21VTYf45z//OXTp0iXelyIi
IiIiIiIiIiIiItJ4ePHFF8Pxxx8fe4Ok1+qSPzzmmGPCK+NfqahctjQsvv76
63DzzTeHHXbYIXpYcJ927Ngx1pF/8cUXpd69nKB3QE9xxx13hB49eoQOHTqE
nXbaKWy99dZhs802CxtvvHHYaKONos5piy22CNtss01o27Zt6NatWxgwYEB4
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
bdp2222r3Vf48dA/hGeyWNonERERERERERERERERyQ/457/++uth3333jbnr
9FzQwgsvHPPGeFmUUz5bGg/4IlxwwQVV+nCst956URuUz14O9YEc/EcffRQO
P/zw+Tl79hWtw6WXXho+/PDDou0LvTr22WefsOSSS85/jtmP7bffPowbN65g
34t2AJ3HXXfdFTp27Di/J0bqhk6mZcuW4fLLLw/vvvtuyd8p3D9oQtCYZfK0
oKdIhw4dwqxZswrit4GXB+/e1D4vbdq0CSNGjCi6v4cUBvr0oKfJ5GlB35yD
Dz64KF43IiIiIiIiIiIiIiIikj+ooyWH3axZs4y13Ouuu244//zz81rLLVJb
yMM/+uijYYsttog570T7065du/D+++8X3Juhtnz99dexbn399def/+yQV6Ve
/amnnirqfuI7c8IJJ1TROZDP5WdoGwoBmgB6u6APaN26dfy+9HcJOi7q+q+4
4oowe/bssrh25LZ5Bx500EFVdCnJhr/ESSedVDDNA+esd+/eVa4VeqLzzjsv
fPrppwX5Tiku9Ju5//77ozYsVU+TeJjQt+amm24KM2bMKPWuioiINDiYb86d
OzfOj9FET5o0Kfb1QkOLPlido4iIiIiIiIiI1AW8LKi1pZab3HV6jpE8cefO
ncPLL79c6l2VRsq0adPCJZdcUsVrYPXVVw9nnXVWqXdtPuTg2c+2bduGpZZa
qoq2gRw9vU2KyRdffBEuvvji+f0oEr3AwIEDo9dFIZj79dzw3HPPhR122CGj
Lw69QtDKXHvtteHHH8pPs4X2Y6ONNqq23xtuuGG48sorC/rdw4YNC3vvvXeV
70VH9MgjjxT0e6V4vPXWW+HUU0/NOM4m1xtflXLQHomIiFQ6rHGZD0+dOjW8
+eabYfSTo8PgwYPjnI76gn79+sWefmPGjIljNL5zMz+dGbWR+omJiIiIiIiI
iEhtoJaH/CJ13Ek/hnQvixtuuMHcj5SMhx56KPZRSL0v99xzz5ibLheohXvx
xRfD3/72typ6kOWWWy56XBTblwBvDXp3bLDBBvP3ZeWVV477WIg+K9QBEqdu
02bPmEfO9C7h3KD9+Pzzz/P+/fkATUP6fZb08HjwwQcL+t2TJ08OvXr1qvK9
q6yySjjjjDMK+r1SPL799tvw7LPPhuWXX76apwXbIossEs4991w9TERERPIA
PQevv/762EePsZe+dYsuumicpyYbf/7LX/4S56hbbrll+Ne//hV7aTJmi4iI
iIiIiIiI5ALtxOjRo8Nmm22WsW882/HHHx/GjRtX6l2VRgr9HMg94sWQ6rFC
Xfgnn3xS6t2bDzVweG4Qq019flZcccXw+OOPhzlz5hR1f9B9PPPMM2HTTTeN
+7HQQguFTVpuEs9Zvr2RqfnjGP/5z39m1GvxZ65Zz549w2uvvVa2mi3i8Ycf
fni1d2CXLl1izL2QUDtJTSXaikSnwznba6+9woQJE8r2nEnt4blD19i1a9eY
70m/z3hOdtxxxzBo0KBS76qIiEhFQi+2F154IXTr1i20atUqrL322tFnDi0j
cyzmxXvssUf0n+Pv6e23zDLLzNdcoEnefPPNo95i1KhRZasNFhERERERERGR
0kNesW/fvjGulJ4bJddHbvv222+PnqsipQAd0H777VfFI2L99dcPN910U/jx
x/LpPfHKK6+EQw89NDRp0qTKc7TSSitFnwd6QhcT8vb0+qFPR9IzZP/99y+I
3oPjO/roo2NsOpNWi/fLP/7xj/D0008XxEsjX1C7eOqpp1XRnPHf55xzTlHe
gXiNdOzYscr3r7POOvEdbV1lw4D3AHkb+nRl8rQg18OzRP94PctFRERqB2Pm
u+++Gz0YmUuhqUD7zJrhwAMPDL1794698+6+++7oXzZy5Mjol3fnnXeGa665
JhxzzDFRg8E8njVx06ZNo9b1qquuiutlERERERERERGRVKiPvv/++8Ouu+6a
MTdKnGn33XcPL730Uql3VRox9E+md03qvXnIIYfEnH05gXfE9ttvX80XBh/i
hx9+uOhaJfwsnnvuuehVw36stdZaMcacT73HTz/+FP0xunfvHtZYY42sGgvq
AunxUgk1gZyjJZZYooofyX/+85+i5LynTZsWvwtf6+T7F1988fiO5jzraVH5
4GnBM3jEEUdk9LRg23bbbWMOqJx0ZCIiIuUI8zPGSzwszjvvvLDVVlvFuWez
Zs2ixpd+dczRc+mMmV/hW9a/f/+w9957R+8L9N3oLVq2bBm1Fvx752EiIiIi
IiIiIpJAvewZZ5xRJaeX6l++9NJLx/oecn8ixYa4KTX81KSl3qPcm/Tn+Oij
j0q9i1WgLq558+bVatSpTyduW+znCN8I9B0bbbRR3A+0Duiq8LnIB1yfOV/O
CbfddltYb731MuaLiVGjkbnwwgvL2scilUsvvTRqK5JjQDvzwAMPFOW7582b
F31RVlhhhSr3ET4h5Ai+/vrrouyHFJ7BgweHHXbYoZqPFBs1uMcdd1y83npa
iIiIZIYxkvnl22+/HT0rmD+hsaAXCF5k+FAsiGaROTJ6DTTKfA5j8p///Oc4
l8aL6ssvvnRcFhERERERERGRyL333hvrpDPleYgp4Vc/ceLE8MMPP5R6V6UR
QqwTLxXq0pJ7lP9faKGFYt6bnHQ5MXTo0LDkkktWe57wIzj22GPDO++8U9T9
IUd7xx13RL9k9qN169Zh0qRJeavFI27NMdH/gLq/TDqLRRZZNHTq1Cn6WFRK
XPrqq6+O3h/JMeA7gC9IsZgyZUrYcccdo9d1sg9o3s4///yy0xZJ3Zk1a1Y4
4YQTqvnfsP3pT3+Kzy3j77zvy+s9JyIiUi6wFhg/fnxo1apV9CJDG9GmTZvY
DwRfNzykFpQvv/wyjBgxIqy99trz5/TMc//+97+H559/vuzWHyIiIiIiIiIi
UlzId6KdOPHEE2NPg0z5UeqnyQHNnj27YvKj0rAgzom3AL6/yX1JTpKasmef
fbbs7kt0FsR403UW5ExXX3316CVRTD8C4stjx44N22yzTTyHPXv2jD/L13kj
B3z22WdHbQm+FZneI1tuuWXsk12XOHepuO6666r0qenbt2+YPHly0b5/5syZ
sQ/LSiutlKJXWSRq4l55ZULR9kMKCz13BgwYEDbeeOOMzw49RS666KIwderU
Uu+qiIhI2cGc9rHHHou9QdA0s3Xt2jU88cQT9epThx6ZXn+HHnro/P5ezHOZ
i3Xr1i28+uqreTwKERERERERERGpNKjDGTduXNh5552jb0WmniFbbLFFePTR
R2MMS6TYIAWYPn167JFMHj+5N+kf0rlz5/Dmm2+WeherwfOy5pprVusbwvOE
1oL9fuqppxbIv7g+ECemNxD9CW655Zbog5wviD/zuRtssEE8tkx5YnxH6H3w
1ltv5e17i0HiZ5F4p9x9991F1cd89dVXYdCgQVW0HtxTyy23XOwD4zu54YBP
Cn4pmZ6fhRdeOHr5UDtbrHeGiIhIJYBmGD3F4YcfHpZddtnQpEmT+N+PP/54
3uZsF1xwQZW5GBueFuimK0k/LCIiIiIiIiIi+WXOnDnRgz7VJyB1oyb/kEMO
ibVAxpGkFNAzZMKECdEHIjWPT/8E8uAff/xxqXexGmPGjAm77LJLxj4AiUcM
HjJ4cZBLLzc/jtrCfnOs5Icz9RxKNmLTN954Y8X5K1922WXRSwINWtOmTcMz
zzxT1GvF+XrjjTeq9MtJtn79+oVp06YVbV+ksKCD6t+/f+wRk36t+TN5o4ED
B4YZM2aUeldFRETKBjzVTjrppDi3/utf/xr23HPPqGVmfp0v6L3HXCxdA8lc
LJ/fIyIiIiIiIiIilQM17h9++GHsJYA3QKb86CabbBJz2SKlgvzjkCFDouYn
9d5cccUVo06hmP4CtQXfBvyE8RXOpj1AJ9K+fftYb0c/AHqjoCmpJD0T575P
nz5V+lqkb/gr42WBb06lgc5itdVWi/WRHTt2DK+//npRvx9NB1oLvFzIs6ee
V7QteCBIwwHP85YtW1bzwUm2gw46KDz99NMVq8sSERHJF8yXv/nmm3DhhReG
9ddfP/qObbbZZtH7ae7cuXn9rieffDLstttu1cblHj16hEmTJuX1u0RERERE
REREpDKYNWtWuPfee2MOMVst+j//+c/w2muvlXpXpRHz/vvvh3PPPbeKFojc
PR4sn3zySVnmHPF/efDBB6tpQ9Jr1PG7WGGFFcIBBxwQrr/++ujbUY66kWwQ
d27Xrl28Htk0FtTn33fffTEWXmlQD/mvf/0r9vt+4IEH4juzFOB9kq5l2WGH
HeI9Jg2Ht99+O5x++ukxV5TpeeJdcd1119k7REREGj34SIwaNSr2rUOfiHda
79694xiZ77XB2LFjwx577FFtXD722GPj3F1ERERERERERBofr776auwJkq3m
nrzeJZdcEr6ZW3n5UWk4jB8/Puy///5V6vkXXXTRsN1225Us710TxHjfe++9
sNNOO4XFF188q9aCjdjwMsssE9Zee+1Yh9dmjzbh6KOPDpdffnkYOnRo9Mag
v085Qr9qagizHRvaGDQkvGsqyacjAY8RdD707uBeK1V+O6nVTD23q666auwj
IQ0HnvMRI0ZEfVYm7RL9a7p27RrfiSIiIo0VPBmZm+ExwTybrXPnzmHiuxML
8n3Dhg0LO+64Y7Vx+fDDD4/+GSIiIiIiIiIi0rjAT5Uaczzxs3mUt23bNjzy
yCOl3lVp5OCZ8Pe//z386U9/mn9v4sFC/v6LL74o9e5lhTq7m266KbRo0SKr
30OmjVp26tY33HDDsOuuu4ZOnTqF7t27h4svvjgMGjQojB49Omo4StkPGs0E
555eGrl0JMstt1y4+eabw4wZM0q2rw0B7qNMfcHRX1SiT4hkhrwRfebJ5WR7
rujlde2115Z6V0VEREoGfS/79esXx0rWscyXBw8eXDA97K233hq22GKLamPy
UUcdFV5++eWCfKeIiIiIiIiIiJQv7777bvj3v/+dtV8IMau+ffvGOJZIqZg3
b17sbUMcNfVeRR90yimnlFRrUBPkTD/99NPY84H9zfas1VZ7seKKK4att946
6i7OOuuscMMNN4Thw4eHF154IT6n+e5FnYvvvvsuPPPMM2HTTTfN6dPRvHnz
WG/I70vdoY6ydevW1c5xt27dwkcffVTq3ZM8gm8K+pmmTZtmfK6Sml3eLeXY
M0lERKSQfP/99+Ghhx4KrVq1iuMi82O0yFOnTi3Yd7ImXm+99aqNyaeeemrU
PouIiIiIiIiISOOB3AxeFkl8Kn2j9n7ppZeOOVxyxSKlgpzjNddcU+0epQfz
lVdeWRG1/PgJH3nkkbE3SH20FukbfgZrrrlm6NChQ+wxgu5h+vTp8ZwUOv86
e/bsqNNCP5Jt/8gHU19I7w2pHy+99FK8zunn+KCDDgrPPvtsqXdP8giaJPqC
UDebzQdnm222ieNzqfrYiIiIlIrJkydHvTG9tND00gPzueeeK8h3MZ9mrD3i
iCOi11zqWIzPHvqLcu1hKCIiIiIiIiIihYF4EXEhesBnyuE0adIk1k6/+OKL
pd5VaeRQI3bOOedk9M7H56ISfBJ43l555ZXov4EvRb60FnwOedj/+7//C4ss
skjUXFDn/sQTT0QfkEIyZcqUmAdedNFFs+7f6quvHnr27FlUn42GCuebGH/6
OUbHcs8995R69ySPkNNB34iGJtsYzbPVo0eP8P1335d6d0VERIrKnXfeGftr
oXNAwzxq1KiC6a6Zw6Oj2Gyzzar12VxppZXivugtJSIiIiIiIiLSuMDHn5xd
erwo2f7617+GXr16hQ8++KDUuyqNHHoen3DCCdXu0e222y7Wrv3www+l3sVa
Qfz3zTffDAMGDAh77LFHWGqppfLma5Fs6C2WX375sNVWW4XevXuHSZMmFST2
iz/FI488Er8rW709GzFpfHPwd5b68e2334bu3btXO99oXbinpOFx0UUXhQ02
2CDjs4W+aaeddgqff/55+Pnnn0u9qyIiIkWBOSg905hHo7Ho2rVrnO8Waiz8
4vMv4ly2WbNm1cbijh076ilWQLimaLXpk1bX7bPPPgtff/21/pwiIg0cdJF4
rtZnzJg5c2ZF1HGJiIiISHlw++23h+233z5rjTz500cffVS/fyk5o0ePDp06
dap2n+6yyy7R66KS4mZoQmbMmBFGjBgR+vTpE48LLQI9enLpFeqit6CvCn09
8NHIt9YCb4V+/fqFxRZbLOs+oOFq06ZN1GpV0jUqV7iGXE98S1LPM73C6Uku
DQ/G4N133yPj88X7gpwPvYK++uqrUu+qiIhIUcC7As9FvCyY644cOTLMmTOn
YN/HPPbwww+Pc/VkDOa7+fMtt9wS+/VJYUAfMXbs2HDppZfWebv22mvjWtK5
kohIwwaNxKBBg2Kc6rLLLqvT1r9///DOO++U+lBEREREpMwhV0c/AeqAVl55
5Yz5G3qGbLzxxrH3rflRKTVDhw6N/g/p9yk/I7ZZqbXc1FeNGTMm/Oc//wkn
nnhiaNeuXfTooH4dH2Lq1evbX4Q8LHoOnuV88vbbb8ceKAsvvHDW715yySXD
UUcdVTF+I5UA1zI1zs/Ge5zeLNLwQM9EnS795zM9Y8suu2w4//zz4++JiIg0
Bs4888w4v8V7sW3btjF/Xqj16hdffBEeeuih2KuLvn+pc9z27duHd999t2LX
IZXAxx9/HM4999x6rYWWW265GPf46KOPSn04IiJSQCZMmBBatmyZM0ZV0/aX
v/wl3HXXXaU+FBEREREpc4hDTZs2LdYBZesZssIKK8S6HfzIRUrNHXfcEbbc
cstq9+lee+0V/VYaQk9knks0I48//ni46qqroj5hh+13CGuuuWZYccUVoy8y
az5ivAuqvaCvBFqOfOodxo8fHw455JAqMef0DZ8F+h5I/sC3gvsh9TyTZzjm
mGNKvWtSAHi3oaMgR5DpGUOLtfPOO8eYUkN4D4qIiGTjl59/iV7erGHx9kKX
XEg/L+bmL7zwQujSpUuVsRft40YbbRTn7HokFBZ1FiIiUlvUWYiIiIhIsfjm
m2/CnXfeGTbccMOsc8v1118/DBw4MPZDFSk1AwYMiL7A6fcpNWzff/99g8kv
Ug9HT0mOieeUGjr6ojz44IPRx+CAAw6IMeUF1VoQD+Zcffjhh3mr98OHY7fd
dov9SbJ977bbbhv9lCV/XHnllaFp06ZVzjN6uYMOOqjUuyYFgjhPth5f9A5B
a0F/EXyqREREGirMjdH5ouNlHtx6t9axH0ShYB7OvAvvitSxd7XVVgsnn3xy
1C83lDVIuaLOQkREaos6CxEREREpFrNnzw5HHnFk+Nvf/pZ1brnDDjuEN998
U79/KQuuueaa6OuQnl/Er7che/UmPX7wlaEvAM/k888/H0aMGBHjvnjOUE+X
radAurfE5ZdfHmPU+YAaPrRa9KfO9p277757uP/++/PyffIbPAvNmzevcp7J
NXTo0MH3dQPlxRdfjP422Z4z3oX4xtA/XkREpKHy6aefhiuuuCL2S0Pne8QR
R4RZs2YV5Lu+/fbbqBXecccdq/g/orHo3r177J8nhSeTzoJ5D34m9E6rzYZW
/9///nf08xQRkYbLG2+8Eb0eV1lllVqND/RjTfdnVWchIiIiIjVBzpa4ELnZ
Jk2aZMzZ4EF/6KGHRi8La3SkHEBTwFop9T4lvnrggQeWeteKDs8k+fSpU6eG
sWPHhttuuy3Ge3mmF1tssay52CWWWCLsueeeUWeVj+d6+LDhsb8Qsc5s34kO
5oknnsjDUdcedDfE4dGkUM/w+uuvh7feeiv6gkyePDnGa/l7zgN1inPmzAlf
f/11lY2f8ff8Hr9P/dukSZNiD24+99VXX41/pmdNscHbpUWLFtXO9X777Rf3
3Xd2w2PmzJlRI5VLT4XO5sknnyz1roqUDN59+EHxzuY9jdf/qFGjwgMPPBBu
v/32cNNNN8Xx8r///W/0f3n22WfDa6+9Fj755JO8+TyVC8z1Gbeefvrp6F93
3XXXhUsuuST2ILrgggt+nVP1i+dj5MiR4f3339e7rgHANWR9xzW9++67w403
3hj69esXr3fv3r1jb43+/fuHQYMGRZ0sc6K5c/Ojuy0mzL06duwY/SXQO3Bs
Nemt8YhDr/zxtN/mc2zk22fMmBF/znsjde7Enz/77LPYb2/XXXet4mXBWoQ5
N5rnhvbeKFcy6Szw8aInIh4VtdnQWDAW2A9VRKRhw5hx6aWXhlNPPTX6TuXa
TjrppNh7de2111ZnISIiIiILBDU/9957b9TtZsvXUPNBXE7Kmx9//Cn2BGYt
QWz15Zdfjnl34urEUMkjDBs2LMaV7rvvvvj/Dz30UBg+fHh45JFHwmOPPRZ/
76mnnor5CPINxF2JPZJjpo4rX14R6AJ++rHu8UjWSssvv3y1GNthhx2Wl/2r
ZIgfE3cmnk48eJlllsn4XFOL16xZs6jx59/Uh59++jncc889NfYv+ec//xnG
jRuXpyOtHdT0k0s77bTT4tr5X//6Vzj99NPDWWedFc4777zQt2/fmLO+6qqr
ojcE+afrr78+6heSjZ/x9/wePgHkps4555xwxhlnzF+z9z6vd3yOis0tN98S
Nt1002rnmr4w+dLQSHlBLod3+KqrrppV17TWWmuFm2++OeaHRBoT6Mt476Ob
GDJkSMwn8/7v2rVr2H///aOv0pZbbhk9hMnLMU7+4x//CJ07d475N+YX//3v
fXH+xFiKzq4SfbLQVqANfO655+J5oNcYmmn6dzGvX2mlleLcn9q9NdZYI54P
8tWMbWhPmP8xtktlwLjAmM+cDj0RuhnmOlzTnXbaKWy88cbxOnO9l1pqqbDi
iivGcWKrrbaKPejIO99xxx1RN8paohLuefYR/SzHQa0A3ovoRjL9HsfEsT38
8MNxTojG5MILL4y6DDbWuWiP+Dl/f/9990ddMGupl156KVx77bVhk002iZ4J
jLHMd1dfffVwwgknxDWTY23xyKSzwJOTe1hERKSuEDeh7ob1QqXpLNh35oLE
Wb/77rvoWcvchzogNIWzZ82OGzpcdaEiIiIi+Yd6bOpwctW977HHHjEfL2XC
L7/VVpFLQCdD7SW1WMRW0UpQb0Vs9ZBDDgl77bVX9LfdbLPNYlyduivi6osv
vnj8f+KsTZs2jX0H/v73v8ff4/ephUfLTRyLHDM5vTFjxoR33nkn+iZQ18W8
nTj+guRx2e8kDkwMv671/8RG03sj489AHkX+B9eN5zfd+zDZ8J+gzpHrWR/Q
aVAfXFOvkuOOOy5e92LCmpjYe037Vt+N9XeXLl2KemxAToE8Sfr+7L333vHd
UAm5EllwyAGjpcnWpwcdFVoivC9EGjpJHpX5CT4u6OEY+/BjS/z90QDy3/jA
MCay4YPFz1L1gTxT6DiZP6FNYF6F9xGfXwm6NWKnzK3w8GBcZixAb8lxcszM
nchJotNi/se8kONlHcDvoN3aYIMNQq9eveJ4zXGXczw2iSszHyWuTPw4U1w5
aoUboG6E40+0Rein0ZOivUR7zLVMrjnz/eSaJ9edOSBzF+55rj2/c/TRR0d9
AfMHzmc58+2330VNSfIMs+555plnqv0e9wNjJusa9MX0aOeYOTf8Nxs6Dd4N
iXYRPQp6LPTBRx555Px3Cd+D1mL99dePay20WOX8fDRE1FmIiEghqGSdBfoK
5r340qEPZX5EHdTAgQNjrRB1QmzUBeHfJSIiIiL5BZ9T8urZ8rBsxx57bPjw
ww9Lvavy/yGeh8fEgw8+GONM9MpAH0GMiTUA8T/iheQPiBkSS0xiqMQPiREm
G39m4+/Ykt/l3ybxRz6P+DvaDDx5d9ttt9CjR4+Yn0enU1svBPZ7+vTpMW+x
4YYbht1b7x5r5+pCn/P7xGNNvU/RjRx77HF1+ryGCtcGbwZ6iGR6tjln1O6S
m6oP5Liol83VM4SNmHSx875Dhw6N92yhdRbUBvc4vUdRjw0GDx4ctt9++2r7
Q0+YKVOmqLNooBBDIVaSa+ymjtneIdIYIKfOuxBtBbli5i7Mf1L1E8xr0BtQ
08+YyEYdfKJBSP1dxjL+PZ9DvrVNmzbx8xdUW1oK0LLiw9SqVas4T0rOA/+P
fgJtNcfy4osvRs0rvh/oadu1azdfv8r5QLtKnhm9Zn21mIWEa8K8gvkoaxq8
2zg+5j7Mb5K4MlrhhtYjIOmNwzXCkwW9DPN/5vGJHoD7HO0F3oVoDSa+OzGe
K/QIt9xyS+znxjOT3PeMKcz1uU/waSjn+521ED5kyXN75plnxnlPOhz3wQcf
HI+NY+Qcccx4fGy33XbR44V1FO8D9BSJLit1PZS8H/hv5pSc83z6/EntqWSd
BfcMfpF4R7I+IQfGerqcN94d1Nuwz/jHoDtknEnvryNSblDPj4/R6NGjK+p5
w38WP1r23eetuJSrzoL9Yg6LDvaGG26IenLmPHhqoQdlDo8/H3Ma5u7obYm3
ogmlnm7NNdecr7Nlvnj//feX7FhEREREGiLM15nHE2POlh8lvozncn37Ckjd
QZ/AfP+Zp5+JfrbUzOMBTLycWCjXj1hqopUgzoq3LfkGvICPOOKIOAcnx019
In0S2OiZQL0zftr0PUBPg282tY/Mz5mPE29MzT0Qp+dn1MGtt956Yeutt47e
F/RPGDFiRIx1Z1oDEgulJ/i+++4bcxzkLvDPuOyyy+p0Tth/fI/T1z8cq1SF
9Tl+yFy79OebPErPnj1jPV59QfeTfr+kb9x/xa6PJD9E7oXYCl7QrE2Jy195
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
vIfIt1dS/a7kB+aI2WrQk433JPOxcrufRdLBL4ycLWNFLj8L5kL05yA3U+z7
mnF79OjRObUg5Knxh6srjGPkAZhDMGZlip3m28eaHkSMxZmOh+vRrVu38OGH
H+b1OxcUcvnMobL1bGFjrvHggw+WdD8XFLwg0IFmOh7uM9b+/E4x1mf0JGUO
m2lfmN8Ss8cfET8R5r/0gCM/WiiNPu8E4g/oBXnuqTWhl2oxQR9Nro05ZPo5
4Vwwj5TC05B1FuQ9icPUFF/jGcRPslJAv4fuv6bjon6lWOt3Ee7LbL5NqRve
m/ScrgSYCzMn3mGHHXIeE3ED3pnl7olTbCpNZ0Gci7U988Ns13rvvfeOMVsR
ERH5DWIWjz32WKyXT2JKzJ2ILzAPQGtRzH5b9CmhZjZbD7D0GCh50Jdeeqko
+ybZSa7bUksulfV6URt33HHHl3pXyxY0FtRw0beDHGwS9yTHTZ6r0HF+9A+J
fwZ1Ifn0imbf8ac+//zzq9TJp27kO4j18/55+umna60pIS5MbDLfOos5X84J
l19+eRXNPl4O1NXVVgNSX3j/omVI99SgTzP6EvRN7CM+E6n+1uTIWdv369cv
vPDCC9FXFV0B14B/gz6dmC73HN4d/Dc1B7zzWVPx2cOHDY+5VcYGvh/tAjVO
fDb1qJyDcvISYl/IS7F2ZR/R6qXnSTgOrt9xxx0X82zvvPNu1OlxbvD35LyQ
3+KccG7Y+Fx+znnj/PFckAfivuPaUKuCvoLvYkMnhFcL9VVJzxvOK39O7Wm6
1VZbRf+mcoP6ZjxBUz14F110sdC2bdv4HpLGB3kHamlzzcd4fzOGfPNN+bwT
RLJBnnePPfaY78+Ufj8z1lFLT1+qYntZAGuzl19+OaffNLng+tSQMb6NGTMm
zh0y+dDhxfTcc8/l7Zi+/35eOPXUUzP6TXMN0Baj6yh1T2/mP+ecc05Wbz42
9Arl1vOrJtBqZ/Ml4h7AdwvdTTHgvuP+yrYvyZyWeoojjzwy+pYVEuZ96EhZ
N3Av4mvBn4sJ3jT0hsz0bKDTRXMthach6yzQo7NeqSm+tv3224dBgwaVendr
DdesJs81Nmo8Kk0fJ5ULulLqlmq6Lxl7yzHHngliX8RNMo1V6eMWmlo0GfI/
Kk1nwbykS5cu0Tc327Wm/kyvUxERkf9BDpJ+rUk8iXkRsTs8wdAvosEgp1Ss
/iFJ/wnibbliXGz8PT0OmMPpj1BaiIFRJ5CrXx+19sQupDrE1HnO9tlnn6gx
SjwL6P/8ySfTi1JDjkdoUt/Jd5NvzxfkqK+44oqoe8hWI0i+g79/9tlnF8jX
k9jxQQcdVO3z0GwQq62rzzC59nHjxsWaztR1I7n6u+++uyj+jvSi6NWrV5Xv
J5aExoF7hvce72ZyE2jOknwR9w/nk3OAZofaS7xi6SuChu6hhx6KPdCp68Hb
gXOOz8N1110X10vEosizo2VL3sPoFjifxA24N4qpv6sNiccE2gY0FPhtZPLX
4f4jd8W7incSOnxyP4yD1J6QV+KcMA6heyIfgF8FMUc0LXiI0D+b55Q8AOeI
2Dyfy8/QSeG9zT2cnB/+n1pJfGqS80mOgc8uJ7inuCeIKac+pxwXftZoMKTx
wbuQWtpctf9sjFd46IiUO/RrQudGHWEmLcNWW20ddXSF7FNQE4xDjFPZ1kL0
NKnPnJpxnPlANs8MtFXMQfIFdY3EljO9RxhD0SdyXUrdV5BxmZrvXGtQar3R
XVYSzPHatGmT8XgY49F0F8tLBP0v+ols+ZlE74BnCzX4hdaZk6dlbpvcm/Qt
rG9PngWF65OpRphz0blz57LrMddQacg6C2J76T0MM230Wqyk+mQ0gzyz1CHk
Oi7WsVdeeWXU1YsUGvxFM/VkS9/KMR6QC543vMdS/V6zPW/4dhIDlN+oNJ3F
hAkT4twc7Xmma8w9wNhYCj26iIhIuUJN7gknnFBlzCS/1rRp01jHveGGG8Z1
P2MoOcdCw/yDPNmuu+6aM2efmvOkR+706fnLCcuCwzyM+p9M3sPJxjzt6quv
LvWulh3c8+Rz8WQg/kFMDV8JehwQ4y60xiLJ1ZOnJzfPM7X++uvnzc+CmBU5
Onwsss3TiWdzf9x6660xdr0gMdXbb789euqmfybxlv3226/OtZHsAx4PxNvT
+xihfXhvYmHr6wBfD/L2yfeiHSA3lK5DIRdE3Jr1LDUGeFAkPSrIl1MTyM/W
XHPNsM4668Q6XbzCqWti47+5PrzzuQe5TrxfE48R/A3QaKBBoE9IqfMguWDf
0A+ia+DeQIePniJd38Oxcb+j0cdngr4oeF0k52WLLbaYf244XzyTnD88ZlLr
f8lP4FfLPYEuEZ0C91y6BmXu3G/i+UNrwfOF/0+59byaNWt2vL9Sx17OE/MB
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
L1W9uzOOo+/3MtBtyJfVp/lflj2Lcm2zac2p6xu++c1vJq6war3pwTvooIMm
fbqdQZ90FrRrOKCy+ytWmmtfXiAQCAQC0wbcQp7nftGhz0Rts83eCvUefrb6
rOucE25fb3lgMsBJmB1bdZ94xD733HOTPt1OwDOut17PoN5xXDf+Q0w7zp4+
cxX4FngHZD2N8kL9fLPta/Pd1OT0Lg7PHxg9fG8+9GrbM9WVyFPwk7Q7/+N/
/I8lfjbPYb1yf/zPuffC+SyeePy1hz+Dz4Fr1yZ8tny9Ce2Dn6UW42c5XD/3
yq/+37Xqu2/FTJFdk+waD1+T7Lr4M39n2q+N3lFzdoZ1Ud4F+OZJe7kHJg96
o1133bV0/tNf/dVfpfduIBCYO7yTzf0qmhvioDM///zzZ6yDo50rqnO/8Y1v
TL5PTXGndIq8sl7zmtcs8Vn0qzzdxlHTrgPa59VXX700l7niiq8k3WrfUOYh
QQNDhzEuPwscwoEHHph7LmYnHnXUUckDZRygZeapN3wOamTj0NLQucufaTyG
fWX8v5lt9NB9fNb6jGnVWdBP4PCquJr9998/vSv6Bj3VO+64Y+X3w7fwM5xt
L0kgUAXxmD6jPH5q+KClM9PUHtQ34DC33377WuvNfO9Yby+jTzoL8TANbt59
Fa/gjv2d+dKfFQgEAoFAXfCjLOuVGj30W4gJcXRtQX3rO9/5zmC11VardU5q
qscff3xr5xMoh3xcn0TZPVK7U8Nr0welLxBj4w+33nrrxN2IVfl08uanexhn
37g8Saw/rIfgU633cDZzAvSF0VjQJODPi+aFyLvUcOUUzz///Ixr2HwI+Cya
t5I3q8YcCD2eTYFvhXflcO9npuWI/CLQd1h/55133hIep3jZmKsaADEfXx8e
REX7PA0G7Vvb85QCgfkAsbVZBmXapmWXXTb1/s80bjQjYvPNN8/9mXhVM0Oa
mBUlpqXZ4JExPHNIbOj/aT1ouLqi5ePHw9OpKG7Vm8n/q4/+TrQsNC15uh3a
mnPOOWfws5/9bCznoq5kDmnedZYX4RnqzsmbK3iXmSE3fA764vXHtwmaFnEX
vfnoNaA1OeSQQ5KnTB+ftT5j2nQW2dwm8xDL5r5l72XzRby3+wb+T0XvlNGD
hwB/x0CgaeCwvUOWW265yvUmpjCzalz7bpOgA/7sZz9ba73xQuyjB1gb6IvO
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
nDB6Mv3kDlyOdyTNpXfhWmutNTj00EOT5mA+6b5o8OhQymYdOLzDjzjiiKRH
CQTawiWXXJI0PVV8MH8snGFXfGdxrPjUstqYPi6zJZrQsAYGSUNc1YNKT9y2
p/7ZZ5+d8soyTdD5558fM0MCgQmhbzoL8zSqes8d++yzT6/89eGhhx5KurOy
fifHyiuvnLxz7a2BQFugs9Bfzzulilejx+iT/yquXn5n/nfRrOzsu9FhXHzx
xYNf/PsvWj8vHrnW9+h5yM31h8nf+1Rj64LOgpbGPI68+yuf0jcrv2pbs3bQ
gQclX+Si58w6o+XRux4ITBPk9WqX9Gp8OfFquIp3vOMdcdQ49HC7ZvYiOjwe
PX3aBwKBKqgx6PVUd8AJZrnolltumfo+abTaeubNQ9hxxx3TO0lP2KJFixr9
+TwyzjvvvBT3lM0MUZvuCnc7Cey1117p/pdxxa6T+SuB8YD+mF7B/kPnUsW9
iGN5vFtTmSacPkpfiP3f/dVjp4f5qKOOSt4k9Bh/+ENzz71Ynu7/Ax/4wBK6
JjoRdTvzqoNDCQQCTYCu68Ybbxx85jOfSTGE/iTvQvxSNg/JHCXHaqutljxg
/bn3U/Z36C3+9V//dXDvPfemOWPTDvuC2E79t2xPoVU5/vjjU70iEGgLYgIa
qKoYRx7Oj6Yrfa5mEZljUlYb836hcW0zj5ovcP0OPPDAQu89PXP0Dff813u8
bd1c2awYsa66gd690NYEApNBX3QWuCd9PuLXOrk+f309GH1A1ufpPuCQir6T
d7d64SmnnJI0iV2Cfcd3UGu/6aabBl/+8pcHp59+etJ0H3zwwSlGxl3yzwvv
t+7DesN94cKq1pu9XHzalz48640XOy7wf/2v/1W63swN9hyP45l1zfVTyilH
z0V/Jw3WsJ5fjC8Xl6fiQc8888zBscccOzjkkEMGJ598ctIx4DbpSfD8k8gJ
Jq2z8L3NhTGLuejZXWP1NZK+oS24Buax0vT82Z/9We55uB5yN73+deNyfw+3
Yy9oq8/XZ+ihN4PrmGOOSX2H+OsXXnih8c/KIB9w35rWgeud8Y4y+8esb/3F
t95ya9I20dnQfPt+J5xwQuqd0V/Ec6GtOT3Ze4jm3Xq1rzsXa3zaam2uoXcb
XrFq9mkcxYdrp0akZjsfeNjA/MDTP3p6cNxxxw3+5V/+5ZVn3SwB80PszW2/
D3nFqIOoefzzP/9zelc1iQcffDB5NZStbTHSTOIQ10RshWOdFm0mvXaRFtVB
Z+HPefZOI8ToYhQxl1jQvjnJ/mbPmNrhZpttlvKhsj5Pf2bNmq8ovsriN7Ec
XQxvY3sXncXmm2+eOAKeym3MOKfZwoPnxRtibV4WDz308LzqHQ8EAs1D3u19
J34x94sfk74YurStttoq8Q96ny+77LL0Lr3pxpuSt6UYXq6J13nb296WYg/v
WD3p+gnlo3iDaYY94pvf/GbSkZfFRuqIZq3EvINAm+DZZQ1W5eF8aa35LsQP
4qtrrrkm1e0yffro4X204YYbJu6uC+fcd/CGEEMWPSt0czwYH/v+Y62dA56U
fkJfZtF5qBvQNoux6/LDchB5h/l+bcTmgcB8Q190FngkewQNcNn+p24mjzYz
pC/6LXw53khNu8xTFofx2c9+Nr1bu7JXeg/jStwbMYr5qvgUPav6MJ0zjaV6
tbwDl6hnTb7xcg/Lq2cgiLvVDfEkcoyYRz4ZeCatITNsq9ab+6tm2Zf1Ji6l
BaKhL1tv+MDdd989aSzGsd7wq2ZQ5vnyWj+0Sv4O7lMt9rZbb0t1Yf0T+rb0
YtJh6RWjH1G3N5sYv0+DoQcaLz/O9TRpnYWeup133rmUt3f95Extwf0y9zHP
pyQ73DczsWaiDeRtgouhf/D+bcOfzmfgj/TZOMd3vvOdST99ww03NL4maA48
o54Lfb32k3vuuacRDYk989prrk1rSC3HHPhtttkmPZfyoTXXXDPV2Xy/N73p
TYnX4R8pl7r//vsb+oavhlyNPopnEG7NscEGGyRd17T1WdrTPadVfpxxVB/2
B5ocGqtAoM/ItILiGDmD94O6qPdvprFoWx9qb6H/5mtlbdkLLr/88kY/g07R
98tbz74zLbOZYXX1866bPc1e8b//94Fpn2zbn3YcoMkv6zVwf/AT9MPTAs+3
WMA99NypvelppgMXe914w40pLpxEzk8fJH7G11btS3L9rbfeOs3iyHJBvRdy
Q7+P6/d3xF3uX1vfRxyprvme97xniXOkc9bf573S9pzAQCAwvfjjH/+UeDIz
rPbcc8+UO/IixnvqqaCdl896HxXBu9/7cuHChWl+kveTeMBh1qkc2L+fVg4U
ry/2wl2V7S32fP74femdDPQTfMKr/CysTToovUZdWJfZLLYijYUD123OSdTN
mwFvVrqVouutV1L83uacI7Mu7Q/4yqLzoF9z32cSay9evDjllThY3GcXnvFA
oM/oi87CnuZ9UeYpOpxH23v6APue95r6StF8Bvu62unGG2+cNGaj2oRJQH6g
Xu09fOyxxw7WXXfddI7Ol7ZO7R1vyTvJPuC+2XvUV8UxZuzyHMEV+j5qkfYN
fWVZLey0005L9xFXExgvaGBwfGWzkh2Zbp8upg+w3vg/8Fgrmhdivb32ta9N
sbTrMK7ecjm5GnbeOcnd5fN0FvrcxEC8J/Hz1hMe1L2y3vT7+W/rkY9DNi9Z
3YK+6fnnXxibJmbSOgt+BN6tRc+vd9VJJ53Uql8JnQC9Dq1M0fNmz9LXUbdW
4rp673ouvGdpaZru9fBe5uugv3f4fD1v8rome2h/+5vfpjqD3h57h2tC56Dv
kf/EXJ9XHE0e7152yFs/+MEPJg1L08j4NdqOYY8T/y03ssanKb8RK+jnUmfx
bsVHegeYWRxH9ZHNcnbtaB/1w/3h95OPAwOB2QL3o05Bg8in0PtWHV0s84lP
fCJxWePw4BITejdl+la9+036W9n/9bQW5Xc+1x7O16ju91V7ET+Jv+2VNBrT
4BMopinrbc1i2euvv37Sp9oIxDW4WPoK+Qa/h2G+XHwqNuRRPU7/ImtTPr7v
vvtWau0dnm1aijvvvPNVP0ccw1fC9xDb0Fi0EU9lyOIqceOoXt064eX/hS98
IbygAoHArCE3k9PgZPQgyFnxSXop8GY4j5nUtnCcV1xxRdJqZO8tPUDyT+9U
+8Q05YMZMj9HPEbZ/iI+0lPSpo9mIEAPTeNd1g+CcxXHdGFmCG5ar473RtE5
4+v0v4rFAs2AvqGMT8T1iunF0G3AXsDHkFcFTqgoV/rwh9dPeXTdvcOehdt1
/nhfPdFd6ekOBPqKvugseCaowRS9U7LDn8v31e/7gIceeii91+zdRfsk3oUf
nTpcF9553tl0xTRvauz4/+Hz5znCd8M+Q0Pi3t19993Ji1e9FY8ql6C7wME8
+eSTqUao31UvE+4QJ+NeqkM98sgjU5ljdBnuibnYZfPeHGqh6vd94Xj5Fnzu
c58r9cC13jbYYPwea9bLOuuskxsvienEbHxvcIjWju9AR8HL4vDDDk/cs++n
Lu2/caTLL7/8KxyjvN3axDPyKRgHJq2z0PddNvvT9dNP0ZbvtudHr2LmSZ53
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
uj8z4Wbtufqx9dn0GXztxYz8neusN5634+q/tt48l2bxqPPSjPJPxq/hC4vW
m7hBbVPfv/pxF/XwYmj9C77H6HPlfcHPp4nYWY7qnvEFy7tWnvs2Zg2OW2eR
zb0oy91pfmlb2s7b7RH8U/LOwbnxTKAXKkM2R5suRD8NTdEO2+8wePLJJ1uZ
VUQvljc3KNMDyDWaiMPdJ/2J9ve8XpaVV155cMEFFzTwjZZENq9kjTXWyL03
ZrP486bgetGg864ffSbVDMQPekzHNR8rEAgE2sKvf/3r1NOjFl40M7FrB/2C
uvCPfvSjxuIg+xufsDwPMYf937WqgjyT/ltt3nn6d9/97nenllOlLXYvyu7X
e1Z6T+rv7RvM33D/5NZi8QsvvLD1HmVxrmeIltosHf0Tebm9GWryJX5mcvPZ
xJfWD50MHkScTSs7F54j09Q7d3zwaJ83rQov57bi4UAgMP+Q9Zvhlb3LcE30
Y/b0tvZdnLBZpqP5sD5j+/+09Rm7xvbDojm/2WHGK25yXDMaAoEMuDfxWl7P
qd9bYYUVBt/85jdbqeXIDfhYmC8oVhyN2fD05tteeumliR+f1nygC3Bt+YWY
51T0rpLryl3afk+pZYzWbLNDf9oRRxxROU+avy69hvjZ/mYODr9r+1sbdYBA
YD5jEjoL9U7rWRyrJ5f+S17/2GOPpRqZOr5+Hb0Lakt1eDL1Gu84eb6fi7uY
7eHf89PhaaYOqvZkv7vqqqv+K6c/I10vHgb6YZdffvnUi5737vV7eDF63C23
3DLpF/wsfEAX90T7g3evGleex4TvYyYwTqMJqNPrd8v7HB5ZnodxQqxyyCGH
VHrWjh72KbMrunhPIa23XxavNxoR3hDWUFUfWXa4b3qV+Bw2td7MAFlyvZ3+
ynoTU8q5aDaL1ps6Jr5QXfq0005L/YldXW/yTPynfv7R+qtnkP+X6zBX+O5q
vTQ0ebP9vKPoLNryDhinzkJuQpviexbFw/Q39Dptw7qjSzBjJ6++7l3qeS/7
99aEPA/Pg2MWF995x50pTm4DOPY8n3fXk+6HFq2JONx387P4FuVx/vbLJrUO
w1B38G7Im1fiXLbbbrsUFzUF71j6c2t6+JmUp4sNzN1syqs+EAgEJgX7kr5L
8VcVf96lQzxC2/2Tn/yksWthj6OvW2mllXL3uN13372yxk5PQRNKo4dX1U91
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
gdq0aaO6dJEwCxcutPpf3xgjt7hkyRL55Bcg0FDccccd7pBDDsl2TekLM2nS
JMspi4LFSy+9ZD186IdQrVo19+2338pXISLwhUJvhk/UEUcc4dUntWx5uXvr
rbfSvatpgfPz6aef2hh8+OGHXb9+/dx1111nup+OHTu6Xr16uccee8w8ttKp
/fnjjz/Mm6lo0aLZtDJc12uuucatX79+789z/6BV5bo+/vjjrk+fPq5z587u
n//8p7vxxhvdvffeazrD+fPnW68Rvl8IIYQQQgghhBBCCCGEEJkPebQxY8a4
Y489NlttJp+TTjrJPfLII+6nn35K966KAszUqVNd3bp1vf1patWqZb0J1J+m
4PDhhx+65s2bWz4+3PcAHwR885WfL3jcf//97rTTTnPFihVzV1xxhbwsIoQc
Ovqj4447zu6T8LOQv3/wwQfNK2Z/4ddff3Wff/65mz59urvvvvvc1VdfbTqf
008/3ZUtW9Z61+CZw3g88cQT3RlnnGHjctCgQdb3LDwv2f3zbvu+t99+2338
8cfWoyVqbxDmTNwnvvlSiRIlTEvBz9Bbae3atW7s2LHWi+eSSy4xr4syZcq4
o446yvqL8POnnHKKO+ecc+x52rVrV/fyyy+7r776yv3111+R7rcQQgghhBBC
CCGEEEIIIaKF2skNGzZYDuDII4/Mljcgl4CnBTWkQuQH9BOPPvqoO/7447ON
r2OOOca1b99evWkKEFzPN954w5UvX968K2KvJ/4WTZs2dcuWLUv3boo8wnWl
Fp8cMNeW3i/ymIkGNEfvvbfQNAJ///vfvV4Wl112memT9gfQEKAl4DkyYMAA
d8EFF9i4Q3/CM6R06dKudu3a9vf4f1x00UWm06tYsaL9e8mSJc3j4rXXXjMt
Bd/3xRdfmF7jzjvvdFdddZW7/vrrTUOK906UmgX0G/hs+K4hutT33nvPbdy4
0fwp+vfvb9qKAw880LSs6EcaNGhgHmIcF5qSKlWq2LHjjcHPccxoW5lz8V6U
3kIIIYQQQgghhBBCCCGEyFx2795tfgPVq1fPljflQy95ak3VM17kB2ri8Xz3
1XCTN8MjnjpkUTAg9/7MM89488X45tNPhDyjKDigsaDPS6NGjewdULNmTffi
iy9aTb5InO+//958DvAwCPeaQMvI3+N7gOdFYYZxxvMDjcXIkSNNO4G2IDgP
xYsXd2eddZa77bbbTINB/41t27bZz9O/7IEHHjD9Bc8Z9BaNGzd2r7/+ur1j
Hn/scdM0xJ5b9BhPPfVUpL048Js4//zzvf2SKlWq5NasWeOef/55d/HFF9t+
0l+kXLlyrl27du7pp582L6Avv/zSjmvp0qVu1KhR7vLLLzfPjmBs4OPxr3/9
y82ZM8fmZ/J6EkIIIYQQQgghhBBCCCEyE+olyX106dLF4vvh/AH5VOovyQ2o
F4DIKytXrrQck6/+l5wZHu/K5xYcNm3a5AYOHOi9ntRsk58nhygKDvRv+OCD
D/bmqamp/+yzz/S8j4gZM2aYZ1RYY8HnsMMOcy1atHArVqwo9Pl0+nzg94AG
gWdFoL1Do4AeAT0n7wu0BWgjGH/MTzgv6DzRU+BPwfni5w899FDTZcydO9f6
T4W1X2g3bu93u/XxiIphw4a5ChUqeK9j1apV3bXXXmu9QeipRK+TG264wa1e
vdr9sOMH99tvv9lxcDwcF//P361atcp8PYI+TOw3OhK0r+gyfv7558j2Xwgh
hBBCCCGEEEIIIYQQ0ULMn9pJeoSHc0H8mbzCkCFDsvVDF2JfzJw503zfw3kp
ckqXXnqp1XoX9vxiYQI/e59vPjnTU045xa1du1a6mQIG/QlGjx7tTj75ZMvv
0ssH7Z16FiTO1q1bXZ8+faw3hO+e4ZzPnj3b7fyhcPdOwqtj0qRJrl69etaj
LNBYMN6qVavmxo8fb/4VaH7iwXjk2YJWo23btvY96Btq1KjhihQpku38MncZ
NGhQZPMWNBE9e/Y0fYfvWrIv6EfYF7QkeJSgV+L3crqXuNcWL15sPhmHH374
3n3ne5o0aWLPXD1ThRBCCCGEEEIIIYQQQojMhRr0oUOHuvLly2fLIeBrfu65
57olS5ZYrakQueXNN9+0Wu7wmCK/eM8996hmvoBBPvDGG2/Mdj1LlChhtdw/
/PCD8vMFDOrl6dPQunVrd8UVV7gxY8ake5cKDS+88IJr0KCBeRSE75kTTjjB
de3a1d69hfk5+PXXX7snn3zSnXfeeXv7hAQeEA0bNnTjxo0zPUpue5OhS5g8
ebJpEAI/DJ9XCL04RowYEVnPsw0bNpi+w7etQBtx0EEHWc8PfH3y4qPBc3PC
hAlZ5l+MGTQdg+8bbBoUIYQQQgghhBBCCCGEEEJkLnjHU6uO/3Y4l0CdJf0C
Nm7c6JzSqCKX4G/Qu3dv81AnZ8QHX/Wbb77ZLVq0KN27J/LI5s2b3RNPPGEe
N+RJuZ4lS5Z0LVu2NO8S1V0XPMhDkxN+9dVX3axZs/73jBcJgW4C7UCHDh3c
Mcccky0nf/DBB5vPz4IFCwqtxoLjQkPy1FNPuTp16uztixH4P5xzzjmmv8iP
dpM+ZvQZQQMaT/dAHxz0DlGBFinQdoQ/aCLw10BTiLYQj5i8wD24ZcsWV7du
3b1eH8GHczdt2rTI9CJCCCGEEEIIIYQQQgghhIge6kRfeeUVy4OHY/38mVpL
es3/+kt8b28hYsHbYOHCha5Xr16WQ6pfv77r27evaXrke1AwWbdunbv33ntd
o0aNrA9Aly5d7Lmh6ynE/6BXBbnx0047zZuXr1ixort/8P2F9p7huNAaTJ8+
3VWpUsU8J2KPH20W/ln0jcov6Lr4bp9XCJ9WrVq5d955J7JjevTRR13VqlW9
26LHB8/DpUuXJuT5hZ9MuAcKulc0romcKyGEEEIIIYQQQgghhBBCJBdyI3hj
E9P39TsnV4LPObkEIXILdbjknn788Uf78P+qzS24UKeOJiu4nvSdkI+FEP+D
9+gXX3xheXffexT/BXrvrFmzJt27mjR+++039/HHH7vKlSubd0f4HNx6661u
2bJlCelMli9fbhovdAg+7UP//v0jPcfXX3+99UfyXU/0g/hY8BxM5JhuuOEG
d9xxx2XbBv1K5P8khBBCCCGEEEIIIYQQQmQ25E+XLVtunt54cofj/XhaDBs2
zO3atSvduyqEEEJkFN98840bO3asO+qoo7L5OPA599xz3ZQpU+xdWxhBZ/DR
Rx+5du3aWV+hWL+Jgw46yJ1++ummSUCflQiffvqp69GjR1ydxcSJE9327dsT
Pp49e/bYtbrgggts/8PboYfSgAED3A8//JCwP8ldd91l3xfeBvOx8ePHJ3ws
QgghhBBCCCGEEEIIIYRILnieP/bYY+6UU07J1vucHustWrSwXuVCCCGE+B/4
OMyZM8dy8uHeW2guihcvbv0yNm7cmO5dTRrr16939913n/kyhOcPRx99tPUc
+uqrrxLeDlqOq666Ku55njdvnvvjjz8S3g7XdNWqVa569erZjocP86FZs2Yl
vB0YPHiwt9dM2bJl3T333BPJNoQQQgghhBBCCCGEEEIIkTzoC/Dll1+6q6++
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
t2LFCutNEauxQGeI5wF9H8aNG7ff9c36+OOPXdu2bd3f//53r06gQ4cO7v33
3094O2gsuAaNGzf2ahIaNmzonn/++QiO6H98+umn7tZbb822Ha43/WK+2PSF
+/333xPezpIlS9w111zj9c3gQ4+UWbNmRXBEQgghhBBCCCGEEEIIIYTIBMh5
/Pzzz+711193NWvWzNI/JPDw7t69u3mKCyGEEAWZ5cuWu86dO5uuMNbDifx4
yZIlLce/bdu2yPpjFBTw97jwwgvj6gTuvvtu99lnnyW8nUDncuaZZ3q3065d
O9N2RgX6hxtuuCHbdtB4nHXWWTb/iYKZM2e6ypUrZ5tDBZ8BAwa4dZ+ti2Rb
QgghhBBCCCGEEEIIIYTIDPbs2eN27NjhxowZ4+rWrZsl90TOoFy5cq53795u
69at9rNCCCFEQWP58uWuT58+1q8i9j1Hzv3kk09248ePt/4P+1O/kIAF7yww
j4l4OovHH3/cenAkyg8//OAmTJjgKlSo4PWYuP32292WLVu8v8v8gz5mQ4cO
dT179nRTp0zdpx5m6dKl5ssV3hZeJi1btrT+aYny3XffuYcffjibJxifAw88
0Hwz5s6d63755ZeEtyWEEEIIIYQQQgghhBBCiMxj8+bNbsSIEa5OnTpZclD4
iFOnOeT+IZb/+M+f+18OSgghRMFl/fr15slw6qmnZsmD836rWrWqe/DBB+39
9ueff6Z7V9PCwoULXbNmzeLqLJ599lnTYybKt99+67p16+aOO+44r/YBPUe8
Ph54T7z99tvWW6Rs2bKuV69e+9RZxOsbwvY7deoUSc8Q9qlNmzbe83bUUUe5
O++803355ZcJb0cIIYQQQgghhBBCCCGEEJnLF1984Z588klXq1Ytd9BBB+3V
W/D/p5xyinv66actX7A/1vsKIYQoWPCuwosJv4Fwrwo0FlWqVHEDBw40r4b9
2a9p8eLF1rODc+LzmZgxY4b1/EgErgW9R/DNOuyww7JtB73L1KlT4/4+13HQ
oEHuhBNOcMWLFzf9xL50Fhs3bjSdQ3hbpUuXtp5oieos/vjjDzds2LBs+h0+
hxxyiDv77LPdsmXL3O7duxPajhBCCCGEEEIIIYQQQgghMh9yGVOmTHGnn356
lh721LmedNJJbty4cVb3u2fP/tW/XgghRMEB3cS2bdvc5MmTzZOJPliBboD3
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
     "], {{0, 290}, {
     2138, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{477.8473958333333, Automatic},
   ImageSizeRaw->{2138, 290},
   PlotRange->{{0, 2138}, {0, 290}}]],ExpressionUUID->
  "31c49a25-119a-4889-b6d7-82a40d99df30"],
 " with  ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qm8lfP6//9zjmM+OZEcMxmOkCFDZg1S5oxJlAzVyRQiU6Yi09ecUFFC
RYaKCkmUStFAMpRCMiXKFAqf/3l9zm/1X3vttXe199pr2Pv1fDzWOYbsfa+1
7nXf97qv9+e6ap3Z8fh2f/vLX/7Saa3//s/xZ1zW8OKLz7jihOr//ZuTLujU
of0Fbc8+/IJL2rZve/G+Z672339Y+69/+ctp//2jf//vXwdJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
qgSWLl0a5syZE1577bUwbNiw+BgzZkz44osvwp9//pnrzZMkqYhffvklTJs6
LQwfPjwMHTo0/v/06dPD4sWLc71pkiRJkiRJkiRJqgLIUvz+++9h7ty5oVu3
bmG33XYPf//73+OjTp064emnnw5//PFHrjdTkqTlOHfNnz8/tGnTJvzzn/8M
q622WvjHP/4RTjvttPDKK6+EH3/88b9/KNdbKUmSJEmSJEmSpMqMvhaff/55
rFFtvvnmYfXVVw9/+ctf4mPDDTcMDz30UPjtt99yvZmSJC1HDnD27NnhuOOO
W37e+utf/xrWXnvt0Lhx4zBw4MCwbNmyXG+mJEmSJEmSJEmSKqmffvopvPHG
G+Hkk08Om222WZGa1RprrBEuu+yy8M4779jfQpKUV+hvwTlswIABoUmTJuFv
f/vb8qxg9erVY+aiV69eMVPoTCxJkiRJkiRJkiRlEvPtX3zxxXDGGWcs78We
yFrQ16J169Yxi0E9S5KkfER/pj59+oT69esvz1skMhcNGzYMjzzySFi4cKGZ
C0mSJEmSJEmSJGUEc+1feOGFmKlg3n1yjYqsxbHHHhsmTZpk1kKSlPfmzZsX
evfuHXbZZZew5pprLj+fcX6rV69eeOKJJ8KXX35p5kKSJEmSJEmSJEllRq1p
2dJlYcKECeH4448Pa621VpGsBX9/xBFHhJEjR+Z6UyVJWmlfffVVzFxsv/32
y2dj8aB301577RUzF/R1kiRJkiRJkiRJksri119/DbNmzQqHH3547LXO7JDk
vEWTJk3CoEGD4p+TJKlQ/PHHHzFPccstt4Qdd9yxyLmN/MVBBx0U+vfvH37/
/fdcb6okSZIkSZIkSZIKzJIlS8LkyZPDcccdF2rWrBn+9re/FalH7bfffqFf
v37h66+/zvWmSpK0yshcfPLJJ+Hyyy8P2223XZFz3HrrrRcOO+yw8OijjzpX
RJIkSZIkSZIkSSvtl19+Ca+//nro0KFDqFatWuyvnjxDpHbt2qFnz56xTiVJ
UiGbNGlSOP/888PGG29cJHNRo0aNcNRRR4Xhw4eHH3/8MdebKUmSJEmSJEmS
pDzHet8pU6aEiy++ONaakmtPa665ZsxadO3aNcyfP981v5KkgsfMkDFjxoSW
LVuGddddt0g/pw022CA0a9YsjB8/Pvzwww+53lRJkiRJkiRJkiTlMeaDdO7c
OWy66aZFshZ//etfw9Zbbx0uuOCC2P+CXIYkSZXBr7/+GsaOHRvq1asX1lln
nXjOS5z/1lhjjdjv6a233grLli3L9aZKkiRJkiRJkiQpT3Xr1i3svPPORWaI
8GDNb5s2bcLcuXPtayFJqlQ4ry1evDi8+uqrYccddwx///vfi+QN11tvvdC9
e3fnaEmSJEmSJEmSJKmY7777LgwaNGj52t7krAUP+qkPGzYs/Pbbb7neVFVx
1EVnzpwZhg4dGiZOnGivFWUV+xv73QsvvBD3Q1UezBXhXHjnnXeGOnXqFOvx
tPvuu4d7773XuSKSJEmSJEmSJElabtGiReHFF18MDRs2DNWqVSuWtaDu9MAD
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
F154IfbbWNE8GOU3Pmvz5s0LrVq1KvJZSzzYB6+66qp43vS9liRJkiRJkiRJ
qryoW7L+PXVdeeJx7bXXhg/e/8CakXKGujUzIhKZBfoW0OuipH4FucZcCur/
DRo0iLXYRD6C+j/9Kh588MHw5ZdfhsWLFsda/9KlS8Mfv/9R5DPGX1PTpW5P
zZZcFLMtbrrpppizSMwd4a/POuusOFuELAN9NHh9ktfc33777eG7777L4Svy
v/r0hAkTQseOHWMvikSvjuTtTMwEOfroo8P1118fcxX0B+G58fx5XXktyKXQ
04MHGQ7+nteR/YE/S7bknnvuia8/P59jG+8D/UOGDBlSZLuW/rY05l0aNWoU
e1EktqdWrVrh3nvvjT+vrNhWZr+QK+Hn0ueC/AX9TnjPVdiYDTNo0KCY00k9
bybmyDBXhOyVJEmSJEmSJEmSKp+5c+eGrl27xvXfqfUi1pjvsssusS9+6ppw
KRvIHIwaNSrO16AOn6hZX3fddXGORr7NZaDuTz6AXhTMuEj0SqDez/wL5g+M
GTMmfP7552XKL1G/5zNLP5qzzz47bL311vH14P/btm0b+2Uwb4N/xu/l9dpo
o41iXoXcRi6QV6AHBX04yD+QDyF3knysWX/99cPBBx8c+wEMGzYsvPXWW/F5
kh8pSy6B94H5M2TJbrvttviarLvuurHnBbkK8i787GVLl8Vta9myZXyvyHsk
tolj37hx48p97Js5c2a4+OKL4+/n/SBn0qJFi9jnQoWPvjTdu3eP/aFSz6Hs
b8cee+z/+s/8nl/HKkmSJEmSJEmSJJUP9df+/fvHOme6vhbURVmbzTp8Kduo
hX/11VcxR7DZZpvFfZL+A8yLYI5EvmWA2B5yAueee+7yHAQP+iT85z//ifNQ
Zs+eHXsylAc5DX4GvSLOOeec+PPpdUG9l9eJun7ybI79998/vPTSSxl6liuP
zAPzOziGUHNO9ORI7mVB9qBhw4axJ8fgwYNjhoZ8RaZ66fA6MfOBXiPMnyGz
Q5+LfffdN74fAwcODO3atStWK6c3AcdF5rmUN6dC/43hw4eHI488cvnP32ST
TcKFF14YZ7+osLGvkushQ5OuxwX7Fr14yFhJkiRJkiRJkiSp8vjggw9CmzZt
Ys0ztU7EP2vSpElcl0u9UMq2b775Jjz66KNhm222ibkBavW77rprrMsvWrQo
15tXBNmCt958K1x22WUx75DY3tq1a8feBtTVK+JzlOjNkOhnkfog08CsEXIg
2UI+gd4RL7744vIeHOmOL/SPaNWqVcw8kImoyF4lzCF55JFH4jFtnXXWia8L
f33QQQfFHEjq9tFv45RTTslY7oMeCA8//HDMWVCD53fQ/6RHjx5xv3BWU2Hj
WEV+J/n9Tc5cHH744eHll18ud9ZKkiRJkiRJkiRJuUdtjzXkrDvfeeedi9Ua
6XlPXfuOO+7I9aaqiqIuSQ+LunXrxrk27JfMxTj99NPDsmW/51V9mm1hhgg9
Gui/kdwfhvzF/PnzK+x3k/Ng7fyWW26ZNm9Brff2228PH3/8cYVtQzKOK6zj
HzJkSKhXr17MNiRvDzkUshbkHO65556Yg8jWTBj2KeaqcGzjGJfu9Uo8/v3v
f4drr702o7+fzA37L1kOfseaa64Z56vwz63DFz6OAeQX6aGSuj+RvbrxxhvD
vE/n5XozJUmSJEmSJEmSVE6//vJrrA3RUz/dunjqgNQFP/vss1xvqqqod999
N1x++eWxTpmojR9yyCFxLkO+WbJkSbjqyqvCFltssXxb6Z9w6aWdw3vvvRd+
//33CvvdZD3eeeed//6uS9PmBnj9RowYEX744YcK24ZkPN/rrrsuzlDg2JKa
ayCPwryVcePGxaxFNnMz/C6yLz179ky7bcmPAw88MAwYMCCjv//HH38MEydO
jFkOfjcP+iEwE4b+FypsP/30c3jzzTdjTxs+/6n71D777BN7rEiSJEmSJEmS
JKmw0bufmic10XQ1R2qNffv2jWvVpWxbvHhx6N27d9h+++2X75PUpclfLFy4
MNebVwS9GZiHcfDBB8dsQ6KHA/MDRo4cGbMYFY3cAr9rs802W74NiawFGZBp
06ZVaOYD9Gd47rnnwplnnrl8/ktqhmvbbbcNd95553+3Z3rW8h/ptnPq1Knh
pJNOKtKLJPVx3HHHhSlTpmT0d/MefPfdd6Fdu3bxveL3kPtg3spTTz0VZ1Ko
cHEsYM7RhRdeGLbaaqti+9R6660X5+uQJZMkSZIkSZIkSVJh+vbbb8Ozzz4b
60HpelvQ6//KK6+MPe6lXBg7dmxo1apVkTXixxxzTHj++edzvWlF/Prrr2Hu
3LnhxBNPDBtuuOHyrMU//vGP0KtXrzhXI1uo4ZKTWnfddYvUdw899NC4jRWF
GjN5j/79+4fjjz8+5mLS1Zn333//OD/kk08+yXmOi2Pg4MGDQ61atdLmzTgu
dujQIf65TCNzQY8W5ogkMinMfGnRokXsfZFPc3K06pYtWxbGjBkTGjduHN/X
1H1rl112Cbfeemv8c77XkiRJkiRJkiRJhYX6Dv3O27ZtW2offeraFb0eXkqH
fhDdu3ePMxcS+yT5hVtuuSXvZi4sWLAg9OnTJ/aQSGzrOuusE+rWrRvzD2QR
suWjjz4KrVu3Duuvv/7ybdl0003DZZddVmGvG8cTMgkcLw444ID4PqUeT+gh
0bBhw3DfffeFn3/+OauvSUmodX/11VexJp5um+n7061btwqph/Mz6YFwwQUX
hJo1a8bfR+ajRo0a4f7774/9L1S4eH/JH3Xq1Cl+/lL3LY4PzEWa8c6MmNeS
JEmSJEmSJElS4aCW/dBDD6WtA1Hzo+c/a9A//fTTXG+qqiBqlR9++GHsk5BY
+89+ufvuu8dZFfmEbSVT0ahRoyI1ez5bzD3JdjaEGUFdunQJG2200fJtYR7L
oEGDYn2/Ivz444/h5ZdfDnvttVdYe+21ix1T6E9Cfqtfv34x45BP6LFx7bXX
FplZk3jUq1cvzlOqSI8//njscZH8e9u0aRPGjx9fob9X2TFkyJBw5JFHpu2f
wiyZzp07x2OEPS4kSZIkSZIkSZIKB/3qzzrrrCJzGhIP5hDsu+++Yfr06fa2
UE7Q++C2224LderUWb5fkrtgrfiMGTNyvXlF0KthxIgRcb16IhvCg74czOtZ
vHhxVrfn66+/Dr179w6bb7758m0hp0J+pSLW0fNejRw5Mhx22GFh9dVXL1ZX
5u+pKz/44IMVMpejvDjGPf3002G//fYrdixs3rx5GDVqVIX+/g/e/yCcf/75
RX7vdtttF+68884K/b3KjoULF4auXbumzSExZ4TPKXNHfvrxp1xvqiRJkiRJ
kiRJklbC0qXL4tz45DkNyY8tt9wy9vynbitlW2LGQ9OmTUO1atWWZy3IAQ0d
OjTr+YUV+eCDD2J/hNScwS677BKmTJkSe8lkE6/PCy+8EGrVqhW3gzovryXb
kekZHqzJHzF8RDilxSlF5pckZy3IoTCTg9cpH/NbPAe27aijjiq2/fQe4N9V
JPI6PXv2DJtsssny38t7Ro+L999/v0J/tyoex7Nhw4bFmTXpPh9rrbVWnOs1
bdq0XG+qJEmSJEmSJEmSVsLUqVPjum3qPKn1H/7ZQQcdFObMmeNMeeUEPRCY
fbHNNtsszzAwp+OAAw4IM2fOzHhmoLzGjh0bTjrppGKfpd122y3Wy7P9OWK2
x+uvvx623Xbb5XNN/vOf/2T89/A+8NzJBaSbS8SjRo0aoUWLFvGYk+3cyaqg
t0Dr1q1jf47Etq+xxhqhR48eWcn3vPTSS+GII44o8trtvffesSeICt/cuXNj
xpF9KjWXRZaMbNRjjz0WP7uSJEmSJEmSyu63334LX375ZRg3blz4/PPPK/z+
PP1t6RXPzPFffvmlQn+XJCn3WMfNWtsbb7wx7LTTTiX2trjwwgudJa+cmT17
dqzRV69effl+yTyK6667Ll4n5Zvnnnsu7SwKZqFMemNS7F+QTT/88EOcT0Be
JZH7yPRsCq5ZP/vss9C+ffuwxRZbpD2W0JukUaNGYfTo0QVRR2amR6KfCjVx
5jwwZyQbx0L2eY7LybV4siqnnnpq3H/yLWOkVcPnhWwSPW/WXHPNtJ+Xiy66
KO9mJUmSJEmSJEmF5osvvgiDBw+O6wRvv/32MGTIkDBp0qS4xpi1ddTIyor7
tD/+8GO8N07G4pVXXolr5ri3x3z0Tz75xNqaJFVyS5cujeca+lekq/lQ66M+
Onz48Fxvqqoo5k288cYbcbZCcq8B8kGvvfZaXtbtBw4cGLbbbrtinyf6Szz6
6KPhu+++y+r28PvICWy11VZxO5hjMGLEiIz9fK4XmffSu3fvmElIVzvmWFK3
bt1w9913Z+z3VjRmh2y00UZx+1dbbbVw6KGHhldffTUrv5uMNTNg6C+UnLng
NSQXba+hwvfpp5+G66+/fvk+lvrYZ599Qt++fc3WSJJUBXF9Tcb2+++/Dz/9
9JPXA5IkSVI5TJgwIfZ3p68s992oNTBvm/WcI0eOjPOjqZN98803YdGiRfE6
nLoD1+Jcl/Pgr1nXyL/jz9DDgnviH3/8cVzryH3vVq1ahR122CHe0/373/8e
+xePHz/evIUkVXJff/11zPPRwyK1pzmPddZZJ84dyEb/fCkdrlkefvjhWO9O
7Jf8Nf0j2C/JY+Sbhx56qEgvjsSDGRuXX355vHbLJj7nyVmIli1bxuvATCG3
NWH8hLDjjjuWuFaf+S/0i+A6tFBQC09kVLg+7tixY3jnnXey8ru5Bp8yZUrs
RZI854keJcw0YcaOChuZGb7LkR1LPr4lHmuvvXboeEHHgvrMSJKk8uM6kOuE
J598Ms4fI8tNftrMhSRJklQ29Jk98sgjl+ctuBfHPdf11lsv9hSmXzP1BnoL
c/+evhTc4+danHWMTz31VOjfv3/o2bNn/HdXXnllOOOMM0L9+vXj/dqaNWuG
f/7zn7Gexn1kam3U3K6++uqs97qWJGUX92tYJ12vXr2w7rrrpq2R7r333qFX
r17e21HOvPXWWzHzk7xfcv3SunXrvMxaoE+fPvFaLV39dOeddw6vv/56WLJk
Sda2h8ztyy+/HPMQ5GtvvvnmjM6Ne/vtt8Mll1xSrBdD8qNBgwZhwIAB4Y/f
C+dYwjwPepKw/WussUbsA8d8v2xhpsiZZ54Z1l9//eWv4wYbbBBOOOGEMG/e
vKxthyoGtRQ+m2eddVbM1KfrCXPIIYeEZ555JtebKkmSsoSZY3Pnzg1XXHFF
2H///cP2228fjj766DBs2DDnPkuSJEllRJ9sek0k8hapD/45NTL60LL+jutw
7uPvuuuuYffdd48P5gJzf51/t/XWW4eNN944zqJOt46Ke33kNli7Z28LSarc
FixYEB577LG47jzdeYZ/Rp176tSpud5UVVFcizz77LNhzz32LLJvcq1DZiBf
8bkiv5qufkr/h06dOoVp06aVay7cqqD/BDmBBx54IGZB6JuQKfRZIJPFGv10
16o8yGGQ+Z01a1bGfm82dO3aNV47cyysVm29OHsvm3lkervc3/P+2Bcl8VqS
+6hVq1bMIXE/XoWNz+bjjz8e9tprr7SfHXrS0BeGNa5+N5MkqfJifQNznVk7
x7mfNXKJHmfc07333nvzco6iJEmSVAjIWxx++OEl5i0y9eDeP3PGyVpMnjzZ
+7eSVAVwvGftdEnnhn/961+xPut9HeUK+x5zz8gEJe+bjRo1Cs8//3yuN69E
bNv++x+Q9nNF5oL7p8yGI3NRyP3EqP+SQWjRokWJfS3453Xq1In3jqktFxKu
i8kpc51MXxBmP2Sz5s1MwDfeeCNeoye/vmwPvUKYJ6jCRm2FNawnnXRSkbkx
iQf9B1nbShaezIUkSao8uPfKGgh6To4ePTrODmGGND3xkq/9/v3vf8cZoH4v
lyRJksqmovMW/Fz6EjOT5JprronrDgvtXrgkadWxrp41tazdLukcccwxx4RX
X30115uqKuzDDz8MF110UbH6PfX9OXPm5HrzSjRp0qRSs0w8qOO3a9cu1tMX
LlwYa+tcgxXSGna2mTkiPJeSnufqq68eLr300jBz5sxcb+4q69y5c+z9Rn+J
Vq1ahc8++yyrv599YfHi7+NcJ17H5Nf04osvjvfmVTnwPYxehek+Q/TKodcK
9RhJklQYuI5j9iHfu7nGJzdJzvqHH34IixYtiud1ro+ZB01PSfr3Mes53bUA
eYv/+7//i/+tJEmSpFVXkXkL1lBxf5w5gIMGDcrbGeiSpMwjX0ctMd1sqcTj
vvvuy3p9UUrGOq/mzZsXW+997rnn5nU+lDkQzO0o7TqMzx59O+ibQO6C/NP7
779fMP0uWJf/4osvhkMOOaTE61Se44YbbhhzW4XyvJI999xz8f73qaeeGkaM
GJGTe9zM6T7llFNCzZo1i7yufD8YO3Zs1rdHFYOZ7EcddVTazxFrXJkPSf6M
z50kScpvnK+XLFkSvvzyyzgjhB5pZKyHDBkSv2MzZ+/444+P8/hYA8ecaPK0
JfWLM28hSZIklU9F5C24fqdW0aBBg/Dggw+Gjz76KH4PkCRVHayj4TyQ7jxB
r/rtt98+jB8/3v7lyql+/fqFAw4oOpeDuvPVV1+d600rFb2BJ06cGHbddddY
Ky3tumyNNdaIPRT4swcffHCcK0DPiPvvvz+89NJL8TqNPhL5hrV63Cvedttt
S3xuvFdt2rQJH3/8cUHWiZnX8d5774W33347fPvttznJJrMvkY2rVatWkf50
zBihRq/KgWwj82uS+5gkv9/Vq1ePGa4vvvgi15sqSZJWgGvIoUOHhmbNmoWG
DRvGa3z6CtetWzfUrl079pisUaNG/B7APVr6WpC92Hzzzc1bSJIkSRUgOW/B
g5xEaWuRS3ust9568dqeNZTUL6ijcc8un9eHSpIyj/6l9PffaKON0p4v+Ofn
nXde+PTTT3O9qaribrjhhmIzb7hHededd+V601aI9WzMWWYWwKrkZslnbLHF
FnGGBD3I2rZtG/MlrIV7+umnY47jk08+zWkGg6wFPZAPPfTQ2KOjpOfCveHB
Tw4Oixcvztm2Fjqu0++6667Y3yD5tWUd5MMPPxz7X6jw8T7z/Yx+N+k+S+Qw
WAfL51+SJOW3+fPnx2v39ddfP+15nes4rvf32Wef2Mfsuuuui98bDjvssFLz
Fj/+8GOun5okSZJUkJLzFuQlTjjhhHDZZZeFM844I96DJyNNhoJ7c6x7Y+4v
a5K5J8t9etYuc2+OutmNN94YHn300djDjvvezg+RpKqJvN0RRxxRYg8k6tnM
cXD9jHKJOnKHDucUm2NMv4v+/fvnevNWiPopa9a5h/qvf/2rxP7AK5vBIHfC
+rizzz473HTTTWHAgAFhzJgxsfcC+dls1t2///77eIworbcFGeH9998/zJs3
z2xvOZBteeKJJ8K+++5b7DXu3r27/Q4qEc7NrVu3LvHczHGETIbnZkmS8tvX
X38d+0nyvWW33XYLe+65Z7yW4x4umYrTTjst9i+j5/CECRPCjz/+GObMmRPn
2JWUtyCPwZ+TJEmStOqS8xb0mu7bt2/47rvvwowZM8LIkSNjveHuu++O6z+7
dOkSrrjiinD99dfH3PP99z+w/F4897pd/yZJ+vPPP+N5oqQ1tMwSIavHOYM/
K+UC+x7XLszWSN1H6cs7fPjwXG/iSmGGxiuvvBKOO+64UK1atXJlLlIf9JXY
eeedw+mnnx569+4dpk+fHq8Rf/v1twp/XsyhZuYJ80JK2j7W87Vo0aLCt6Wy
Ix89bty4cMghhxR7jc8999wwderUXG+iMoSeONRdyCqVdKzo2LFjzFhJkqT8
RR86ZtI9/vjj4bHHHgvPPvts/E4wbdq02CMuXRaZ+XvmLSRJkqSKkZq3eOSR
R3K9SZKkAkUNm3s7rKmhh2m6eznMPqCeY9ZCucT+Rz8uroFS99EzzzyzoHrq
//rrr2Hs2LGxNxkzmjOVt6Aey4wB+n9Ur149rp3r1KlTVl4b7hUzY3qttdYq
cfv49/RfUPnwWWC9Izmj1NeYHnYvvPBCrjdRGfLH73+E119/PfYs5LOd7nNF
HpJ+J5IkKX9x/UaPsiVLloSff/45rmXgOwHfxcljp/uuvaK8Bevq7HElSZIk
lY15C0lSprAehlpOnTp14nkl3b0c+pwye0rKJe5BDhs2LPbcTd1HL7300vDh
hx/mehNXCfM3Jk+eHG699dZw4IEHxt4UmcpdJB5kH5gDTZ7qnnvuiX2MKyI3
tXDhwtg/jZxHSccRHo0bNy6YPiT5jjWSp556arHXu1GjRtbeK5n33/8gtGzZ
Ms6RTPe5YqZIt27dnNEjSVIlY95CkiRJqjjmLSRJmfLFF1+Ea6+9Nmy66aZp
7+NwrmG99LvvvpvrTVUVx7qvhx56KOy1117F9lNqjezLhYY1bczhGDx4cLj8
8svjjJFdd9019qbIZO6C3jV77LFHuOOOO8Ls2bMznrmYNWtW6Nq1a6nbsNpq
q4XWrVvH56vy4/PQrl27sPbaaxd5nfeou0ecJaPKg5ki999/f9h4443TfraY
NdKmTZv42ZYkSZWHeQtJkqSqJdGL3DU12WHeQlURs8qpS0nKHOp15CgOOOCA
EtfW//Of/wwXXnhh7Hsq5RL760033RRnUqTup9xrXLRoUa43scy4lqamOnr0
6DiH+ayzzgqHHnpo2HvvveO91I022qhYXX1VH8wa2XnnnWPdNtPZlDfffDO0
b9++1N+/wQYbhKuuuir2UVZmcGxOzeZss802cR9S5UHP8SlTpoQddtihxP4x
zBR58sknc72pkiQpg8xbSJIkVQ3UP7m3zSztoUOHhgkTJngPNQvMW6iqIWcx
c+bM8NRTT8X9n37o5ruk8qMf/QsvvBDWWGONWItNdx+HtfY9evTI9aZK8bqz
U6dOYeutty62n959992xJllZ/Pbbb+Gzzz6LszduvvnmODdizz33jOvba9So
EecKkL9gXfuq5i4OOeSQOG+C1zNTXn311XDCCSeU+nvr1q0bevXqlbHfqRA6
d+4cszipuRZ6FqlyYfZXw4YNY6+adJ+vWrVqxf2hIuYFSZKk3DBvIUmSVPmR
q1iwYEGs0zRt2jTOjaWPKfeCVLHMW6iq4VjDmmbW2dMP/fHHHw+ffvqpmQup
nD788MNw3XXXlZi14HHSSSeFUaNG5XpTpZgPOPPMM9P21KdnQ2U6J1Az5fn+
8ssv8R7qd999Fz7//PMwffr0eA6kT0SzZs3ifVYyF6V9hlMf5DTatm0b5s+f
n7HtJRdSv379Un9vkyZNwtNPP52x36kQru5yddh8882LzZa4+OKLc71pyjCO
BZdeemnMVaT7fJGb5Ds538XpBSRJkgqfeQtJkqTKb86cOeG2226L9/i4b0vd
n3tAleled74yb6GqhjXLrIllDefqq68e9/srrrgizJgxI9ebJhU0chTMLCht
/gB1XfJNUq6RPzjllFPChhtuWGQ/XW211UKfPg9V+nXd1FDp90QG8aOPPgpT
p04NY8aMib2fbrzxxnDyySeH2rVrr7DnBZ/rffbZJzz88MMZ2zbmGDCrpLTf
e+KJJ4aXXnopY79TIXTr1q1Y/Z339/zzz7fnYCXDd+zBgwfHz25Jn+vddtst
ntfpXSVJkgqfeQtJkqTKi3vZEydODJdcckm8tuMeNzXQiy66KM6Vrez3uvOB
eQtVNdTY3n///dC9e/dYZ2MNH/UF1ue+8sorud48qSBRj+ndu3fsT1VSfZR/
16dPn7iuVso1zgXHH398qF69erF+DVX1WojrbjIYc+fOjefDnj17hrPOOivs
sMMOYc011yzxs821+xlnnBFf00xcu/ft27fUYwkPepMwezCbyKh8+eWX8RqC
jOZ7770X+/qQG583b178d998803sH7J48eJ4v5r+ABwfE4/vv/8+/ntyLl98
8UWc88K979mzZ8ef++6774Z5n87LSY+/W265Jb7Xqa91hw4dKtV8Hf1vXyZn
RV8bvn+n+4xtscUW4corr4z7qiRJKnzmLSRJkiqpP0MYN25cXDO13XbbxXr/
OuusE6/9Xn/99Xi/VxXPvIXSYf05a9pYr0ovCD6T1BAqEnWIRd8tyso6Oo4v
1Em6dOkSsxas36W/TuvWreP6Xr9jSquGWiGz3kurjzao3yDODVN+++2338Ki
RYti/Zjj5LRp08LkyZNjbXvs2LGxDv/iiy+GESNGxAfv6aiXRoXRo0fH4+fY
18bGc8akSZPC22+/HevRnFOo2XFsZV11Jmry/Ay2tay97skGHHnkkaFatWpF
9tP1118/PPbYY+XevsqAGvs777wTunbtGtfBM4cr3Webc+j+++8f8wbl7YPA
+9KjR49S8x08Lrzwwqz2pWJ/I1dBFoQaNH346I119dVXh25du8Wswp133hnu
u+++8OCDD8ZsGX+2X79+8dq6f//+8f+5ruLf8xz587feemu44YYbwrXXXrv8
53Kve/z48Vl7bglsT506dYq91uRROSaocuFYzPfwDTbYIO1njGPjgQceGM/v
zhSRJKnwmbeQJEmqfFjbyszo9u3bh6222ir2LOUe7hFHHBEzGK6hyp5VzVv8
+cef8f3hviu1k6+++iosXLgwrsOj7mFPksL3ySefhAceeCCccMIJ8b47ax1Z
t0qNLVM5KPYV1nRSx3v11VdjzY5aBNmOAQMGxFodtT7+XEXhPjPz61m3mTgO
cc+5ZcuW8blaW5BW3vPPPx+OOeaYUuujF198cazdKj9wvuY4GLNu/z3ekamj
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
KlGL5vzBc0u3v5C1YP5YSfcvOY9wnbnrrrsW+2+p/ffp06dM2/biiy+G448/
vsjP43qlffv2scd+tpGl4D5vut4x/DP6Jzz99NNZyTVy7c5sajIyiet7/p8Z
N2Su2C+zlftgVscdd9yRNofC35MV4B4x30eyjUwK25YuC5T8YD+jL1i+YT+v
X79+kX4qfAYOO+ywMueYVHjo0UKvmH/9618l7sMcC5gDuXDhwlxvriRJFYL8
IZli+ry2a9cu9uql3yvXcPSCKuS5WuYtJEmSCgP3yFkfmFyLpGZw9NFHh0WL
FleKeqvKJpHFKa0/Lb0DWLur7OJ+KTPiS5r1ku7BnyUjw4O6C32z6XNObZDc
P3PL6c1Oz+HLLrssvDzq5Uox+5vaFtmK1Lns9PShNiZVJfQkYvZDaccK1ku/
/fbbud7UvMf10ahRo0Lbtm2Xry+npsXxZty4cRnPq3Iso3bdqVOncPHFF8c8
R0WaOHFi/D3kb0vKEDRu3Dj2CirtuXJfkzkr9FxKVwO8+eaby7R9ZEEuvPDC
Yj8zV73Z+MyQuynpc8X5lj7HZC4qsrcS+8i9994b9ttvv3i+533iOo7Xv3//
/nF9ezav7dlv6ZfG9SLHntTrFnI8zDwjQ8qfywb2SWZ3MyOEHAzXRIkeIOne
u4suujjMfHdmVrZtZVFjZz5U7dq1i7ymvOdXXXWV/QmrED5jV199dVy/W9Lx
hyzGWWedVeb5TZIkFQIyF8xBZMYh10lcF7OWqNDva5u3kCRJyn/0iGZGe7Vq
1YrcY2RGAf19nfFatc2fPz/cf//9Ja5p5XHeeefF7zLKrgkTJoQjjzwy7XtC
juC2224Ljz32WOxfTo97vn9Ryzj77LNjlor17aznTF4TmVgXSd9F/h3rjsl0
PP7442HhN4W9Ho7nwBrQ5OfKcY++kvRxkaoC6nP33XdfXGde0jGdawGuCxYs
WJDrzc1b1Gq5PnruuedCq1atYtaC13T77bcPXbt2jf0uKqKHATOfyMvsuOOO
8b5aWXMKK8L9yNdeey2e33lO6fYT8npsR9++feO1Qml4vcifNGnSpNjP2WCD
DeK5qSy+//77cNdddxWb03zIIYeEESNGlOlnlgfZG/pGJW8LdXzyjDVr1ozX
UhtttFHsfUJPj3mfzsvYdTavMfsc1wZkCDjHJ/pakKls2rRpnIeRq1orfdDo
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
GkQMgEQlg4AiTVSiSEYkS2jiQIM9tAhKBnUQBESJIhlssqIoDIiBYMA8M4hC
/ebzst6e6tPnVNW995yqU/fuZ62zGprLrVMnvO/ez372s32O3rEf//jHie90
vZ1HG7nMQCAQCAQC7YDZ1eutt95isZm6Oh3GdODrUvz97LOdJ554ovOjHz2Y
4qTHHnus87unf5diqOmA3/726TRH5L3vfW+qFashbLbZZmkm+1Tia/UHvgZm
+tJVFGeu66k78sgjU17T5pgza0Z8F57wDz74YMrHxl0jIt7v7tct9gvrJ5YP
1AF1NrUqz0Hxs/ie3HLLLaX/H29iNV3PjtrtnDlz0rVvIzzDfDhe9rKXLfYd
3/e+96U+0kBgOoE2z3tZVX8xa2zvvffu/PznPx/1qY4MtGannHLKQr3hsssu
25k3b97Qz+Pee+/t7L777kkb0d2nrMZqvggeaNCZRzRwe+21V+la133omTcH
Sq1uMp5ZYiy82D777JM0gEV/LDNM6B2uuuqqoWhX3Mv58+en2MV1dJiRRgP4
+9//vvHPDwTqAn/Cc889N3nb5TVhpZVW6px11lmtjscDo4Hnokwv3X3wH7r4
4otHfaqBQCAQCPSFnIf/rnmw8jQczq677pr8WD/96U8n/1X+u5dcckniAIep
kR8m6NW32Wab0n1dvmOe2LhynmoRvt8FF1zQOf744zv77rtvur/6o/R78e4y
L3LBggWd3/3ud1P+PHkrfvW6665LcdMxxxyTPlNdZPvtt0/XeYcddkh/hwPH
B5x33nmdq6++OvHh06W2EAiMGupQemV4OdLPqeXlA59jTWvKFzUQCATqgBr9
O97xjsViM/O1586dO3ZxqfXWuqsP/bLLLkvxFw818bc6hThp2223TZ5rag1i
tPPPP7/zve99L3Hto1yuabDVtOkCJgOxoXumFpR9LvQqffGLX0xx6kRrJWJW
/awHHHBA8qLr7qfV4+tz+Ce41m3qC/37359L99IcePVxtRX32fdQ9xcnmw0h
bqZVcM34iZtJP8pZ1+6NeyR2GHSGzw033JD6k4vvL82NGpkaaV2aKfnDU089
la7fy1/+8kU+b9asWZ1LL710sVqfHFium72u6TI8U216XopQV3znO99Z6uPi
eQ8EphPWXnvthb3+ZYcZQDRScpuZCDEQHzB6K9oA12qrrbZKmr1hQl5pbeIT
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
HX/88eET1hLIEa1L4l26BTMIHnnkkb4aBVoKuXqZ3sJhVre8WfzD09Pv1odg
pqp1r64+AD0afn8xd8/Haaedlp7nQGA6Qn2RpsjcI37dZTU3OiezZfXv8K0J
rVsgEJiOwNHpc8GZl8UDm2++eef6668f9WkuhDjrJz/5SdI8qHtXaSbUCsTj
6qS77rpr6sfEm9OOXHXVVenQl2lWgDq3OoC+SzWBfnMpXv3qV6ectF8/6aCg
peWF53x9trqFftHoVSuHZ1Ycu8EGG/TUTOCj1YjMANlnn33SrPgLL7ywc/nl
l3euuvKqzpVXXpliAX/3+c9/PtUbzSlUTyr25XYf9JnqTXTyddTb8lwzn20u
jueLXp+mpK39vzMJfGbMyyzT7sij8HvhMR8YZ/DRsebw1OylVaTLbHudvCnw
bKAryLpLnHRT67NLbF/ga2omR9HDy+fTGs6ZMyf1+vTyWnKO5p6IcXpxP1WH
GIvXhT3vbW97W/qT7sBcEHFW1jr6vfitJZZYIu293eukfPqEE05I+fS47Wm8
Xy6++OK0B/huPI3UJYbhbRIIZMh9eMuY8UgHRQNkXvnPf/6L6JELTBg//9nP
k6div/VfHUKMGwi0GXh6z6k8Wt+CfVo/JZ4ojv6Hmib9nnmm5gvfeuttnb89
W6+HZyAwVdxyyy1plpq8Ql7E20sNfhBYI/B9vXIgPo+8wgKjhZzWfdXziY99
3etel/rcBpkxwLcCV1E2T8RhZoG45p3veGfKpXkx0vDUrX2wH6kplHmHOz53
2OdiHnFgWkJ9DH9l1m1VHxd/ItwQTyEat6h5BQKB6Qrxpz5N/Ytl66F+xQUL
Foz6NBdCHHzsscem9btMa+Hv6Z3N3lZfp6m48847U73hT3/80yLrOd5f7Z6/
Bw2H+vlZZ53V2WuvvVJdRSxfVssXq7sud9xxRy3fSf+8mNL3wQ/QhYTmtRqu
Ow2Nek+ZzsY13HDDDVNvCy0Nbcb999+f6iZFDYPnwd+Jz9WC/CydJT0Pj4ky
3/VcZ1frqsNnV0+O3mn8kN8r9o8Zku3BPffck+bJVeXnl1x8SfQCBcYa+vh3
2GGH5BfVS2fGb3Omrktywg984ANp/XctxEVNaAey5xiuhqaweE/scTgc/ZvJ
Q7cP7Hu4JJx6Fe9TdvieOZ7iWYGHFHv5k36Rny89q76FKl4r/x5aBXHOuPo1
4Q54WujTwA8ccMAByWMtEBgWaDqt0eJDf/JVHmReeSBQBjmP/sp++4A1njY9
EGgz7Mf6JiaiJY2j/MB7mSGnFygQaAvw1d5xOYdcZvnll0/9gIPW6eRLeLte
z74cRz4cGC3wsmZ24mGzZp+ncb/eptxfoC+gqh9TPwBPC3yr/jYecU3MbqYN
ct5y9rLz2GmnnVLfRmA4UO/Bh/ADlNNH7tQM8OH4ng996EOph7Ts2cehWb/n
zZuXfFwDzUB9yX7Gw3jcep0CgekE76K+TbFJ2Zqo55WHbRvgXHmA5Xna+Rxz
/6WeBnV43nI//elPJ7W2iNvF5HQXPMfUNdT1i/Mq6GNPPPHEKfW12+v9/5/5
zGeSp4L4b4011ki8QfSrlYNPnHqPmfXFvVs9afXVV0/+c2bw+dnJxFN01fxz
zW7XQ+jdKPO7UHvjlzKVe+UZpfXhwSEu8Rzvvvvuqd4WaAfMnuM/U5Wf6zGN
2ltgnGG/NMfU+lP1nNuf1vnwOjM2R+WFxHvKtRAP0ObVnSeKP2gtzazVZ9jt
a5FnYdn7cI6DrDn4BT0G9KMT5dx9Np3EXXfdtdg5+t7Ok1aX7gJnlf8/HBYu
tJvr4t3FX4OmcVznHnjuxYZii/DXDwwbYkXcrAN3EghMBTz15P799gE5KU/A
QKDNEMOaBdDtuRXHxI+sJ54/f370/QRahe9///tJ8+w51RvN72siXhTf/e53
S71Ku5/9M844I+2NgdHCPVB/4KVoTdcnL+/sxz/Q9OuR6uXV6VBDeMlLXpJ6
M3F8TYA3rhkoVXoLfYHm2wSah1oLrv3LX/5ymp+lBzP8FOoHfkfvsve1rF81
r7P8ag488MCB3unA5EHzddJJJ6V4jsY+aouBwGggnzJrgydA2bpIC/Czn9Wv
+5wocI36PbfaaqtFzg+vr87OQ1IPDk1GXZ/Ht8zejG9Sa+r+XLWEzTbbLOlo
J7tXPPvXZ5PujP7V7+MTzBsvYoDF4Rq7Lua/rLzyyovcC3s6bwhxsx7UuvZu
8Rk/O/fEnPqi5kIMrcfYHjZZ0NiabZK9VPSP0xQF2gPvuHilKm8zA7IOn5OZ
iPxeiwHF6WJvPSx//tOf0/prPZd30x/5b7E2NgN1ZLPDqrToDrrDj2zykRmb
G6lz0hbkfNF8jEH8JSaC3KMpFijWDewRNBhmWzz55JMDvQv4xdmzZ1fyPb0O
2pLcQ98N+x0Nh/hH3MjbotufF89lv5RP57/z33FbNKzOaVzhmlunImcNjAJi
Ukfsg4GpQu+63oR++wA/FXtOINBmqLPRf+qRqeL54+h/4NRWWWWVVDOJfshA
m8B7Vk80rgzvy2NwIpp3Wgozhsue+6wzkvP0ms8YaB44Bj4Es2bNSl4U5mDy
Kx6Ee/j1r3+dZsb04jIcZnfjW9Xgm5oHrGYhF67y2aDF4G0caB74GzUCPIS5
p56R8CWuH/gdvVve2yrdKy6L5oVWbqbyicOCvmFcnP1yl112Sf3zz/094rpA
YNgQ0+yxxx6p/7BsXeQl0AatL10ID2t7Zff5qUvQOOv3km/XmR/aB3ia6WPd
csstF9s7+JypjUw2Nved1HHNzfS7eSno/4z9Z3Gob6hFmWVf1L6Y08cvnZ9F
nXGz++De4iVpIPQIdz8D/tn5qD1NFvT65teoR/l9vDn06QTaA8+V56sqb7N+
3nfffaM+zbGDtZreyNw+697NN9+c+ij1XPJ35Pspx9bjYJ4BLxl15kD9oCvT
a1E2oykf5lqY6zxT96ff/va3neOPO34hl0+/75mtC9YQzzt+prtegKvhp2Vv
oFUXNwwSc9CC8Ep6xSteMWHOnd8WblNcleetmc12zDHHpGeAx5jnIfNINBdv
e9vb0ufhj/BM8+b9e/KAyr8TR/qyl70s6XrMrB1Xn4tAIBAYd9C1qi312wvU
XukyAoE2Qz4hVhGT0QeZh3HyyackXWwc/Q/zd/UXWRP0rbSB9wsEQM5JV2HO
b/aB1WOHvx6U85U3mQNYNfuQJn2llVbq3HLzLTM2x20L9NvIIeWu8ka6hDPP
PGug/1cNlx8tPUVVTINrlcOaVyIOaup+6wFdYoklSueSO/RaXvQfobdoCm4r
rkQ8gLfgw0lrgU/Et0TfRL3ghcpj3hzaXu+edZyeMzig5nHbbbd1dtxxx1Q3
4xWkZ926pLYZCASGBzPL8N9lPuLWRdqoprSfE4H5HmKT7j5KfTfmz6oVNdnv
pcdarUF83/35tB9qLpOZSS5HoDPznayDNBf8tmMNLIeeWj4CrlOOXcVNrn+u
wzbZi6Hm7lnrrh85aAYPO+ywSX12jgOXXnrp9K75k+Z2XGfcT1fwWTBLoCp+
FMeLaQKDgbYCD2rfMRt8tdVWS+/Viiuu2FluueVSbXmppZZKM1r1z4sR5d18
QNWbA/WDPwvtmDW16jnnW0C3PlO5KDHG17/+9bROux6eTbN+p+JxQcv3wAMP
dM4///yUE5ld1R1j0MGKO2gfaPMGufb2ItwkDj3Pvp2o3kK+zIvioIMOSn0I
n/zkJ9Pz4bvn+WrOky7DO7znnnum+gYfV/yVc/jZYz9Lf8eTI3Oc/j/vMx9J
sWf0TwYCgcDwYY+QO/XbC+jM7U+BwFjg+Rd8gOgF1GPFGXH0P1wrXJdrN1Nj
/EA7oS565513Jj8C/B8/27lz56b8aVDcfNPNyZOvap/Dw+63335JWx4YLfTg
zJs3byEf8dGPfnRgjs2sR/OZ9ddX3Ws5qD6ep558qrEc9Jn/eabz1a9+ted8
K88zfVvbgOvAe7oPP/zhD9M1xT/YJ/z9OPi/OMfcK7f++usnTgNfr9ZvzstE
1o5Ab+TeZL3PuNuq945HuP5YfHroOYcDHi5m4NJZ0KB5D+yDak00iBHrBQLD
gV56e36ZFtTaqM94lO+jPVOtHfefNSHiKNpUXL79fxjgUSYucq3MDcx9p+oZ
dBMTrZH7fTwT1C7kD3qLv/3tbzd09uMNvKD4yD3PdRvPAj8Q3iPD8gRTV9MD
4jxy/CyW5n3iOZzoe+L30djkOSW8zu69996Gzj4wWYgjzVisiiHVG/nYBgYD
7n711VdfbD5Pr8P7Zo286aabRn360xL8BuheevWE8CbYbrvtZnR8fu8996Z1
2rNr36YTEiOZOSRWGfTayHPMDzUfy8y2FVZYIXksus5+r/tAd8T/75prrp3Q
HodH0BtEv9SLc+rmGX1e0YPbO9fNE/ldngF+vH43DoMeg7+TvayMtxK78QDr
1knaM/nD+v/0owYCgUBguNBbdsUVV/TdH/T86ncIBAKBQGDY4IOJe1PLk0fQ
AJoPMJFewJNPPrmz7LLLlu5xfqc6FH/NqAOOHnpyzO7E95pvtO+++w40t1n+
/Z3vfCfpcapmePh73LEeyibhfD2zvWKrddddtzW8P57TfPM77rgj6XDPPPPM
zvHHH588N3Ee7oHZ8/5e7u4666+Qw7dNf+F8cDJqRGbS4FZobLbddtvk3RS+
FvVC/Yuv2Pve9/70vlY977xeTjzxxKTjCQwPOEH3B4fOlxbfp1+dl7R1Kt6H
QKB58N7qrmN3H3zbTj/99JGenzqDmoT4KXP1ekDN4aDHHyZo/61PNBZ5T6GX
FH/QT0wEtNr2fj2i1r4jjjhi6N9nXMC/RJyX42d1H3sFfd6w+2PVJfls0F3n
PmR+u2L3idYheVuo1fs93jX/Hrle+/DXZ/6aZtJVxZD0unjrwGA477zzUp6Z
Z8rp4ff899JfqPuqS9PaB+rHT378k+TZWZzV1H24T3wOZrLegneDtUAMIGbC
0+Hw7E/6ougo5Da4C/UseYxcFF8ofvDf7fNmbtCb0x3k6yumEAvwcqHrFFf4
+YkAz/CD7/+gs8EGG/T0KsnvlD2Vx5b91Nxz95imgpeJ3NifeEhcBZ+KbbbZ
Jvlm0Dnaq/r5ivnv5rCsscYaC/Uk+bPpFHEfgUAgEBgu7E18ZfvpLaz75t4H
AoFAIDBsqOnyEZWP4P94Y8qvBslF/YyflbvkXrmy3kJ5XHjutQNqg+IOfL97
TiszCOTaPCXk0lWeEuqNxx5zbMrlmwQ/CDPQe8VWOIA6Z5JOFN4NmiU5+oIF
C5Kfec7VXUM9GHgO/+5P/46v9s/8Z72HtBn6dl3PJn3GJ/Kd1JDVrvAWOBrn
6/0PH+L6Yb2kn1DPwh1VPeu4pre+9a2dBx98MOaIjACuuRk6fGrxvO4Hf1rr
pfcl9r1AoFnwEbcGltW6xDnmOY4K9k16kA996EOpdiB+Uouge1W/GEXdRzyh
5pTnU/GnmD17dqrDDwrxDW8LsYDvtPzyyye9aGBx2APUssXeud/W80p3OwpN
nmfuxz/+8SK1Sfqfgw8+ZEKxprzALMmsNdRbLg4JtA9qmPxVquJItdd4fwcH
ToNXkN743XffvbPDDjuk+rD3Wn5d1X+ix3KQHofAxGHtsQ9VzbZ12Ht32mmn
Ga238N1pQM2epFP1vOIl6IXsA2ZX8nMwd+SmG29KHhZXfvvKzhe/+MW03vPp
0m8hL3Wtu2eHvP3tb099JPiLX/7yl0mzMdEcSLxkxkn23+jF9eBO5Fu8eczj
kjPrK8L/0FNcfdXV6Xv6Dt5Z3pw0FmIvudug52ZfxJdZJ4vPk/m5kecFAoHA
cGFdts7301uIC+bPnz/q0w0EAoHADIOcS35ilqFcS+/dkUceOXAeiie86667
OiuvvHJlTqTvw0zE6HcaPdxXnC9tDL5X74FetEHA0+CYY47pOUNTj/dVV13V
OI/Bw3/TTTftGVvhwEbJ++oN4WdB94G/UGfBHeAG9EPxkTHLxQwO34XXmXeF
5km91p+8pjfaaKPUR+U9HTVw6/gW/SOZX3Hu7vlE/HACg+Hp3z6d+Fz1wl6c
k14ezxH+bCZziKOCa24v/Na3vpU0F9ZI/CUO8JKLLxmaT3wgMFOhJ9O+Wlbn
woeP0kdULMDHX9xlHRcHmDskPhklR68naM0111zYk/rqV786aUMH3UP0aNO9
5ljgs5/9bPRtV0B/r37a/HzS2ZrBwfdsVHu2nExsSd+bz4lPxUTmnqrf82P3
XHt+aHEn6pESGA7cU340VXHkG9/4xtSvHhgMeH45kTmQYjx9//T1NGjLLbdc
aR++td87E75nzcBMLPX+fjNP6Qlmeq7k+RWb0FSYr+L9t46LBVwjnre0GHxv
zBtRr3rb296WZmrwjHCN/bw//b2+gNNOOy3pHsQ2erkmE994l8Rr7mO/Gpp3
Sp6Fl6Bhck99Ji8fegq/y/HnP01MW1EGv1scx0Oj+xzs6YcffvjQZsIFAoFA
4AVk7+1+e4W9jIYwEAgEAoFhIust9FzpTVLbpRMcFPIZHKI5iFV7HN7BLBGz
iwOjhVxTbVwuraZvjgWviEHAL1E/ZK94Zlh8Oy9svRW9zsW8i1HM1PROuQb8
LHAU+j/UWbwHej5wcWJDWgw98Q888ECade360pGYCbHOOuuknkNcAs2Ffgr/
73333jey+SK4GRyI/kX9LHhD3+/SSy+N2aUNwHPkmTCfp6pXrlu3zas+vC1G
C++BPnr6Q+8u3pKnjRqGHq9AINAM9OrTnZXNOltyySVTzDAqqD3Qf+bZHdZr
s9LV6kYJtUG9qjwuskbMdRrU+/ucc85JOlF6C3GKWRRygsDiMIee73h+Juka
6PNGqVMVS6pR0UnzN3Ef1bjuvvvugfcrmhH5Hx0xP3d+bKG9bS/c2yqPQnmh
2TaBqYFG+h3veMdi11fetOwyy6b8cKbX+puCfFp/g/WoKl+iC5NPxz14AXR3
t9xyS6pF8dyyp/NosR7gLuwL1gvX1L/7e883LoDPBd5H3uN3iCmmwlHgqOyL
m2yySc/5md39XDvuuGPy0Whaw+R5oevdeOONFzsP/Q4xUyQQCASGD/lVPx8k
PDp+PRAIBMYJ6m94FTWeOJ5J12Lc/OTkD/hRPUl8LXgdDNpH77v6WfNLcXVl
+xvdOw3H448/PpJ5CD5T/5h69ve+972xPXBkesammk+633y3aQHkyDwW9eQM
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
ymuvuXYxj4hhQC4l1+Bloe6q/pD9VHAE+AVzUGgx7rvvvqSruPTSS1O8tPTS
SydtkHjZ/HPeK/Iz2go8pf/ff9cnRounVlrnGnbnnXemGnBZTZ8WRP7qZ3iG
09Sq4cojra3mNdK0O2e+4r7fsccem+Ym5N+hVs0LzXdRvx7F/RknPP744+m5
yGtW1SFOaMLvZJjwnOv9WGuttdJz3kuj7/3AXeB2hgHaVj3VVfPdug/vpXoZ
rUV3H4vvJ1fCh3hv9CHwvWmKO/d71eNwHz6vm/P0LlqTvLPWHz6kgUAgMBFY
Y6zB+FwzyMQm1jW1VT0DdcQmPBzopLvXWPuDdW0UM6WahrlOZuH122fsf9bu
QKDtEF/wr+ZXY2ai51b+Fkf/w7VyzVw7XiHh0R4YF3znuu+kfarXPkaDNZFZ
hrgF/oZ4Fcdhhx3W2HyGwMRx6y23Jn3YqDQO3eAVW+wFL/JatDtN1Z71e6nV
qD+Ij2nm+sXEaj+0ETw+aW/5mFv7c5+THoru3yEG9ve4Nr2FuO78/XBtYkm9
aXXXOuzpzosHaZGrOfroo4fGzUwEcgX7p14xvqJ77bVX0oN9747vdf70x/q9
P8D94Ruc713ToHVS36p65vVunX322bX36jUFHJprx1cZr37llVcmDT5tES8X
zz2OFJdFe0f/Q4vflP+/ehFtk3Owd+mfch7eMX/fNKxV/KKL/kH2xHHQ33sH
8f5qH3ovzVvGH+ywww6pLuBP/+69pMO0xgzjug4CHDsuWJ3DPeedZA3hf+Dc
1aM8h55Je4/Y3f8zThwFPavrrsaD8/aeNb1Xi9/seaPyPrcn+N64+bI1k+5d
rTjQG2qer3zlK1NNkAYz98vi72L27fSHtXq11VZL9Wn+AmLRPMvPumgPD4wn
xBYf/ehHF1sb1RXVF9U2h6mnkn/wtBAnqDnQWuQ8xLNnxppZNuYJ+Dl97eJv
+ZUYSo8GnzfaVR6bjrXXXjvFl3x56JK7v6e1zD5fZ4+//qmy/NT6qdZs/8Wf
0C45v1VXXTXFHerGckP5pb3T9/L95Ii0IjzB+V7k30U/QHfy3e9+N/xlesC9
5TfiWerFX5hx75ka57o5TplfzSD+EfbyddddN63vTUOsiSfplcNmjbl4Tb5b
NouY/kJuJt/Fg4jV656l2g3XUz7IR6N4rnxnzDShb4nZx4FAYDLgv3Taaael
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
e+2Vrmmva85zBLeR64xV77l7KD+gP7dG+A5yibqRcwV5dnE98s9ZazEOczsD
gUA7ITax16yyyiqplvC6170u+eZaf5rgeehZza8urr/8Lcxo+9Of2jcneirQ
F7z55pv33Hvsi3VqbQOBQCAQqAv0gGKDqro7/kIeNCiXoDaz3777pf831z7w
K22AuEfeynNKLVMum2s0/n3bbbdNHl3yLzqAyy+/POVq5reqneDy9cKX9Q/h
+tWY5MZ6LGlU2jo31HfiC18Vt6i7yYWHwb+Lj3rNAVX/EVs2NY9OnUndLns+
0AqVwTOsHpVrkuq2uAce5s7fgQfUX0Wj5Pd5rvAPvN9pmrIfO94RV2LWqnqz
npQmoI7Gy05NspuDxbPT05gf0Da4H7xCin3Vrp1rWZd/vfwIR+rel+lieP40
PQNJn+nhnzu81Asle7Jag9q6jmTYG9Tj1e7V1+0XDz30UJo9bL0sfr/sj8uD
om6fCeci31Q/Kt5XdXTrXhP+jmWg+8CRFu8tHxzP+TBmmvTCggULOgceeGDS
Rua5Gu6Vf59z1Jx0nXDVvfZ+38E+UeRi3WMeSTRFdfo7mj9/1FFHJT8q61i+
x9Zj9/bMM89M112dYhCew6xPNZUNNthgkedUPcd+IBaYSI3KdzUjx3pPg8Iv
vE7NiVikTB/r3D/2sY8lzn0i/A69oT5K/e76dMU21j71d73SOJ1es+b8v8Ne
n2hZeJeU6T/MA2uK45ouEJOLq/Jzw49Lrb1pr61AO2BvltdlTyBrv3oUX6g2
6eIDE4N9hv6tbK22F4lnm/SZ9uyIF9Rb5UFFna09xhzOqfR7ii3lLmYzln3P
LbfcsnQe5GRBvyJXK/ssGhb5qzh+KjmceGbJJZdcbC9bb731WulBOGrYp6xh
NLG96i+eQfl8W2fD9YI5teuvv37am/FSz/39uaQ14rnI44U+QSzI58N731Qu
IdeWc9NoyqnKrrNnVSworzF7B1/TL+b3Hh9wwAEL+5ZeqBHWuza5LmJYfVU+
I69H/sTj+HvXMDydAoHAZGHt5bmr39J6jf/lWfXII480xu1effXVpTpQfQh4
nXGabz4IqnL+YozL/zgQCAQCgbYBn16mH8h8gt5/HtaD4sILL0zcnfyGp7d6
4aj9HnDvef6rnl15uPOTc8lp1Zzk5fyU5V6+b/JlfO75lDfq+aIjofHXC7zP
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
FkVUggQB1z2/l7H6VK/91u4d1qq053+MGtDde1etWuENcz7zmQ8+8OBMnh39
BM9d67hcLbLYabd7Q/UK4nNrrLHGjDnWfUF7G0wcTjzxxJnyOOLgaimD/sVc
pDZ5vnfON2T8s3fXA7QJ6CjUHVrHtNtfWw/UlRPlIWUvkFu300Y+/dTTtcQi
zLfWRa2eAK1zqzpU+pbx8tKLL6VzaC9W9WcqP8s6ns4kaI97vJ2faPnSb0Je
cFDxjFlX20fT0dtz6EPgmbGW1TNQ7TgdcLf3Q8Hw6C2gr0buPrZms16v9jMc
K/f/6f4UB6zWh1kjqumoY+yR+6cpM0+YE6zTxbnKvqbtnln5d55FdeNZMSfm
+hMYc3kOdLLX7gvPv5D6UPAZkzMu1+fmH3EMPh90CJ5j+2P+M86pvRv9tPVc
6S/l+O2z6VSMd015Z3pfcxdtBA8O17XsUeu43U/u1ck7TU6xZrpMXkT0CL4r
3waxK/ovcaLyO4sdiFeU/THHOlY5PvtZMYkmNFn2/jSXNBG+s/21WMvzz898
vh0HrRhdc7lWoUdxTe3HrWfoUNRGyBlUfYpaXzQFfte56XYNUadRY8Z/pt1Y
IbZGm+I+C4IgCIJ+RRzD2qdf9JTWWtav7Xw6vehK+drVubbmq0GfTJvd7nP1
z1RX0LT+eFZYM3aj/4u1ohzwcPEROpCmtKrOO99M63prW1pxsYhOnot2OX/3
pL+vqyY310/Emt892Cv9RFwPuSDXI3cvqI3gSVEXp556asrbVj+HLkWOvl/7
/ML+0hjUrXHaMyQe0K4fNZ9YMcDxYg8trujeyPUSsIdVy9sL85V+DvbVVb0F
TwKxtaaOkeaQZrJdXw71beI2dSGe4nq00wDYL7s32o2zrqlxWR1IuzgcD01+
IU3jvBkLcsfge4gZiXnKN5UxMjGvadOm1R6rM07zcMkdi/Nkznjr3G9N9U38
ZsW6ypoZntKOy71X1bL5XWMejRZfEt5WdH795k/q/Mg3ijNWzw8tljlwovPy
Sy8nb6RWzY5616Y0rUHvYb0vj9PqS0wXKRcX9CfGafXgNLat19Uzbsy/6KKL
GvP30Z9BzoSuLzc32Xsbl+vCHMhLo/o5xrRtttmmts9xvtTrtlvH+E515Dus
z+g62uURzNu77LJL1+MEvY7cYrt7sHzJ99bV16ZXMRa89D/zvPWbPJ+9oHvH
S+zO34vj9dPabiLywx/mY0NlXtf4VFc9iL6MdBDVPbS9gr0cbcd4ef65V3qi
qmniT2LOOOigg1KNCP+Ddh63ahSaeGadO31K6AGqn2m/ZI3UqRrCspeL8cm5
aK0zoCHUS8L8TqfgORYrKOO2nm+xKnU0m2yyyYz9nfNJ0+I9m+i76Zjltc1N
4txlf1uf7fjtK8Te7fXtJ+2TjUeO2+/6r/HI/Ceu53yXep/Sw8G+VG2Atelo
xyufwf9GTxz7+Cb0Za6DOL/6LN9ZbYa/qx6ra2R/bW3muvAj8VzxVtE35LBD
D0te4jSDnvmyF2jueRDHEVfzTHayNrAXoJekNWk3vztnvBrVoQVBEARBP2Mt
0S97Nes7ea52veS96Emt9erMr9J5qBvNreXLF381se+6NOr9htoLe63h4iPW
TvTCTWDvYs8nzmWdJuZsTd7Je1scVK1p9XvTRqg/rsvf035DHqo1f2lvxCu3
bs/7seL5E0vNxR3tvw7Y/4Dazoe9mPhcLgdtr+O+69c6b8wYo7s0TDt36mWN
cbnn2l6Tx8F4KGu5+CAYw6v1AMZ8PRQ6/Uy3Q0zds16NK5XPYFOxHXEaPpa8
DqrXwRhA81fnve57ipHlrrvcD43XcM+xY+HDkjve8iXGIY7TNGpX2vUFV6ty
3/T7Uo0r/Yc5RMyJx4J7u+7r6T3VoOWORYyO5kNcUgzMmkddo7/ju6F3j2vi
3IvBVXUs7gPnWzxIfkztbi94wowGaz3xXL5hVU0J3Yma/l71K+oUauC/9rWv
zXR+Nttss9p88YPehw8Mv+nWe2DQ674HHWOfnIR64daxXa7eGkw+o6n1BR84
90+7Xhi0btYYdWAdZ71nnq1+Dg2GvgN14XvJc+W+k2dHfquOfoN8JtUd5Hq9
eZmPrXd6YQ3by1jrt9Pql69Sfx0EvQ5NQrWXiJf1u7z6iy++VMuYYC/Gozjn
42MuESexhxwvjtU8RYdu70arxrvA3GSPlZs/fL4YYd01QWXPbHV2OT88+XNe
v53AmpwmQA2KXLL4gPmF74fvfumll46orwaf2jOnnTlTrLv0ueBv+txz9cVB
XA+eova6NG6lNsBxm6/0/rGnMLeN5DPpBtTNmNtb+886ft4e+mbovTxSrHXo
kbbccst0LXk3N+EPZX/sve2/veybc7h2Rx15VFqLiYHwr6Bv4jupZ4+1C82K
WJB1gGtvP+5+sJ+luSmfD/fHXHPOleLVV155Vaqrmijw2hnOw8p6V+yo1/ra
B0EQBMEgY91lbWgdVO3R52VNw8uMDrZOz7WR+FvwEpOTnGga1ZJ2WoPWvRYf
waZ8Buz7eI+pBdb3vU7P25FiT1d6zFVzeXKkda2l+f25F6u5Xnlq8fdeyEPZ
d8pb5vbd/s7zVNdx2u/vtNNO2fp5fWX0uZmoz2Ud2PuLfedqzd2DfDHH2yvH
uO4zaNqqtQA0O/KKvBZ6BT49/CJbn0HxCXvtJr1U1M2oe636aviz2IY8TZ25
GLEjHrC5Md1zbMwdTmPIM0KtR85Ps/QplevoxPNJO+J4c9/FvW3dIJYlbmIt
IT5K59BELfHll1+eamRyzxOfHuO48/rss88lzYp7ypjq7+lCxJtca2sO/eH0
kclp25xfMTTrInky3tT9gLnbPUFbUq1zdY547tbp49KPiFluv/32M50ba+Po
tTJx8PzzMG69B+SVxfSD/sQYT6tc1ZmJ16uhbFKbyJuLr4Ra1Nw86d/o/+rA
es68lVu38/SWN6wLucCc/6LPpmsxltaxH1GLyffMe+bOn+8b/chnjbxkrjdA
68seuC7tTxA0RelBJdeciw3JZ9eF8fuII47IPi/WzXoYNumByqOhXdxHbE4c
rO74lH0SXTptQG4u2XTTTTuiy7LXpROjkSj7bzoe/gf6dd9w/Q2j2kvSyOu5
0Kqd8f/8UOwfx6sPLHuT6mXBD7hV9+j47X/1JhxLf9TSL0Mfl3nnnXem67Hw
wgunmIB1zkjwPfUqoV9wHuiT6vb4sN+0xxbDpgFQy2AdncN3c05ca9dVD2n1
D+IydDbmf3/ebNPNUrxBbFL/ER5aajLNWXQdvk8ZB9G7hU7JdW2qX0wv4X6i
nxmu95DrwBt1ImlQgiAIgqAXsNa55pqfJK8uHuXW9XzL5LnEMnh/y0/UmWu3
DrNPyOUby5fcm3rUibBWquJcW5vK97fTWtDH8GVoQgvgnqCvl1uniaUhthbu
JNaEfBRytVpyyN/61rdq8z4Rr7MfqOZc5aXsA7pdx+x+sPekQSr3na0v14cP
ZV3Yi2288cbZe88+Ul/PbvTYGRToy+nvc/Eie2k6o/E8197/zDPPTPUCrfeL
+BDtFD2HupleqgmkeXJ/t+oteGaqyaujTjKHcU4c2jhbzcUYd+zx665rVqMi
XpR7ttSaiNUMN+eJi8gB537f+KUuRC+RTlxbn9OuN4o1hNovMSb7fGO2uKW5
v4laYvNBzi9LfZbr+K9nRjZXODa5VXOCHJ1+KVXPC/Ec96n6JfdPP3n98ICX
e6ueJ99FbGoioybN/NZ6nd3DvdJTLGgeOsTW/oruAc94U3NQ0Dz0DHJEreNd
qeW01m0y/kzDxvNb/D83T1oPqF2tA2soHgW5z3EMw32OeL057/TTT3+lt9Qs
lg9l7qr6OXSValL1nhwv5lV7XLqY6t7MS6xCj6/H/twfmsduQv8yK79M6xx9
JHuhviAI2qEWSE42l1ukZbf3rQsxyG233TYbgzOm86FtqtelvYi5yZieq1u3
N1avXjfiB0cdddSQvH65J9fnRDyqSWgHee6JA1djcjQHdDCjjQ37eTUC1d4w
/P3Mj/b6Y403v/zyf9Kcxy+x6rvi2rlWdPzJL3ccW3P7N55YuRigGO0zTz8z
y/21cyv+bo9ObzJ58uTafXzFTGlP1FpYQ6+z9jppLh8Oa5BHHnkk1T7QBagb
ueSSS4rLLrss/a51nPiHa1/1ABWLoJVv1WWK4Xh26+yz3IuUMYt2vqnleEWf
5VzE/B4EQRAEnUfuVA7V+pYnt/WX2pXrrruukTij+m51Pe08Vq0N6FqtCyfi
2sA5p9Fv16NOTEsN3mg85EaDPgRqk10fa2U988TyOom1em6f63hWWWWV5MdX
lxbHOl4Oqtqfk3eddXy382n2Ia6H9XKurl3sQdy4Lk479bRsj6Gyr4z7s5dy
9f2EvZFYtdx6rieE3pPf+973xvz+coP0/saH1hi1a0ffxntSvXav6WXsp+XL
W2NotCK8IpvKh9izi1HkYvnqUcUkRlozMitefukVD081GzRs1c+T/xFH0Xd0
uDnPnOx5z80L4jrew1zeCcw/+jrljsX9xldCzIPGx33nXDahtTAPqHfJ5bR4
lKhhHotmzvUyz6j/EZuqjr2uI7+I8fb+6STWVGqBqvFbcTFrvom43oL7kh5I
LLY8J/ppJe3bixPznEw03AP6eZd9ss1FcpByKp3qVR7Ui7nh7LPPnsmH20tc
nsbM2qLJa8sHwpq5nd5C7qoOfw3LcRr9nMe+daY9/TPDaA554pvLaHTtu2a1
vpdv02+y+lnOq/ygNe54oVXh0ZY7b+ZifvfyZ8GsMe/TWQ+nt/CSZ43616BX
MS6JyYgP5u5fHndiJXUh15vzI7Q3lUPnv9MU9izGwHY+wLTg/ALrxPkVH+Df
V+0na8y1l1Pb0+Q+QbyLfl79X/WcqwG0Rx4rNBHm/ep3M0fqcf3nP/951O/p
nIlp24NWawhLf0XaxJdq6HGjDs5+turFK4YhZqd/53DeGdY69AxqW+xfXU8a
47oRh7rggguTPsZ9I97ftEaHf1f1WbWvNe/1St/cJvAsiv9+6EPt/bA9O2oK
aVWCIAiCIBhsrHloWMv1Xm5tIGbDQ29Q10ezwp4gpzVoPT/qopra6/FI16uk
7N3Iv03csJNYO+d03PZFeqqrk67r/uDTJ6dWzX+rq5IHbrKfwUhwPfjMtPPU
/fKXv1xLfLNkv/32y3rP0J/oDxCMHVomPSxyfVG9PPfiSWN9bzUB7uXW95Q3
kkeUZ1Ub1Is51R/+8IfJD7LVZ8L9vu666zYW/zV+0rXlrgP/ILoXcZQ6KK97
Lh9S7od5RczKZ5QHgXhR7j3kdORV6hwLhkPcRo5muPg93YUcZl2e6TnUY7Xz
2bDOUO821ho014N+he4np390PfVy6idoCKpeIL4bHY/xYSKuu3hl7bLLLjNp
r9S/87wIBh9xaDpS9ZSl5s+YzGuax1nQn5gbcv23PNtqUZuGxtD+qdTwVF80
C3XsL6zpfE6uLyg/Lfme4aBJkauwB7LvmtUcYA+vPiO3BrH+HG9c3+fLJeb8
OqwR6QUds55gwayRbzrhhBOG5OmqL7m8yMkEvYp5Wk9G6/rcuMD7oK5+hcYg
fi85rZzxnF9Mkz057T31K2nnc8uTuA4foVaME2qr6BGqno/WRfZyTdV5wfXV
0824X61/Ur/Pa2w8dVbimOIgPC2q340H1lhiL/aWhxxySPJFq46v4mg88sbb
H7bEPH/WWWcN6XVZamFoPoabEz0b7inn1u+Ir/CQqBvrHnFEHq7W0fr/NF3j
Q4vC76r1vLge1vB0mXX5Ifca7j++ZPyo283r6oesy5rsnRcEQRAEQW9gzaNe
jFddrlbfSy6gCc1tv0BTr2fdcGsn+femesfzltDPvayBFYOp+rc1jc9srTWt
xknrrEkTT5enrPbq4O/Bv6/bfuJ8gOkccr1EvM4555zactLOq31n7rPsW9Qd
BGNHnJoHaK5Pjpca87HGO92r9s9VHZt4jdiM3EMvai1A2yAG0jon2KvTVjXl
LyOupPa0eg0cgz7Aaovq8tAxhhi3cmOaV9nfdFZ5DvnfD33oQ9n3MF7pgeEe
6wR0CHwrhovf69/q2jbZF4znRzsNijotupCx3veuh3iG+cg9UX1/nkN77713
zd+oWegL5eaq97x8m364veZ90wn4rJr3WscftZL8TYLBxxwj1t7aS8Q6m44r
8o/9Cx0nf75qXm5W/TXqwlzMJyvnzW6ssZ4e75rMeE0nxxstpwnkB2i/2A5z
3D777JM8QORs6M5mhVzgueeem92bqmUdry+Y/l/WQ9U6ZK/ZZ589rXPtU8N3
ZmS4xvJs7XrZlS/jnR4KQdCLGCvtZXP7KPsfY21de1x5a7UsOY2Sz6dbNu42
hfyxPLU9RvXzHdPXv/712uNyvC3kyataC38WszDm1917ooTWQ60A347WXqvm
STEM+r7xnm/5ZtpDtVTVuVi9x2i1B85Fmeuuxsy8px4XxtM6NezWqXQv1XvC
9eFxMVxtnH4cPKzL33GteVvVjZiqOdoxLbzwwulebRr3z9VXX53GgdZn1tpL
D9axeJf0A743nU0uPlG++IyIYYQ+NQiCIAgGHzmsAw44IBtHKdf1W2+99bg8
4/odGl2+rrnzYw2vhkkOSc10E9gfyFOJ3an3PPjggzuWp5XbotmnN8n1W6DR
lV+rE/ekGrhqDlwNw1g9BuvklptvSf6ZVb0/Tb59oz1GHddH3Jbnn3xudb/t
JW49qx6MfEl4Bqj5FguYiLXSw2Ef+vldPz/k3vZce9Z4dY5WO/PkP59MfjRq
Qqp1G+qA5PnvvefentVaeObVbFT7epQ6kabGOees6llaxi3WWGPNVJNS1/2r
DsqYlvM18b35RIykjpp2wdicmxvMC2LqTcYAWxGbowPLHYvvJCYpz9P0+HnS
SSdlr6Nj2GqrrWrxQjIP5HyFjcnySyO5R8VP3XNq8Gh96qp5Gi3q+Hl+iM+0
6gvEdZ0vueeJNm4bd3mYtF7b3Xbbra96xQRjx5gpv9taS2o8pV/r9vovGBu8
ifTrEGtufa5ptvlKNLWuaMUYf9FFF7WNhfMcGKv3UokY+nFfPy7du7kahkmT
JhU/+clPsr9b6gnXX3/9tCe3XjSfzgr6STWjNPmtewXrG30+xuuHSOdGC1vd
h9ASyyn5PtH3YnTYu1XnuOqLxpCHWhD0GsYqucVyrKreu8YutQx1QZfMwyL3
nKgJ07ekyZp5cTB7+mpcyhhvTqO9r1Nv5tx6T31Sqt+X1yTfI3vUJvTYri2N
nryx/HjruC93Th+uV8Z4UaNGt5HzgTK36C860msqvmVMpXPMaS3oDOyz6vbH
bdfLSzyQTsXcmKtRca+oyXF9y3tI3KXuehZxJl6etH324GKX4+mROxro5j0z
rf0yxdroqP3beNdavYh1rLVSq0ap+tJX5eSTT6nN+ycIgiAIgt5EjEZumBa4
mlsrX4suumhx/PHHp5zARMS+g9cCjW7u/NgTyC2pm2qitsdaWU2YOifrd3sd
Gv9//7szNa/2JkcfffQQvzwv+zDa9Lr19TTvahWq/TrUah177LHFQw89VOvn
jQbXWI8Ie5fS57p80cOIMdRVj2SfyVulndZnuF4FjlPNm/iEPKv6QXWhvZrj
7xY33HBDsdZaaw0Z//yZ96QY9kifaz8nRsFfVRy1vH/FKsS9xU7FD/TN6OXr
YA9ozK/eb/bI6iLEgerG+TCW5MZZcQjxnbpiafICYiDG1Ny8Zz4U9xhJ/udH
P/rRkHrd8mWMuOqqqzrW/8hYID6WOxb3n55gYoZN16DSfOQ8d2nR1O3WoR3g
+7DaaqsN+QzPGo3CrO5RxyCH5NnnT6xPejfr5n/5i18mjU/r/ej/xZGNURMt
l0VvKT7aem3l38N/dWJAC0U31RqzVO9IF9Vpb7egHvgoyv231joar9Xw+7dO
YF6gPTDHV9fvXnwcx6O78/7W/zQIrTmG1hfNajsvD5oU9a36Yjk+nu3yjCPh
7rvvTr/X6qfmGFZcccXkPTFW6Edotqs17K6dXJE1obVSeFuMDvlha7Lh9BY0
pbSlQdBryJXSrYtP5OpBxBxmVQ8yGr773e9mte3Wyauvvnratza1r/a+5ig9
XKt7Rt/dPqJu7zXzAK++al2Pz5Ov1Vulrv6aVayx6Lyqe2T/Txth31vHOszc
QpOT01t4HXbYYSPS19rP8YrI+TvSMojN+Tc5/rpxHujDc8+Aa0cjbD1bhaZY
zMMcbU2kdq2JdZDYvWfHesK5+OxnP9toD5pW7Kn12ha7bT0v9DCOqdtexXXz
n5f/k9aPZS+4dvO6MVMMalB7qgRBEARB8Ary1vIM1tDVOpyyvlsOYKJ6W4gf
yZXJk7bTo8gP8pJrSqdqLS/e0hqjtAfrxDpV7I9HPX+FVu1DeW/Q8Dbh7229
qi9ktfZcXkzvRXrybuF6yKfnPC3tIdwrdej+4Tzw48x5dVrL8zlpp4V37ezd
9ByxD1xvvfVCb1HBueBXKZ9f3SvbA+uJ4P4fCeLNak3EnsW3y/vDPp9uY4st
tkj9r7tVQz8axAbcW7nYr+eyiZoE45m5JpcDWXLJJZP+qi6dB10CzVrO08Tf
8fQcibcFeInyR8jNDTQH11577f+MGZ3RKop95q5bOU/xaWqyt0lZ77bxxhtn
+/PQotXV/8j75HpGe27Fk2al6TCOe48yJybP1k29hXWGGKZ7pjW+Kt9Mv9LN
Oa+TuG7q9YyXpTeQ59I5Ef9tqpdR0DtYd/PqWWKJJWbkjs3PcsnGuEGsiRtk
ymeat0VVQ0WTKN/SKT1/eSw0efzyqvMHj+exzgPqF6wb7FGs/9r159Sjrt3+
TQ6GH7p5wJ5Ljmik58azQcvR6ndv3JQz4ws0Wj1E6bUhL0LbWP0+1rV0GN3U
v/cz8qnWoe3uEy8+LBO5l2vQu1izqgVq5xU0nK5sLIhVLrLIIkM+xzguBtck
xmBeobnvac+q59NIYwUjQWxC3E/vqern2VuJTTSmL/mfrZMYVk67YE2uz19O
PzAWHn3k0VTPlevv5WV+4Xc7K+St+WRUvbO8xCrpZK6//vpG8tvmVZp416Ua
R7IOsJehrauilse/Gf/9rnVQE/tz6xmequVeyv/rZdsJ6OOPOOKIIXU01iXi
2Nb5g4Q1oPjScL1EXAN6XLVZsZcJgiAIgsHFGvEHP/hBqp9pt4cQp1FfL3c7
EbF2uuP2O4qVV1657dpJ/NA+sKn6U7XwBx544EyfqR5MLVOTvPzyf9I6nU9e
1SvSHoIGQK66ifyH806Hbo3eGovSJ9gevon+hiPFZ+u/k7sXnCe9d0aaqx0O
z6c9Le8/3zuXyx3OZ1gsRD2wOojZZntDse2224bWooKcK7+JXLxTXMF1nlXs
XUzaHr6srWit06C1MD7Il9pb9Uv9n7Flzz33HHJO+JeK2zdxH6m3UN+Re67o
vcRK6vBN9R50LzyJcv40/JzEQUa6D5YHV4ufu4fEfuhTOqWxEUMp4yq5mCQt
hpxMUzhnci/0Rrlj4APi3NeBOFwupuH54/ExK8wvntdSO9jUXDYaxNr4EbXG
psSl5LXE85rwDe41jC1ykbRdZeyyrKmbqLrficbzzz2fxmDjcTmu0kWpbZ0I
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
29V9BN3DtTJnGPPUNJkT1HSo0TH+qs9Ri/RKDdS9He/BEwRBEPQu5gPz+KWX
Xpo0rWVPQHsS+eCTTjopzSfByLAm5dtpr6dHun2ktevqH1w97T2sZZvyEZB3
uP3229OezDrN/qxT6/Rehr6FT7x7utwT0pLzxE/1cw3JiFwP2n/1DDmvOD4k
N998czMfHgQdgP+KOFlr70l7R/Uho/VgHSmeWb0sqt4WXnPMMUf67E7FSoKg
n1BLpe7fWq/0o1HjVeZi+tHjSJyOdpIvm5rEI488MvmvBBMH9wCPE7WAtBa0
41HL3bvYJ4mt8wZ/3/vel8YhmuRlllmmOPXUU5PPVBAEI4Mf2Je+9KVsLrt8
GRfNk0HQaczPNA40CLl7c7HFFksxmjowt/BGWnzxxYd8Dp9TcTn71nbIl+nb
6uf1m9BrdTT+dnJyavB9p9x31cOVn8FI3kfs9bTTTku+uGXvTPteMSVreL0z
uukB5XvqX5z7njQQ9ul1+Mw5/3QJtAe8UKo5afl5vTZHGnNwztRhic/mjp0P
y3D3SJ3Q5vz85z9vm3OftPmk1D+4E+R6m+i/fP1Pr29Uj298sPfUBzanp3G/
6/c6SH51vrPcPb+WqjdM+fL3Cy64YPI07XePzX7ENTKm2Esa68RIaKPouuwx
9ceyhzFe6Amj97fxXa+iH3z/B7PsaxQEQRAMPuZvWgtrOXEuexH7dXsMcUu9
Asezlve7+lvQAtLNThR/DJp0emAadjEQ+nP7IrmOJtdM9JZnn3V28l2jmdGD
0HFMdKzj7aHtZ8oafHtXuRn72aZ02/zxp02bNqSvZfkSX+iUZ2EQ1I1xjk5v
oYUWmhHnFQuS97zlllsae65KjUfumXr7299eXHTRRQO1Lw+CuhGP9pxa81kr
0EtNnTo19TXux5oM61g6V/Vv5t2ITU08xPXVeasF7WS/6WB0eDZpLYxB733v
e2eMP/ag0QMmCEaPOZvnfK5/QfnSx8F+NObGoNOYi8XDeH3m7k2xGH1f60BM
hX64jPVUnwH5Tbmzdui7p4eCPD7/CH08RoN45yWXXDpT34/Wlzofvk6zQi0O
zy76AvvqsmbHnOn70SSq6enmOodOQJ6xXa6Y92UdeXqxZFoxupOqpsy50cNZ
LnSk54JHpnWG+zFXt6E3Xadqodwv3//+99v2E9loo43SPdkJPBd6ULf2WZHv
p4F1nE1BW2TvKe+Q84TZfvvtU0xpkOYuc/att96adFO5ejwvz/4OO+wQXm9d
wj7y4osvLjbZZJOUP3A9PBvmEXkyuRbxfXXKs802W9KMi6mIQ6q5jesWBEEQ
WMPSsi611FIp3mXON5/QENsP0PWNdX0j18Yn66Mf/WjK+w/n3zdw/OeVtRRt
o3NMly3n3/RaUU0nnaV53xrgiCOO6MvcSd3Yg9Gi6O1oHVRq4t3rfIvlZ5qA
Jpk3Xq6XiBjzBRdc0Lce7kHg/t5vv/1mileIGegl2+RYL+7Cu6f6THmm7Yma
6mMSBIOCtR2tlH645qKyRsyaoR9jBKXX53jWrEF/Y61rnd3tHEQwPGrFaCKt
FeierR/WWGONGevheH6DYPSou8yti1vzknzywzsm6DTGdDqDdjllNfRHH330
uD9HzG3q1GNSTDP3OfRI6pHbxXzELU855ZRUTy+vr9fVaHvweL6mTJkyxIeh
fAbpStrVsVnD+n110x/5yEdSvKrs6yC3J55Kt8K/vhdie+q8aVPa6S0u/t7F
487TP/fsc0n7wJ+nmot3jfSoUc822liatSI9S7V3hZfzPNLeJOPBdXQ/6JUh
T5s7j74334dOoCfChhtuOKOnuJeek2L4erA0gftYLGmnnXZKz11rj1jPi/6w
9Cjd9HFpAs+655zfTrs5e9FFF03XXt/eoPMYU3b7/G7JB2c477Dqy5giF/P4
Xx/v9lcIgiAIuog18BlnnJHiXNZ54u36XvDsuuOOO9JadKwxS+sntWbWrDSA
PATVHkYOrFmcYz0MxTDtN/kgBq/gfr7tZ7cVa6655gxfRvc9bbHz1kSM1x5R
DXHVK07dhfWbPWLEloN+xNxg/lhhhRVmuq/1yPE8NQmN1HLLLTdkjyMWs9Za
a6Va98i3BcHwyHuq3RPn8uyYp9SYH3vssY336g2CYOIhH3bhhRcWK6+8coql
04WrA9OfmudFEARj48EHHyyOO+4bM+Wrqi9+13xLg6BTlL0C1l9//ZnyuK0v
Onna/fFgzcrfTEwnV+NS1uqfc845aY+YgzfGvvvsm/ay3sNcNVq/Jf6LcsRV
X9NS0+wYq3Ef50fu3bHpO2x/O/vss6ccnxy0OBLfAd5dveJZK85rL17WMOW0
Ja7pSLw82uE88dDYddddUx1Z69jmXlp11VVTLn4snliO3+/yMKmOmfZB3/72
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
2z88+OCDxZe//OVi7rnnTvX58v6RL66X5Ilw0EFZnx9/t+iiixaXXnpp6r8U
9DbnnXdescwyy2S9LVZfffW0dgqCIAiCIAiCIAiCIAiCIAiCYLD597//XXzj
G98oll566WyNuv7yhx12WPHnR//c7UMN+hj9a3bfffdi/vnnH3KPvfWtby2m
TJlSvPRi5HX7je9///vFBz/4wSHX9PWvf32x5JJLFtOnTw9vnD7C9dpoo41S
n4v3ve99xQknnNDtQxooaFcuvPDC1D8pN9++9rWvLQ488MDiN7/5TbcPteMY
J/75z38Wt956a3HmmWcWRx11VNL77LjjjkkTqjfRIYccks7f7373u24fblo7
HXvsscWb3vSmIdfxbW97W7HrrrsWf/nLX2b8PP3M3/72t+Rt4rk64IADismT
Jxef/OQni7322iv5BH3nO+cVN998c/q50DkFQRAEQRAEQRAEQRAEQRAEQf9w
++23FzvttFPxmte8ZkjeQI06TwI5kKhTD8aCPJp7Z7311kt1v9V7bLnllitO
Pvnkbh9mMErkA0877bSUW6xe0znnnDPlEfklBP0BTZRx/j3veU+aC9Zff/3U
WySoDzoKuXV6luoz87rXvS55W+hR8fTTT3f7UDuCucF3veuuu4pzzz03+X5s
scUWxWqrrZb0WgsssEAaS8wb8847b7HIIosUH/7wh4udd965OPXUU1M/o9Z1
SanZ+OUvf5nuZefbvzeh+Xr44YeLvffeO+tTsvDCC6ex0bH4/Hvuvqc4/fTT
089/5CMfSXPeu9/97uQj416ga11qqaWKNdZYI31/Woyrrrqq+Otf/xp6tSAI
giAIgiAIgiAIgiAIgiDoA/71r38V55xzTrH44otn+wLoRc4DI3KnwVhQB+ze
kT/L5aY23XTT4uqrr+72YQaj5B//+Edx6KGHpvGhek3lSY0Z6rSD/sA8QF+h
j5RxX05bHjyoB+PgKaecUqy88spZbwu6pd1226147LHHun2oHeHZZ59NPhXf
/e53k/fRSiutlLQH7j3/XWihhdLfrbXWWsXaa69dfOhDH0q9O5yn2WefPWlT
jjzyyKStcO96v/vuu68466yzij322CP1OdIb54orrmhEv6JXEm1Ebs20/PLL
Fz//+c/TvHfttdcmnw4eYvxL5plnnrTWWmWVVdJ3+3//7/+le8L35ZVhjqQv
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
PfdccfDBBxcLLbTQEE2CNclBBx2U9B918cQTTxRnnHFG1reE38Xhhx9e/PGP
fxz35/hev/rVr1IPt5xvB8+Lr3zlKzV8oyAIgiAIgiAIgiAIgiAIgiAIOo1a
UbmUBRdcMNtXZI899kj+3i/+e3C90oMgCIKgFXn2KVOmFHPPPfcQjcFb3vKW
1BtCDr3O/H8vcsMNNySfh+r6oPTC+vCHP1xLLxHQgE6aNKmYc845h3zWkksu
WZx88sm1fE7Jfffdl/qk5L7bG9/4xuLSSy8t/v73v4/7c+g6LrroouJtb3tb
9rPmm2++YurUqTV8oyAIgiAIgiAIgiAIgiAIgiAIuoGcgzrd//qv/5qpztP/
zzbbbMVZZ51VPPbYYwNdwxsEQRAEoKE4/vjji+WWW25Iblz/rQ9+8IPFzTff
XDz77LPdPtRGMeefc845xRJLLJHVCTgX++67b/L4GC8vv/xy6rmx9NJLZ3tu
bLzxxsWPfvSjGr7V/3LdddcVm2+++ZDP4mcyzzzzFNOnT08+J+PlwQcfLA47
7LCsjsTL+Y3+bUEQBEEQBEEQBEEQBEEQBEHQv+hhfs899xSbbrpp8uyu1vIu
u+yyxXe/+93UWz0IgiAIBhX5dZ4O66yzTvGa17xmSG58lVVWKaZNm5b6Zwy6
BpHfhJ4ar33ta7M6AXrMCy+8sPjb3/5Wy2fdcsstxQILLJDtubH77rsnP5E6
ueCCC4r3v//9WW8Lfdb0UqkDug0eIf/3//7f7Hmk3znvvPNq+awgCIIgCIIg
CIIgCIIgCIIgCLqDXMdtt91WrLfeekM0F3IqW2yxRXHllVd2+zCDIAiCoBH0
zXrkkUeKrbfeOvkb5HwIvva1rxWPPvpotw+1I9AJ7LTTTln9A/8rvVbuuOOO
WrSYf/7zn4sTTzwx9TGrfpbPP/bYY2vRdZTQypxwwgnFHHPMMeTz5p133mLy
5MnFX/7yl1o+i45k0UUXzep3vLbddtvipptuquWzgiAIgiAIgiAIgiAIgiAI
giDoDnIPL734Uqqx1I/99a9//Uz5gHe84x3F5z73udrrS4MgCIKg2+hnwc/g
iCOOKOaff/7UU6I13y8Hv//++0+oOfDaa68tNttss6xGQP8x3ld//OMfa/ms
3/72t8VnP/vZ4k1vetMQrYU+HOeff36tHltPPfVU8ZWvfKV41ateNeS7vfe9
7y2+9a1vFf/4xz/G/TlPP/108gejW23t19bau4SG5+GHH6nhWwVBEARBEARB
EARBEARBEARB0G3kBr7xjW8Uyy+//Ez5Jq9FFlmkmDJlSqpDjd4iQRAEwaDA
1+L0009P81xr/wzzIA3Apz71qeJnP/tZ0mVMFC655JJi3XXXzeot5pprrmKr
rbZK560O+GSsuOKKxete97qZPocewt9fc801tXxOyf333596lOS+2zLLLFNc
f/31xbPPPjvuz/nDH/5QHHroodnPob+g47noootiTRUEQRAEQRAEQRAEQRAE
QRAEAwQ9xdSjp6Y8QLXO9F3veldx6qmnpp+ZSHmnIAiCYDDRT+ucc84pVlpp
pSFzHq3FGmusUfzyl78snn/++W4fakeZNm1asdpqq2W1AgsssEDSEdTR4+Ol
l14qfvzjHxdvfOMbh3hA6MHx6U9/urjrrrtq+Eb/y5133llst9122d4lvvNj
jz2Wjmu8/PSnP0392HLn8NWvfnWxwQYbFDfffHMN3ygIgiAIgiAIgiAIgiAI
giAIgl5BjoG39+GHH55qS1t7t8sP0GFccMEFxd8er6+XehAEQRB0A/PZOuus
k3L7rfnwN7zhDcXaa6+deojwOtB3ayJx3HHfKJZZepmsVmCxxRZLfTL05Rgv
f/3rX4tTTjllprVG+dLb7Jhjjkm9XuqExoE/R/XzeJtsuOGGxcsv1aMnPfvs
s9O5ateTZerUqclrIwiCIAiCIAiCIAiCIAiCIAiCweK5554r7r777mLvvfcu
5plnnhl5EP/lr67+U47qqSfHn2sJgiAIgk7z4osvFldeeWXxsY99rHjLW94y
JBe+8cYbFz/84Q/TfDjRtBagBVhiiSXa9ty46aabaum5cc899xT77LNP9nN4
Xlx11VVtdR0vvPBC8h75whe+UBx00EFp3TIS2ukt5p577mL77bcf93fCo48+
WhxwwAHFbLPNltVavP/97099VNxfQRAEQRAEQRAEQRAEQRAEQRAMHvIo6np3
3nnn4t3vfvdMtadqTj/+8Y+n/u515FuCIAiCoFPoIXL77bennHu1d1bpcXD+
+ecXTz75ZLcPtWscf/zxxbLLLpvVQay44orFb37z26R3GC96idC2VD+D34i1
x7333tu2t8eDDz5YfPOb3yzmm2++5CNBHzMSbQydw7bbbpvtk0K7UQe0PBtt
tFH2/OnNph/LE088UctnBUEQBEEQBEEQBEEQBEEQBEHQu/z85z8vdtlll5T3
aO2trq/95ptvXlx77bUp5zIR63+DIAiC/oJG8M477yx22223/9/e/cd6Pe9x
AP+jWH6kVMqv+EM//ZgY+ZVoGisRC81QtsT8Tsw5Gnc7ocmvymVsFDFlZCYx
jVtmIVOR1YkMLaf1Oz8KcW973b3eu7VT55x7O+Xecns8ts9qp+/3/fl8vt+2
893ez+/zFa1bt97yOy0zhZkl7NmzZ8la7Ol74c8991z06NGj3rxA/nzNmjUN
5iC2V3aMTJw4sd6ZGy1btCxzXr777rsGn58dG4MHDy6fTQ4//PCYOnXqdp33
iy++iBtuuKHOOTt37hxVVVU7dU/p999/j5EjR0bHjh3rnCP7Lvr06RPV1dV/
SF4FAAAAAADY/WVHd2VlZRx00EFb9Vxk5uL888+PL7/8co+cbw/An0fmAxYt
WlT2wvfaa6+tZmXtv//+0a1bt9KRsG7dul19qbvc66+/Hn379q2TF8jXqlev
XvH3v/9jp3/nr1y5Mv5yz19Kp8i258n8RM40W7VqVYPPf+WVV6J79+7lvcxs
xqxZs7brvMuWLSs9FrU/z+SRuY9Ro0bt1D1t2rSpZESy26Jp06ZbrZ+5kJzR
Mnr06J06BwAAAAAA8OeS39XMTMXDDz9c9qQ291zknwceeGD07t27fF/YdzUB
2F3V1NTEfffdFwcffPBWe+3ZOXDOOefEhx9+WGaI5J75ni7niQ0dOrTefouz
zjrrD8lYTp48ubzu2+Ye8ujSpUs8//zzDc50yW6MsWPHxgEHHBDNmjWLu+66
q/RWbI987qOPPlre923nfFRUVOzUPf3666/ls1J9nR2tWrWKO+64o+Q9AAAA
AACAPUvuISxevDj++thfo2vXrmW2eu4fNGnSJFq0aFFmoc+ePXtXXyYA1JH5
gIceeiiOP/748ntr8x54ZgYvv/zymD59emxYv0HW4l9++OGHuPfee+vtnjj1
1FPjm2++KVnMHZE5jey2uO6666JNmzb1ZjpOPPHE8pkiP3vU59tvv43hw4eX
97J58+alj6MxvSSTJk0qXRO1z5kdXpkx2VE///xzyZ7mvJXMptZeOzs4rr32
2jIDJfMeAAAAAADAnif3VvJ7mY888kjZb8lZ97W/F/rSSy/ZqwJgt5L7+0uX
Lo2BAwduyQ9kp8Jhhx0WQ4YMKTNENmzYsKsvc7eSv8unTJkSp512Wp0sxAkn
nFBmd2SGpbEya5BZizFjxpS8w+a+rG2PM04/I1asWNFgNmHatGnRr1+/8jkk
MzQLFy5sVI7h448/LvmH2ufcd999yxyQjRs3Nrq7Y/Osmttvv730WGybtejT
p0+55ob6OgAAAAAAgD1H7pWMGzcuLrjggpK7yCP3Et58882y5wAAu4vMDixZ
siQqKyvjzDPPjNNPP73MxBg2bFiZIdJQh8KeLueIZcdF7TlieXTq1CnGjx9f
OjAaIzOb+T5MmDAhjj322JJvqG+WSB5nn312eXx9uYecXVZVVRUdOnSIQw89
NG699dbyuaQx1qxZEy+++GJ5ftOmTbfMSMt8SWY3GjMfLf9/Zd/HY489Fu3b
t9+yXt5bzjvJvouXX3650dcIAAAAAAD8/1q/fn0s/nJxvPfee+XIfZmffvpp
V18WANRr+fLl8dlnn5WMxaeffrpD/Qx7kswRZA9E9+7do1mzZluyEG3bto2r
r766dIZsb6dVZify8c8880zJOGTPSM7vaN26del/qJ21yJxC5i3y/dk2b7E5
O9O/f//yvJNOOilmzpxZZnk0Vn5uyfkhLVu23Kqra9SoUSWPsb2v0erVq0vW
onPnzlvdw3777VdyPZlF1Z8CAAAAAADUlnsg2d2dvdt55N8b278NAP8r2b+U
+/7ZXdBQdwJbW7VqVUyePLlkJDZnCZo0aRLt2rWL6dOnb/d8jAULFsSIESPi
yCOPLDmJnOXy4IMPlv6MLl261Om3yIxHdXV1nZ6J7CJ54IEHynMyqzFo0KDy
sx15LzOjMXfu3OjateuWTors3Mh5KXnu/zSfJM+ZHR95Pd26dduyRh6ZJxkw
YEC8++67O3x9AAAAAAAAAMCfU+ZSampq4qabboojjjhiS55g7733josuuqh0
NzQ0VySzmDln46mnnopLLrmkdEe0aNGiZBOefvrp+Oqrr0reoaKios5ckaOP
PjqmTJmyVW/W2rVr44033ihZjJxx0rt373jttdd2+N6ymyKv/f777y/5jbyG
nCmSM0CuvPLK0t3VUG/GunXr4q233oohQ64p15pdFptnkhx11FExfPjwmDFj
RqNnrgAAAAAAAAAA/x+yFyRnsNxzzz1xyimnxD777FOyCdkvcfHFF8fYsWNL
j0POaskei48++iimTp0ajz/+eFx//fUlH5GPzRzCVVddFRMnTowVK1aU/oic
TfbOO++UuRubMwt55KyRgQMHxrRp02LOnDll/TFjxkS/fv1K1uKYY44p/Ri5
zs7e28KFC0tHRc+ePaN58+bl3tq0aRNXXHFFPPHEE/H222/HvHnzyv3N+NuM
mDRpUunlyGvJx2XfR3ZbZAdIvh7jxo0r82rMEAEAAAAAAAAAsqviySefjHPP
PTfatm1bMgY5G6RTp05x6aWXxrBhw+LOO++Ma665Js4777zo2LFjmavRvn37
6NGjR1RWVsasWbPqzNZYuXJlvPDCC9G3b9+SWcg1sycisw/Zi3HjjTeW9bOD
Itfr0KFD3H333SXT8EdZtmxZyYH079+/zDrJa8jZInnO/Nktt9xS7i8zICef
fHK5/8xl5DVmjiSzGjfffHPJjshZAAAAAAAAAAC1/fLLLzF79uwybyNzBq1a
tSqZg+ymyN6LzChk/0TODWnXrl0cd9xxcdttt8XMmTPj+++/b3Dd7Jn45JNP
YujQoSWnkevmOrlerpvr58/y33L+R84i+aPl7JT58+eXfEdmSLKTI2eL1Hdv
eS2HHHJI9OrVK0aOHBkffPCBnAUAAAAAAAAAUK/spvjtt99i9erV8fnnn8ez
zz4bFRUVMWjQoLjwwgvjsssuKz0Po0ePjldffTWWLFkS69ati40bN8amTZv+
7dq57po1a2Lu3LkxYcKEknvI9QYMGFByGDlPZP5n88t6OYvkv3FvmblYu3Zt
mTGSnRsjRoyIwYMHl46L7NrI+ShVVVUxfvz4eP/996OmpiZ+/PHHcn/b9nYA
AAAAAAAAAGwrMwbLl6+IxYsXl+zFnDlzyoyPRYsWlZxFZieyt6KxskNj+fLl
UV1dXdabN29eLFiwIJYuXfo/yzVk9iPnnGSPRt5bZkDyOjKH8fXXX5frW79+
/X/MkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPw3/RMwrDGe

     "], {{0, 296}, {2140, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{478.02447916666677`, Automatic},
   ImageSizeRaw->{2140, 296},
   PlotRange->{{0, 2140}, {0, 296}}]], "Input",ExpressionUUID->
  "c1a0de92-c09e-4d09-93a3-cc747be73f87"]
}], "Subsection",
 CellChangeTimes->{{3.742225210268482*^9, 3.7422252341165237`*^9}, {
   3.742225399065777*^9, 3.742225438530488*^9}, {3.742225588522272*^9, 
   3.7422256174212418`*^9}, 3.760965450136301*^9, {3.7609659085405912`*^9, 
   3.7609659145205517`*^9}, 3.760966061616918*^9, {3.7609662283060203`*^9, 
   3.7609662325881534`*^9}, {3.7609881631948357`*^9, 
   3.7609881934150953`*^9}, {3.763399711721055*^9, 3.763399735639789*^9}, {
   3.763781175999538*^9, 3.763781199419866*^9}, {3.763783033394322*^9, 
   3.763783062614313*^9}},ExpressionUUID->"d43faaaf-0673-4970-8df8-\
4e4a3824b78a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BHoloTerms", "[", 
    RowBox[{"mu_", ",", "nu_", ",", "ro_", ",", "ap_", ",", "bt_"}], "]"}], 
   "[", 
   RowBox[{"aa_", ",", "bb_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", "I"}], " ", 
   FractionBox["1", "2"], " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Eta]", "[", 
        RowBox[{"bt", ",", "mu"}], "]"}], 
       RowBox[{"\[Epsilon]", "[", 
        RowBox[{"nu", ",", "ro", ",", "ap", ",", "kp"}], "]"}], 
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]down", "[", "kp", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"\[Eta]", "[", 
        RowBox[{"bt", ",", "nu"}], "]"}], 
       RowBox[{"\[Epsilon]", "[", 
        RowBox[{"mu", ",", "ro", ",", "ap", ",", "kp"}], "]"}], 
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]down", "[", "kp", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"kp", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7609882902016387`*^9, 3.7609883336856995`*^9}, 
   3.7633997569171224`*^9, {3.763781225840177*^9, 3.763781299308197*^9}, {
   3.76378308459654*^9, 3.763783173997981*^9}, {3.763783249069476*^9, 
   3.763783250657702*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"983cafcd-c51f-4c38-b45f-38ca504d2886"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"BHolo", "[", "Rep", "]"}], "[", 
     RowBox[{"mu", ",", "nu", ",", "ro", ",", "ap", ",", "bt"}], "]"}], "=", 
    " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BHoloTerms", "[", 
        RowBox[{"mu", ",", "nu", ",", "ro", ",", "ap", ",", "bt"}], "]"}], 
       "[", 
       RowBox[{"aa", ",", "bb"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bb", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nu", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ro", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"bt", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7609882185298967`*^9, 3.7609882858452797`*^9}, {
  3.763783179616485*^9, 3.7637832186491003`*^9}, {3.763783265123892*^9, 
  3.763783272541514*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"77406683-38ba-46e4-aa8c-df27a8e3453d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HoloraumyResult", "[", "1", "]"}], " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"HoloraumyDDTable", "[", 
       RowBox[{
        RowBox[{"hfield", "[", 
         RowBox[{"mu", ",", "nu"}], "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "==", "  ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "I", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"BHolo", "[", "Rep", "]"}], "[", 
           RowBox[{"mu", ",", "nu", ",", "ro", ",", "ap", ",", "bt"}], "]"}], 
          
          RowBox[{"UD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"hfieldupup", "[", 
              RowBox[{"ap", ",", "bt"}], "]"}], "[", 
             RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"\[CapitalStigma]", "[", "ro", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ro", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"bt", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7422254484916067`*^9, 3.742225580731021*^9}, {
  3.742225627520856*^9, 3.742225629935794*^9}, {3.7609655308202496`*^9, 
  3.76096569509562*^9}, {3.7609657842346163`*^9, 3.760965796045738*^9}, {
  3.7609662028059177`*^9, 3.7609662040706134`*^9}, {3.760966236712922*^9, 
  3.7609662463084173`*^9}, {3.760988398152261*^9, 3.7609885123568473`*^9}, {
  3.7614149156270847`*^9, 3.7614149161472077`*^9}, {3.7637832345667953`*^9, 
  3.7637832425144987`*^9}, {3.763783302906351*^9, 3.763783347216688*^9}, {
  3.7638177574029045`*^9, 3.7638177604504375`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"125b80da-d41e-4209-9761-7fe0d1fabb16"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7633997895317855`*^9, 3.7634064951224575`*^9, 
  3.7637833646596947`*^9, 3.7637835271720753`*^9, 3.7638176528228083`*^9, 
  3.763817761424178*^9, 3.763850364161059*^9, 3.763851942280007*^9, 
  3.763852928428804*^9, 3.7649528730253086`*^9, 3.7649529889860005`*^9, 
  3.7649563332294135`*^9, 3.765636046648162*^9, 3.7657286888138113`*^9, 
  3.7658406320936785`*^9, 3.7689330413061666`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"7b89f10b-8904-49ac-8618-883cc7e81d35"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQdwVOX6xoGAgKF3pAWkR5pcpShIh0BCqLlJABMglBAg1CRICy0aQAQ1
FAMEgggSqhQdEAQERGQoihcdRcqIcu8gMirDde69k//vn2/85sw5u2fPbnY3
m833zOiEzcnZr7zv+zzvVxuOSRwyvkSxYsVmluF/Q0Ynd58xY/ScoZX4x/Cp
M+MnTB0XFzJ11rgJ42Z0HBPAh534byfP///PuQoKfopLly61atVqzZo1//vf
/wq6LJ7CJ5980rRp0927d/txHRUUFBQUFBzi4sWLEOLUqVMfP35c0GXxIKD7
rKysOnXq7N27t6DLoqCgoKCgUDC4ceNGcHDw4MGDf/vtt4Iui8fx3//+Ny0t
rXbt2qdOnSrosigoKCgoKHgbcP3QoUNJ9r/99tuCLouXQJWHDBnStm3bW7du
FXRZFBQUFBQUvAeS36VLlwYGBubk5Hjzex89erR379779+974uV//PHHwYMH
f//9d5Nnvvrqq3r16kVHR1MST5RBoSigwM3Y73H79m0agTDliZffuHHj5MmT
aqmPQlHD5cuXa9euHRER4U36+/e//z137tyNGzcaPe7mzZsLFy6Mi4sbP378
q6+++vPPP2/btu3SpUu6x/jDL774Ijk5OSQkZPDgwfHx8ceOHSM4nDlzRqzZ
IxqPHTv2wYMH9srAM6tWrULwvP/+++6voUIRgIkZQ9mZmZkTJkwYN27czJkz
MeDPP//8vffe0z2ZfzP2b9y6dWvUqFFXrlwx/spioBDCbPTo0X379o2MjJw3
b97333//559/bt68+euvv378+HFKSspbb73lIV2hoOCDIHDFxsZWq1bt/Pnz
XvtSohlON3XqVL5d93lOTk5YWBhBT/zzww8/7Nq1a+PGjb/55hvtk9euXRs4
cGDHjh137NghUq179+7NmjUrISGBh7dv356bN46xZMmSGTNm4OP2SsJftW/f
vl27dj/99JNHqqrgv7BnxuDbb7+FxNeuXSt+BUNFRUXVrVsXJaB9zF1m7K9A
O6Gadu3apfvcYqCg6XisTZs2I0aMOHv2LH0hVFZ0dDSvbd68Of3CY7R8eHj4
gQMHvFgzBYWCBMlF+fLlSSi8GVWuXr3apUsXxLbucxKizp07axU7nvvKK6/0
7NlTu9oQD61Tpw6xUTf+yTNI+ho1ahBOxSewOV9ETDApzIYNG0qVKrVy5Urf
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
D1lQI7FKHDskc8fIW7RoIUYDCLzbtm2jdlInG80Y5OTkYIfazX3i0mfoTHs6
hOfM2EOgcwU1GCfcv/rqq2rVqo0fP96FlB/63rx589ChQzds2EBGQxBYtmyZ
CCx8C8m+bj2/xUAh2pwMiC7TlhbFhTSFahcvXmy0ajJ9uttmPuUCHPI+hRkx
YgRNarJnh2qSxNWsWdOjy2Zu3rwZFBRUvnx5kzWNW7duJTbSHVa82yneF6cz
FbUzqUwAexJntBYugEWVKVMGX7N5ZrVFbN++vVSpUvYGG01AXk/M1HmHGLBa
t26dUAXIZhzZnn4jAOIR2tiIncC5RF0iwNKlS5E6b775JjYG6RiFLg1CQEbe
k7riqqtWrcLrZ82aJdYaGT2I+NykSROHAyAEjfj4eNyQvMzLypNA17Jly1Gj
RokUnkBHqtKrV68HDx6Q3ehCx3fffUeIo8F1LxGHmQQGBtJBR48exYuJqNoH
xOYyMgiLpTL3R9RRenq6tqE+++wzbHL9+vUW319QwPyioqKQNPKTd999t2rV
qmfPnkUJNG7cmHSbWkNwOAgxGQaZPHny8OHDV69erdVaRjPG9jAeiIl0nj/Z
uXMnvIN0559Gde0hM/YQ6OjDhw9Dl0Yiu3v3LmqTiji7xg9rp6Y0l70QxDe2
bt1aG2qsBwpxci9yetCgQSQgcBBeEx0dTfNOnTpV2/vy+blz54aHh7tr/75D
3hcDjCTRusxOC1qGEA3hQrtuKZVN0M5ly5alE02mOEWER4QY+cgIp3ifcIcY
c9f2ST8AcTsgIIBYSm6u/fybb76pXr06QSk/4p+gDcfhFE6NIGGHaFTdUBgx
inhF5KSc+BplI9M0Xzw/Z84cgqF8Bl+jUrgeNnDixAn8FMc032WAiWKumZmZ
Bw8eNLkKjXcKf3e49EgudIyMjPTy0inKJhbQir7YvXs3BE10It8nFllMn2nM
hIQEchnaRBwLQ3iUvIykJ8AiF9FmyAkrSY2JP/Jd8BrsKfsIXkOokMD68ilD
uX+tfJDrKHL/WvHYrFkzQc0wO1RC62EJDRo0gMcPHTpkc+bCaMa8EzMW6/pI
0LKzs0n/zcfT3G7G3gfGRgJeq1Ytp6ahab2VK1di8yZ5Bw3StWtX7fGPzgYK
uubrr78mE0G8ifP57T2JU3Tr1s2NY30OeZ/y2Jvcl8D3e/bsiSnq1ii6EWLx
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
     "], {{0, 57}, {680, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{457.9999999999993, Automatic},
   ImageSizeRaw->{680, 57},
   PlotRange->{{0, 680}, {0, 57}}]], "Input",ExpressionUUID->
  "a8ca04fd-6362-4414-9d9f-a91dd9be4aa7"],
 "  where",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQl0TVf7/4kiCCpEhagqNdQQU80JIoYIYuprakKJqSkxvQiaEEPUVEPT
muehRQxFWWhLimprVdEYloTqS2l/2lptLW/XO+T/+Wevnt/53XPvueeee+7N
je7vWqzk5Nx99/AM32fvZ+9dfVhin5F+hQoVmuTPf31endph4sRXk/o+zS8v
j5s0ZtS4EfFR4yaPGDViYsthRXjYnn93+OH//5wrISEhISEhISEhISEhISEh
ISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEh
ISEhISEhISEhISEhISEhISEhISFhBR49evSvf/0rv2vhQfz+++9PdgMlJCQk
JCQkJCSePPz73/9+991369Sp89VXX+V3XTwF2picnNy6devs7Oz8rouEhISE
hISEhISEIUBi09PTg4OD9+7dm9918Sx+++23uLi4Fi1a5OTk5HddJCQkJCQk
JCQkJJxj165dZcuWha7/5z//ye+6eBwPHjyIjIzs0KHDjz/+mN91kZCQkJCQ
kJCQkNDDxYsXq1WrFhcX9+jRI6996e3btw8ePPjvf//bE4Xn5OScPHlSJ+4Q
TX799df/+c9/eqICEhISEhISEhISEu7jp59+6tChQ926dW/duuW1L/32229j
Y2O//vpr7Z+oRkpKSnx8/MiRI9PS0u7du7d161ZtCj1hxd69e1999dUuXboM
GDBg5syZ2dnZf/zxx4YNG7Kysh4/fjxt2rSVK1c6igWg8atWrSpVqtTGjRst
b52EhISEhISEhISE+4CyLl++3N/ff926dV770t9//33EiBG7du3SVmb37t09
evQ4ffq0+PXIkSPh4eE1a9a8du2a8hr0m9dCQ0MHDx585syZf/7zn7z55Zdf
Dho0iGLr1Kkjgo4HDx7ExMQcOHDAUTUePnwYFRVVu3ZtbwYpEhISEhISEhIS
EgaRk5NTq1atiIiIX375xTvfCK9OT0+HV8PYbf70+eeft27dWj2FDi2fPn16
x44df/31V/Hk0aNH06ZNe+aZZ3bs2GGT4nL+/PmKFSt269ZNyeQ5dOgQVP/+
/fuOKnPs2LGAgIAJEybIUxwlJCQkJCQkJCR8CjDhKVOmFC9efPfu3V77Uphz
y5YttafNwJZHjRrVp08fmwTyTZs2paSkiFSWP/74Izk5uUSJEtu2bdOWzAf7
9u07e/ZshcM/fPiwU6dO69evd1QZ4oXevXsHBQXB891tmHX46aefli1blpiY
mJaWpo1oJAoQbMJJD+3OKOiw6aX/5METXyQ1q+BCqpJdSJFWw2uWpKBD2y1S
oTwBaG1GRgY0Gw29fv266XKuXLkSEhLy0ksvPXjwwMLq6WP//v0NGjT47rvv
bJ4/fvw4KiqqcePG9+7dUz//+OOPz5w5I34+fPhwQEDAkCFDeFlbMt0yefLk
I0eOKE8QyNTU1O7du+vsmaU+/v7+EyZM8B1ZpXUHDx6sXr06occTtvWVMSLg
yu9aeAkXLlxgEDt27DhixIjhw4eHhYUhusoKkYTAb7/9huI3atQoLi5uzJgx
PXr0aNWqld2dLO7D9zULKyTZhRZSlRzBN0U6X8TYm5akoGPJkiXPPvtsnz59
XnvttUGDBjVp0mT16tXS8lgOuvTixYu9e/euUqXKjRs3TBcyd+5cPz+/pUuX
em2M+KI33ngjOjpaS7ZFukuhQoUwOzNmzMjMzLSxPFjmyMjIMmXKnDx50lHh
n332mU0yzwcffFCzZs2bN286qtKPP/7YtGnTatWquRP1WA7CqEqVKi1evDi/
K2INGJpjx46NHz8+KSlp5MiRuNo1a9Y88aT9/PnzaGiRIkWQ6uDg4OTk5J9/
/jm/K+VzQK+7dOlSvHhxeqlkyZL9+vW7fPmy577OZzXr3r1727Ztq1OnzsqV
K/O7Lj4HqUo68CmRzkcx9rIlKbjAHS9atCggIICOQqcg6rt37/aduconDHBd
wsaOHTsSS5or4cGDB82aNQsKCrp06ZK1ddMB9DsmJub111+3Kxj3798nxCN8
KJSHcuXKLVu2TGF08PCnn366devWLllpgprKlSs7ove5f4YPfGl6erqrzfEc
3nvvvcDAwE8++SS/K2INzp4927ZtWyXRaNWqVf7+/tD1/K2VQWRlZZlbeLpw
4cKcOXMQ4HyZ7+J7v/rqK699Ncp79epVEx/Ew06ZMuXu3buOqkrnMwTu1e5/
4YOahTGE2LzyyitTp06FY7z11lv5XSNPoQCp0rVr13Q2OvkUfESkrRJjz1kS
L8CbYkMzsfAmprzEIXiHDx/mszoH5Z04cWLu3LnoHWGgNhHiCcD333+/dOlS
Gkgzjxw5okxZW+s6b9++XaNGjenTp5uOho4dO1aqVKnIyEjTbF/g4cOHGzdu
jI+Ph4yFhob27NkzKSnp3Llzdufq0aawsDC4sc5MPrpGgX/7299KlCgBo8vI
yBDP169fTwz42muvubQP9MaNG3B1rJnOOx9//DExZlRUlI/k+zGmEydOrF27
9p07d/K7LtZg27ZtRYsWVcT1+PHjyN7QoUN9fEsvUrp9+/axY8eaW20XBCO/
2kjl0SMEyQupAnCwwYMHm4v6hYfFbOq8wBAgQu4v//m4Zn355ZdPP/30E8nV
C5wqIcyDBg365ptvPP1FyOT58+fxUJBtm/xPgx/3NZF2R4w9akm8AK+JDbRt
0qRJWHgTVlHh6jrvIFdjxoypWrVqr169YmNjr1y54kZlfRSQwyFDhsTExFSr
Vo0fFPNires8evRouXLltDs0DYKBmDZtWqFChRYsWGDaA966dWvChAlUo3jx
4s8//3yjRo2CgoIK/QmewM1QPXX5P/30U7NmzebNm2dTFO9oU8oh/BUrVlTI
eXp6euHChfmsukBin0WLFkVHRz/zzDMw+TZt2rz//vvqF6gkA7FlyxadhmAh
GzZsSOUvXrxorivcBw1ZsWLFq6++OmrUKHSwadOmPpV/6CYY3E8//ZTRF7+i
CFB3byZfmQPWDEtl2vhDMFJSUg4cODB16lTi08zMTC+3V+zFnjFjhkfTjSAJ
mDtif3MfFx4WopKamvr3v/8dTq6dPWAIevfu/eGHH5oovwBp1hPM1X1HlfAm
9PALL7xQtmzZjz/+WHkOW0Y2bt++rTw5fvw4dfYoB75//35iYiJcqGPHjphE
/GaTJk2cniHs4yJtWoy9YEm8AC+IDfYccoVtN2fYBVdH4N99913kZ/Hixdok
YSgi1MtRCsSTBBqItKBN6qkAN10nQgj5T0hIiI+PHzZsmDvJ6g8fPgwPDy9V
qhRyZeLjtG7r1q0vvvgiDTx58qS6jejLzp07o6KihOUB/ID9QX/F90KnETMb
S/vVV1/NmjXLZtrkl19+adu2LTGFkJaMjAyCAvUxLwpQyQ4dOhADZmdn2/yJ
LqKjlMl5u2A4Bg4c+NRTT+XXvUh0C+YaeyvSe1auXEnc4SP5h5YDf82wdurU
6ccff8zvuujh+vXryKo7K8tIdfPmzYkTCVWQTDQOmuFll/rgwYNu3bqhrR4q
n6YNHz4cs2bapKO88PDJkycjGL///jvhP7KhXXI9depUWFiYq5tKfEqzxNxy
q1atHM2xPKlc3ddUCVlF3p577jmFFSN40dHR7du3R2DUr+FuEG/PXee9du1a
RRiuXbs2fvx45F///GSfEmm7MCfGXrMknoYXxAZ73qVLlx9++MF0CUuWLIGk
ff755+Kgkvr166sP5cj9y3P1XLOuEyO/Zs2aBg0aCMZ76dKl4ODgiIgI02Hj
5cuXg4KCILc6my4dAVsxevToPn36KH7z9OnTNgmlmNYTJ04Qu2FVsNLjxo0T
6SVYV7QJGbARgHXr1tFdNg+xXZB8ZeoDpatdu3bPnj21KsCblStXVp+sruDC
hQv86dNPP9Vv1NKlSwsXLky7vJ+xIDb5VqhQ4YsvvhBPCHbKlSunk2NfQEGL
Bg8eTOiE8LhjZ7wABHVMHtyZkUbm1fq1Y8cOXJi5yWF3sG/fvpYtW6onDC3E
nj17IFHuOETkn4Ba6Wfo0/PPP6+98oAXEhISMB3GR8TXNEtMKRQtWtTRTo0n
kqv7oCr9+uuvDITaXxAJVqxYcdOmTTZvItjojv5Uj2mI1W2dI4W18DWRtgtz
Yuw1S+IFeFRsvv32WzrKdE6FwN27d5VlbnoMnta4cWP1spfk6rmmXOeZM2dQ
TyVfhcESGSam1wHRi2LFirVr187VhBxsZmJi4vz589WGlxiNuIzRz80b9/T0
9LZt29pNOaPCVNvmHBi6iCC0Xr16OTk5ykP82rBhw4iybZKIsEtEOuqG841T
p0718/NLTU3Vdgj6UrduXacW4NChQyVKlGjVqpX3jxegbrVq1YqMjBRjIfIP
69SpI/rzyQMmlHjtpZde8uVN+gR3DMrnn39uYZkEsLiwkSNHetl3iFsG3Nnb
4ghYe2yIO3l0WghCazf/Fn5Ss2ZNdd6CPqzVLCz2O++84+aWluzs7IsXLzrq
rieSq/ugKonF1lmzZomB+OWXX+DtPXv21HpDXkC827Rp44lFQApfuHAhGqSw
JqewVqQJo1avXm16dd4RTIixly2Jp+E5saHklJQU7Ll6Ach9IIfFixdX83/J
1XNdd52UEB8fX758eeVCz6NHjwYGBu7fv99c3RjuefPmFSpUiGJdsnW8jH2D
P6sXHylt9uzZQUFB165dw5GNGTMG06FzqOnhw4cbNmyoJs/Ic1RUFCX37dt3
7ty5xDIrVqyAzy9fvtxmlZPvOnLkSNOmTXv16rV+/fr333+fygwaNOjtt98e
N27cRx99pG3pjBkzYmJinK5GZWVlEQ2FhISo4wXvgGoHBAQogQbigdXq16+f
7+QfWo5vvvmmcuXKGFLfPHgNOUeM8d3uELMffvihT58+6oQ3olciTR56/7BK
wmeiacuXgzFBNWrUcCfmwgYS+KPsij9FVaEiiIdWExkOdNk4Q7NWsygN5+vR
nWtPHlf3TVXKyMign8XeusePH+M7WrZs6ShLHGP1/PPPe2iO9PTp0zQEpmSQ
o1or0nhejPAHH3xg4rM6MCHGXrYkXoCHxIagLDQ0FMLjTiEnT55s27btoUOH
lCcMVpEiRTZs2KA8kVxdwCXXKQ4Ap29FGhtKikzCKrW52QaBfYPfwtWViQWD
OHfu3MCBA20mAe7fv0/1UHnqmZSU9Mwzz+ivxz148CA8PFx9Uyo6Bc+nJpjN
jz/+GBKORdKZ8KdLodY7d+7cuHHjmTNndMwUVLB9+/balU0tcMEvvvhi6dKl
MzMznb5sLTCVZcqU2bFjh/j16tWrwcHBS5YsweagOz5+UooRiNOftm/friym
IMnQnrJly549ezZ/62YXN2/exMwSKrpTyPXr16tWrYq5U+Tz1KlTCBg64n3r
B7epUqWK/g5rVyHMiJunJ4mkuCZNmigZDpiX5s2bN2vWzO7hfgwKPt2g6bNW
syRXNwEfVCVxkYdIVkd0KSQiIgIH5Oh93kHIEXVPTJ789ttv0EvousHVImtF
2ke4er5YEk/DQ2KzdetWLLmb52yvWbOmQoUKu3btEr/ioGfOnEkMqN5RIrm6
gEuuU9DI2NhYMYcA4enZsycBI0R03bp1Jk55EmtDfn5+a9euNf4pWpScnAxD
tnlIjI/ZJC4m1itVqhRlOuX/0LYBAwZ44YBEotouXboYUdWHDx+GhYU99dRT
1vIZI8AT1axZUwQUhC1oR4kSJQ4fPkzlN2/e7OXKeAI//PBDo0aNsN7KOjhW
tEWLFjxRTlz3KRBIBgUFffbZZ+4UgnhDCS5cuCB+FQyhVq1aOqzAcxDbtBUb
YgnEcrzdxDOXgDVQGw0oMfG+I8lnUPAyNlbIEazVLMnVTcAHVQn3h/fELzCg
sLsZM2bo7+UUl18TcXz77bdmau8MSKO/vz8k00iqhrUi7SNcPV8siafhCbGB
TA4bNkyZtjWNK1euTJkyRcmiwUG3bNkS76BOP5BcXcAl1wk5758HEaDt2bOH
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
rNMEeJj81KlTy5Yt+9lnn4knX3zxRWBgoHJ1Lxwecq6cGbtv3z5B7D/66KOA
gIDZs2f/1TKLJCQkJCQkJCQkPIHDhw9XqVJl6dKlT/ZlbXfu3Gnbtm2/fv2M
3IQobkqqXr26cv/aqlWr4Opffvnlx3mYM2eOcsoNYU58fDwv37hx49ixY6VL
l96wYYO6NF7w0C1jEhISEhISEhISTzw++uij9u3bnz9/Pr8r4ikQhsyePXvU
qFHGryyHb9eoUUPcSZqTk9O4ceO6detC3VNSUrKysvbv38+T7777jr8eOHAg
JCRk+/bt/Pz999/D4dXz6nx2+PDhyvy8hISEhISEhISEhISb+PXXX0eOHDlg
wICkpKSEhIRNmzbVq1dv3Lhxb7311r/+9a/ff/990qRJQ4cOfeONN6Kjo9WX
+5w6dapDhw7Tpk178803X3vttcTERMvPh5eQkJCQkJCQkJCQuHv37q1bt8Qk
+cOHD+/cuaP+6/fff88L2k/xPp/Kycl5stOKJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJHTw/wAaR2l9
     "], {{0, 64}, {996, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{545.3333333333331, Automatic},
   ImageSizeRaw->{996, 64},
   PlotRange->{{0, 996}, {0, 64}}]], "Input",ExpressionUUID->
  "1f1b7a3b-1997-4cf1-8da4-fdbc869730a2"],
 "and\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQlwDdnb/2VFNlklkTAhkQgiiAgiIiTWIQmx72I3lgmCEcFg7GKJLWQw
Y2eMfRRiN9YiQSxliKQIUQlKkkLNqPy/b87/7brvXfr2vd13Cc+n6jfl1+nb
5/R5Tp/n+Xaf85zawyf1GGVaqVKlKVXwnx7DpkckJAyb2dMe/6fXxCljR08c
OaLzxKkjR49MaDHcDAf/w/8mmFeq9D//LiMIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIghBNSUnJnj17Ro4cuWHD
hv/++8/Q1SEIgiAIgiAIgjBeSktLV61a5erqWqmcvn37fv782dCVIgiCIAiC
IAiCMEa+fPmSkZHRpEkTJqCcnZ2XLFny4cMHQ9eLIAiCIAiCIAjCGPn06dOc
OXMsLCwgoPDfhISEgoICQ1eKIAiCIAiCIAjCSPn333/nzp1rZvY/+ztXq1bt
t99+o/VQBEEQBEEQBKFTvnz5cvv27efPnxu6ImUI/i9duvTq1StDV6SCsXfv
3qpVqzINdezYMUNXhyAIgiAIgiC+cj5//rxkyZJOnTq9fPlS7ckfP3588uSJ
3Jk4WFpaKqSsf//9F2Lt4cOHcgt2oOPevXvH/vHbb7+FhIRA1mlyE980b968
CQ4OhoYyMTGZO3cufYciCIIgCIIgCJ2CkDslJaV58+aPHz/mP+3kyZORkZGO
jo5NmjRB0O7n5zdo0KB//vknPz+/Q4cOO3bsUPVbKKNbt25NmTLF29vb3Ny8
Vq1a/v7+bm5u4eHhGRkZ+CsuDh0XExNTUlLCylq2bFlgYGB2drb0N/w1AuHJ
lkTVrl376dOnhq4OQRAEQRAEQXzlHDx4ELH3uXPneM55//792LFjXV1d161b
9+nTJ3awuLh40aJFLVq0gBpycnLKyspS+tt79+7FxsaamppCqe3evZt9cior
/yx1/PjxoKCgVatWbdiwoUqVKjNmzOA+o5SWlvbv3z8sLIySJKgFLTlu3DiW
mg9NzRmIIAiCIAiCIAhdkJOT06BBg4SEBITiqs4pKSmJj493d3e/evWq3J+g
embNmoXoPSQkpKioSO6vuCb0kY2NDUTWzp07lRbx4MGDevXq4QqVK1f+448/
5P4EfZeUlERT1Pj5/Plz7969mYyaMGECNRdBEARBEARB6A7E24mJiR4eHhAs
PKdt27atatWq69at+/Lli+Jfr1+/bm9vP27cODmVVFpaOmnSJFNTUx8fH0X9
JcvatWvNzMxQjSdPnshVb/bs2c7Ozjdv3tTktr45IKN69erFZNSUKVNIRhEE
QRAEQRCE7nj48GGtWrXi4+MRh6s65/37923btq1Ro4acxuHIycmBUNq+fbvs
QVwwKSkJGsrNzQ06i78a2dnZ1atXj4iIKC4ulvvT3bt3XV1dExISSBrwQDKK
MCqKioomT54cFhbm7++PoePXX381dI2MkX///Vfpo4qDNC9XDlUNguPf8nB3
48aNnj17Nm/evE6dOg0aNHj06JGha/R1Qt2vQvDlyxdVlvr48aOeK0Pg0di8
eXNUVFTjxo09PDwGDhz49VkBXW7lypVVqlQ5ePAgz2n//PMPAiFPT09ViQtw
PCgoCHpH9mB6erqlpaWFhcXatWuVfsOS5dWrV40aNZo5c6biiIRmj42NhY94
9uyZgHuqkEA8qm0ifkhGEUYFfNnJkyeTk5OtrKyqVq16/PhxQ9fI6MAjv2jR
IkdHx7i4OPxj586de/fuxYA8aNAgDLb4h8gx4Wviw4cPERERPj4+Y8eOXb16
9f79+7dv3z5v3jw4aG9v71u3bhm6ggajoKBg165dUFIY+QMCAiruLiFw9Dzv
cg0Ldb+Kwo0bN6pXr966detZs2YhgP/jjz82btyYkJCAR6Nbt25yqaEJPQBd
sH79ej8/PwxQEydO/PpCU0Tv7du39/LyysnJ4Tnt4cOHLi4u5ubmqjz7mzdv
tm7dyjLsMaC8fH190W7t2rV7//692pq8fv26ZcuWcgujOFasWAFFhhhD7XUq
HHiuFy5c6OTkdOTIETHXIRlFGCGnT5+2trZWO8J8m2AsRSRWSQELC4vp06cL
3DziG+Hdu3ehoaGKbeXq6nro0KFvXG9itJ86dSpaY8CAAUarRHhA/U+cOAGR
orguwEig7ldR+Pvvv6tVq6ZoqTZt2lD6YkNRUFDQtGlT+DWeVN4Vl8ePH9eo
USMyMlJWASlSWFjINiSCkurevfvRo0cVp97JglHxxx9/ZPHAtm3bhNQEwxS0
kqo3aWfPnrWxsTHaMVZTcBcHDhyYNWtWjx49PD09WW4N/g+CaiEZRRghS5cu
RYfs3LkziQJFEH39/PPPzs7OLi4u7Ml1d3fv06fPjRs3DF01owMOIjw83MPD
A6qceSI/P7+kpKTXr18bumqGB+44IiLCxMRk7dq1hq6LBty+fXv+/Pnx8fEB
AQFsq46RI0cap4un7ldRgIzCKFqzZk3YCJZC3Ni6dWtE7zRH2oDgSXdwcICb
u3//vqHrIj3Hjh2rWrXq6NGj1Y5d27dvR6jPSXszM7MmTZpACNy7d0/x5Jyc
nDp16uC0+vXrC9nMVy3//PMPRjCMY1/HN1k80Rs2bJg9e/aRI0eys7O/++47
klHE1wf6eY8ePdAh586dSy9sFUGbLFiwgM1kxvNLjp4HxLHdunU7c+ZMWXnm
IhrfZHny5An8Y7Vq1RBDGrouGnDu3Lnp06dv3rz56dOn/fv3N3IZRd2vQoBH
oGPHjm/evMHoyv91gNAb6enpkAyhoaHcVkdfE6mpqSYmJkuWLFF7Jvrk4cOH
mTiSBSoMP5cLAPbv329paYm/Dhw4UJI5Bq9fv27UqJGvr29eXp74qxkVz58/
Jxn1tYKnJiMjY8+ePQYXEegeCFdu376tz0JfvHjh5+dnZWVV0RdG6ciOsjJK
yPkGMaKmIMjcsmXLnTt3pL2sbBxrzJw9exb9RM9aAL4DHgQusoIujELHHjBg
gCQyKicnZ82aNZJHaxWl+zFevny5evVqSAlDV4QPHVmKk1HSXvbrwCAeBE80
nmtjWxgF5/vs2TMM13ioISu09uz44ezZsyGjNmzYIPwnmZmZcP3t27e3sbFh
QTsU086dO2XPSU5OxnFTU9N169ZpVzc58Ky1bt3aycnp4cOHklzQeCAZ9bXC
ctQgtjGSXP1HjhypX7/+sWPH9FbiuXPnMEpU9IVRurOjpjKqzBBG1AgM1EOG
DImLi/tm49jc3Nw2bdrApnpLSIXOg+Iq7sKoMulkFIKToKCgtWvXSu7+Kkr3
Y3z69Gnq1Knt2rVDdGHouihHd5YiGcWP/j1IYWFhs2bNLCwsZGWCAYGKHDZs
GNRE1apV4db9/f0hVdzd3dPT01X1xvv37yOoxsn4VUBAwLx587hlTfjJ5MmT
zc3N5RKVCwRuYtOmTfb29hj9unbtyq19wDA4ZswY9qFKlbEQViUlJSUmJkLH
JZcDR5CQkIDHSukaipKSEowJKMvI38RqAckorUEUev369cWLF8P5dujQISQk
JCYmBj1KcQe0e/fuoY/pc0Yo6oansmbNmn/99ZfeCuUHVYIc8PDwOHHihC6u
D881Z86chg0b+vn5YajB4ADToDd26dKl4i6M0qkdORmFh/fRo0d79uzZsGHD
pUuXeIJhXRtRDPAsAwcODAsLe/HiheQX5+JY9KWrV69u2bJl27Ztjx8/lrwg
8WC0wSMwffp0HYkaOEGIjrp16/r6+kZERJw/fx7/RSSQmpqqi+L0gCQyCqEO
4kP2NElbvTJDdz/c0cmTJ0eNGtW2bVtEpEH/l5YtW65evVrO48PZ9e/fPzQ0
VBcPo0h0ailORhUUFGDQXr9+PSKrt2/fSl5QBUXXHgTP7+7du8PDw9kABS1w
9uxZBweH6tWrG3ZhFCp2/Pjx9u3bY3Bevnw5Am/2BQoPzrRp0zD4WFlZHT16
VO5X6Ejjx49HiI4A8u7du+/fvz99+jSuwK1Cxc8nTZoEkbhr1y5VRaOg169f
q/rgheOoDwbwpk2botNyl50wYQJqxTNVOz8/f+PGjXiOEPlDbeFkFxeXqVOn
HjhwQOmTBRmF24eMUrv/VIWDZJQWPH36FDLc29ubZeeAK+nTpw9UOTpemzZt
LC0t4UG4+S0vX75s0aJFXFycPteeZGRkuLu7C0n1r08wkiC6w+Am+YB25coV
Hx8fqCf2hObk5OCBdXV1hYHmzZtnVI2gETq1I645f/58PLaxsbEQm+yFkl85
iJpU/Up3RhQDaoXKYyiTfDofA3Esmmjy5MmtW7cePHjwL7/8AgcNj4CmM8JX
7qdOnXJzc0OwLW23QSOnpKTA3Q8bNow53MOHDzdo0AA+tMItjJJFvIxClILI
LSYmRkfvygzY/aCaW7VqpZh6jgMBGOJAxXaDB4Tj69evH39CMD2ja0vhKYB4
/OGHH/Bf2GvRokUwHCy1cOHCr2/HIu3QnQfBoIRAy9bWdtOmTXio0eCIyurU
qWNiYmLYhVEvXrzo3bt3kyZNIHbkugGeDvQQ9ijBhcmO2NBNgYGB6K6yey2h
9UaNGsXlu8P5iEX5v0bdu3cPRfDMuL548aKdnR3GFq6JcFkMMqgSGvP8+fP8
d8d23cXJ/DNbWLpRSFq5ramMENz+oUOHUFt4usLCQrXnk4zSiPfv38+ZM4dN
KG3cuPG6desUXzQ9fvwYnTY4OBhqC2N13759cfKyZcv0VkmUW69ePXhYo/Jf
DHgx+Na2bdtKOO3h6tWrNWrU8PLykk04g/5cpUoVhHxG+N1EILq2I8vU5+Tk
JPsSDKo/KCgIgyoiZFU/1IURRbJnzx7Uef369TqSzGxeN8ZV2agVXQteBs2V
m5uri0K1Bh4WHs3FxUWtBxQOhnQMYhYWFogHuA6JgkaPHo3xrVGjRhU3a5xI
GYW4KD4+3tPTMysrSxfVKzNc92OvcSwtLYcPH3769GnEvdu2bfPx8UFbTZo0
CYEZRgCeb/1nzpxB1DR37lwjiQf0YCk4I4gmyAQuWkbvQkSESB6qitL4MHTh
QYqKijp37owBKi0tjfMC0C/+/v6suxqkE6ImJ0+eRB2grJXquN9//51lcjAz
M0PNueO3b9+uW7cuwki5LHlouubNm69YsYK7RwzL+PmaNWtU1QFFICLliSKO
Hz9etWrVCRMmyDYRy0+O9sTP+e9x9+7dOE2tiGBp5z08PIx/B96HDx+invxz
GmUhGSUQdFq4LfYFytXVdevWrTwOF2qLveRPSEgwNTVFb0Sf1E89YYixY8dW
r17daPdkRLe0trZOTk6WpJPg2QwJCcEQtGrVKtkQGgEAmr127doVdGGUfuwI
4ak4UXnv3r0Y2Bs2bMiT5lRaI4oEYWSDBg06duyou3mzuE3EhHJKATYaNmwY
BoTx48cbW4a3/Pz8wMDAVq1aSRWo4ParVavm5uYm+70PzYKIUcJsTgZBpIyC
68SzIBvYSI5But+DBw+gmHBriKNkb41txofxQW1GEdQK4StkhYRyXgx6sBSC
+VOnTsk9C4iyEBJbWVnxvJv61pDWg+AiP/30E5vDL+sFMPoFBQXxz3nTHegG
ixcv9vLy2rlzJ3ebCEg4HQHPxVQeey3PPVA3btyoU6cOBluoctkL4oH6+eef
MbDLvjnZt28f/DVuX2lL4iAUHOSYqq8quCYEPh7Sixcvyh6H6IuIiEDFBg8e
zCP/8XOMPzgNuoN/mjFuHFoD5jCet6+quHnzpoODAzOKkLyCJKOEgK6SmpqK
YZAtxBPy9g96Fo8PaxBfX1+9TRHHGG5ra4sHx9jiOo6SkpKYmBhnZ2fxU2Th
DaGeoKEgl+RecbAdo2RXTVYsDGhHDIYYwM3NzX/99VdV50hoRJGgfaZNm6Z0
YrkeSEtLMzU19fT0fPLkif5L52fDhg2IH5YsWSI+aERkwmaeQC7JulS2Y1SF
XhhVJk5GQdogMAgICJBkaxVN0V33g5WHDh3KXuPLtQlGWoRMTk5OiquAFbl/
/z5Obt++vcFzTRvQUmjM6OhoNKae5/YbM9J6kDt37sBnKW6wy3aMql69enZ2
tvhSNAKjCiQPYr9r165xB9maI1SV3fWWLVsQvVQq3wmOS7UH/wtthXuRm1yB
wTYpKQnhekZGhmxBiPkhghB+K32R9fbt25YtW9rZ2Z07d05pPXE1WGHGjBmK
Q9/p06dxZcQhPLmOs7KyUCXcQrt27finzbCdqSvEIwAzoVlgkfz8fCHnk4xS
C+LwxMRE1tv79+8v0B1wKwdBbGysfnoOop3IyEgMGpmZmXooTmtOnDiBuBch
mcjp4rBFWFgYWrhPnz6yLYx/42nFcYxjFXFhlGHtmJeXV7duXbTeqFGjeE6T
yogiuXXrFrxAp06dDDKFlW2ugfHzzz//1H/p/Lx69SowMNDb21t8jM2mKsGz
y83AZzsqwjnKvTWVBMS9q1ev1sMmI1rLKIwty5YtQwgk9ylcb+iu+yE2c3R0
VDoEQT3hiXN1dRWS44ItgUcl1U4N0imGtRQ61fDhw9HB6tWrZxC5bZxI5UHY
Il80b61atZ4+fSr7p61bt8Losqt+9AOqBImEsffKlStyx+fNm4eq/vTTT2wX
pypVqrBMDmwILSoq6tChA460adOGWzCCMTA5Obl27dpdunRRXFDGUhHKJoiQ
5e7du3haMUTgBLmFw+iWUJ3u7u7onEoncqCGeGwhwVxcXNLT0+XMhL+eOXMm
ODgYMs3U1FTV5zCObdu2wRbLly/nOaeCQjKKH/S02bNno5PgvnCDGs0aYpMf
8MPFixfrZ+hGiTY2Nqinka9mxVjRokULBGYio6/s7GwMESYmJnITg+Gq/P39
K+7CKD3YEU9oWlpa+/btd+3aJdc58/Pz69evj37bs2dPnitIZUQxsJcVCO95
PpyJB35q/PjxsbGxii7syJEj8INmZmY6rYB2sC1FYMcFCxaIHH/Wrl2LpwzP
mlwLHDp0CLcPsaaLhVG4OMZP7RL5aoTWMgpxS1BQUM2aNXWaNM8g3W/lypWw
eFRUlOIesiz2E250toAdYaEBP0jpx1LXr1///vvvExMT5eIEdKpx48axiU9y
cf63jFQepLS0tFOnTmhe/Fd28gmXtXvy5Ml6jkhxR3Xq1Nm9e7fccQw1/fr1
44Jk1BCygqW56927Nx5wNkEOAfmSJUsw6mJc8vX1RbfBcdml37KwNxWqmvG3
336Dmrt8+TJiJDc3t7CwMCgy/PvHH3+E+MIR/Jv/Jf+NGzciIyMxGtStWxft
iQpjcJgwYULjxo2bN2+OIejNmzeDBw/mj7Vwp/Hx8Q4ODriausareEgoo9j7
/69JRiH2gHtirwsaNGig6co4DJienp6Ih+U+wuoImGDo0KGWlpZ79uzRQ3Fi
QMOybOQix7dz587Z2toqtjAcN45jHGMrsvPy8oww24Yq9GPHV69eNWzYECZQ
fFPHfY1CVMlzBamMKIacnByfcnSar+zYsWPM0yl+3OQ+B4gcP3UEfBY8l0iZ
w607kJvWzpJE4figQYPQaeEoMUJK2BP++OMPNLse9KnWMgphEqw/ZMgQna4L
03/349IdI9aSMyj3J+Fr9t+/fx8REWHYl1p6sJRsjmjFJS3sa5Sfn58RZoA3
FFJ5kMLCwuDgYFxn+vTpsteBTAsJCbGwsGByBm5O4BwtkSDYiI6OVvqVLSsr
q0aNGnJ5Gx4+fDh27Nh69eqxKU8sswFECoTV0qVL8RO1jXP+/Hk7O7v58+cr
vi5DLMTNKsSTuG/fvpkzZ44YMWLq1Kn4t/DvAk+ePFm/fj2eeqghRPipqamo
tvC3cy9fvqxfv76hJo3oGgllVGxs7Fcmo9A5nZyccEcI1Hlmh6oCkWpAQAAi
Uj3MSykr/zTj7u5eUXabZRNl/f39xUxyuHz5MkYPZ2dnuVn67FXq999/X1pa
+vbtW4xpsvOTjRz92JG5GDc3N4yHck9rZmYmYm/+tVEMSYwohg0bNsD16Hrj
1wsXLqCbwVMrvu5bvnw5xoeaNWsa4dqosv/NMVulShUxa9u5He07d+4sGxiU
lJRERUVx29xfunQJLgCeWoJ6l2PkMgpjCwYWxeUYkqP/7ocBAQIKV16yZInc
nzDS1qpVy8PDQ3iyO24i05gxYwyyYlc/lmJvFRBKQazJLedH6Ni+fXs2ocXI
J4roGUk8CFv+A48vt0ITXRTxm6urK1wq64SLFi3Sw7yg06dP+/j4KH52wTgz
atQodINmzZopTsBDbfEgMxmOR16jEtHBEO3gskabvQGPnq2t7f79+w1dEZ0g
lYz69OlT9+7dvyYZhQ7J7ZcxaNAgLUY/liUGA7h+Rk4WUsIKFWKgZo0jMsCD
PvX19XV0dJT93o2IokGDBrDa7Nmz2RbJiO6gGqSotT7Qjx3ZJwYES3KBDVps
xYoViI2bNGmiNhOXJEbUGkRHaCVUlVucqyNwm5GRkYopLD58+MDmsSckJBhn
RhdYOTExUXwEe+DAAfgIiCbZOTO7d++2srKCc7x48SK6DUJuaZciGrmMgqBw
d3d3c3MTkmlBDAbpfgh7oDvkXu9DOA8ePBg9YfPmzRoZmuVNNdT7Fr1ZCrcZ
ERGheI+3b992cXFBC+hiF/UKjSQehE0Yw4OwatUq7iBGqhEjRuBgSEgIvP/7
9+/j4uLkktHpAjwvM2fORFmK7huPMEZL3Kxi2kBUDzqIRZv8mfFUcebMGQRC
6enp2lddZ0Dn4rnADeoula5hYUkIMTDCZ4m5DtonPDycdYO5c+dWxHX9snA7
O+N2nJyctEsmgyi0UaNGv/zyix5aA88dW5umn/ct4uHmOch5ao3AD9HZzM3N
uQ1qs7Ky2rdv37RpU1x54cKFCJBmzJhhqAXgWqBPOz579qx169br16+Xbf+b
N2/WqlULTl9VYh9ZJDGi1vzzzz+enp729vaos67L2r9/f/PmzWULwv2uWbMG
oSYchDFvmcTmfYlMM1tYWBgWFoZYlH2DwL1v3749ODiYtT+Gx/z8fEhaxeT5
YtCnjOrfvz+6MeIu4XqErV6H19NDbKD/7ofIE1euU6cOl+IMkd7YsWPZ7mya
PuxsnrDe5rfLoTdLIXIeP378wIEDZXeTxL9jY2PNzMzgqozzZYsBkcqDQB85
ODggUGdzxt69ewdDtGjRApqlTZs26LonTpzo16+fHh5VNpjMmjVL7nYwNtau
XRsPLDy74qvLpUuXshl9kELarRRDuQkJCQg4jW07eNxdWloaVIaRr4oqKSlZ
vHixr68vgh8EkMeOHRMYgKFTHThwAAOjiYkJ7C5mNH7x4oWfnx+6gZDtuowf
DPv16tVjqrB3797afRdA3BIfH6+fjNAvX75EhTX6qohejYHF1dUV94hwCFXl
Wfz15MmTHTt2SOsFVq5ciaLhrMUMbuj8ycnJ6PlxcXExMTGtWrX666+/cnJy
4DRxa507d+7Zs6eQfaiNBE3tCNm1c+dOqCFra2s8egEBAcuWLVNcFc5ge5/J
5g56/PhxdHQ0hGdKSgrsy1aqImAT3mklMaJ2sPwGwpcbvHr1Cl0F4yRiKgx6
uOuTJ0+qGirRhunp6dyQyLIqYXQdNmwYjm/evBmqAWYaOXIkvzwRaSDxQPjA
NcOsIjcgg2jF04RIAC2AyKRv374YLo4ePYqnDM2CG8R9SSul9SOjEH7cvXu3
WbNmbJ3ggwcPhIxy3L7Do0aNEjgqGqT7iSkUYxFCXLgG6AJ4Cm9vbxSqXS/C
lSMjI9ksQT2/0dLCUmI8I8J4NHhgYGBSUhKO437r168P94RIkr90MZYSg6HK
5ZDEg6DCR44cQRfFIzx48OCgoKCFCxdCwM6cOdPKyqpjx46QVNKOq6pgE2IH
DBggGzSeOXOmZs2aNjY2a9asUZx/fvnyZWdnZxZtTp48WesoC0NBVFQUnlmj
2uQFI0aDBg3gBA1dET7w2OIxHzRoEB4HdO/GjRs7OTn9/fffPD+BmaZOncqS
yAFoKPbZhYkg9Gct3luy3JUs56RxLhPQiI0bN7KXA4jTjHPxuByIexEpIV4S
MmUdD/icOXPY3tmyeHh44IlWPB8PPgLs5cuXS+sB2d7Z3333nfhFQO/evUPN
79+/zw1BGM2ys7OvXbtm/JsUyKKRHZ8/f85m9ciBcFepcszLy8MwK/ftBsa9
ePHi4sWLJ0yYkJqair9qNIxLaESNQFdcsGABbhbhmSpVIgvENduXXBa2rZLS
4B8aDQJcbqVPUVHRgQMH4JqnTZsGv6D2liUxkEjYCk3cqSSOLDc398KFC7LT
luCArl69+ujRI8nDY13LKHRdNzc35vvgBDHg47/4N46gq/BvmI6OwbZaSElJ
EVKWQbqfJIXi/yL+vHTpkph50Vz6hf79++t5m2aNLCWVZ8TjsGnTpokTJ86f
Px9WULtgUBJLaYGhypVFQg8Cc8BvYjiSVWQYrODg9Llo6M6dO5ClUOL79u2D
lO7duzeaFH5K6cCOikH6sZavW7euyESO8Dht27adNWuWkWyGjgcBAnbVqlXG
vMyHbT/KJeKGR0MbVtIki44k4LFimzOCxMREY24xIaAZ2auzShUntQ68Kh5V
Ifv8wlNMnjyZ3Z25uTme3AYNGrBMUKBp06aKU7vx+Ldp00byTK0Y8RwcHHS0
6UwFRbgd4XSCgoKY1WxsbBo1alS7dm0u1Y+qRU/x8fHS6kpDGVGjiVjw/nZ2
dqxlEDk3adKEe/tna2t77NgxufMxoMXGxorUHUZiIGhMtry9wu2hprdJfVqg
0WR4g3Q/gxTKA/p2JWV5QXWNcEsZyjMaylJG0kO+yjAAXQJaBlExVGdycrLc
S1E4L4j6mJiY6OhozkcALy+v7t27R5eDH546dUqLol+/fg3nooeJ7mphE4/x
3IlXBPCJ8F/BwcGNGzcOFE2zZs1mzJjBvX2FsfAUc1nIcnNzfXx8YI7hw4fr
bRYummjRokUsPMAgqXQLsIpFdnY2+6APdJ3MVhK4xKFsNSX/mWvXrkWgjn7y
22+/cQEbegt6u7+/v6mp6dKlS2XDLfwJT2VSUpLk6phzcBXie58eEG7HDx8+
YKQ1MTHBQH39+nXOXvjVvHnzWPZCuYE0Pz+/bdu2/O/YtcBQRkQLsFdG6Jn8
6uDOnTseHh4QMomJibJJM+7duwdXhTaMjIyUe7969OjRqKgoMS8wjcdAnN4U
PqnJSDBmGQXb2dvbI9pUm1PLIN3PIIXyw3JW6P+1pEBLGcozGspSxtNDvsEw
AL3o9u3b+/btGz9+PPdirWvXrrt37973vxw+fLgCLUbQNXge58yZA6XfQAqg
xaZMmcJkFGwBSQsXyU3CRD9Eb8QjsGzZMv28eEQpmzdvZtP5IKWlXWJsKHbt
2oXhtFL57I7169cbujrq4aZMdOzYkX9abFZWFgZPVZnrnj9/3qJFC/RVWS18
//790NBQxZ0fxYNSUBa6a4VoZD0g0I546NatW2dtbb169WqlHhz+zsHBQS5h
5oYNG/r27Stk/ptGGMqIbK4a2kpu52U5iouLY2JiMDQpXe2FkXPatGmIJWTf
+6GJ0FBisv8ZlYFQBApibrpC5PDkMGYZxWYiOTk5cRkYlGKQ7meQQtWC4vBE
uLi4PHz4UHelKCLQUgbxjIaylFH1kG82DEDPqVOnDtNQQUFB+tkWh5ADHVv2
G+vnz59ZzhNnZ2f9yBlUgJtI3Lx5c11nE9UPCIHmzp3LfdrWNIG/VNy4caNn
z55oVTxoCBf5l5vB9AMHDkSF8ROeb2dsL3VEUzxfOv7+++/vvvuOy8uKGCwp
KWnixIm6eI/99u1bllJ+3rx5FWu6kY4QaMcXL140bdqUZ0U/GnPhwoUYmbm1
wCxn8pEjRySvs1RGRJ+cPHlyWFiYv78/4pnt27fzn4/ABmGAmZnZ1q1beU47
dOhQ3bp1eaaLoP7t2rWT3Wb07Nmz4eHhYjIzG5WBUBZGaRgIIZ+e51OJxJhl
FHvVho7KP6HLIN3PIIWq5cqVK3Z2dtWqVeNfuK0WjTxjmTBLGcozGspSRtVD
vs0woLCwkM21Bu7u7hVoX8uvjA8fPmzcuJF7PYJRAnEFjNK9e3ddZ+pAbz91
6hSb1YkxavTo0br7/vjp06cScWi01gCj4siRI1n3VusldQfMivG/R48eqEbj
xo35c+Nwex/z70P66NEjmExt+pGxY8dya+uePXuGyFZHmSq5JPkzZ840tvV0
eIJE9jot3KtAO6anp3fq1Ek2p64iiOQRaXB7RqMvRUdHS7s0mCGVEfGQnjx5
cvbs2Yicrays8G/+8//55x94H/7MCR8/fuzXrx8EC793PnjwYMuWLdnMFlRj
xIgRcrN3NMWoDIQbWbRoUaXyPR8r1iwRY5ZRMLGpqSkcLk96YYN0P0P1ebWw
yXU2NjZCdlLgQSPPWCbMUgbxjIaylLH1EGMOA3QEnDu3Cs/a2nrPnj2GrhHx
/9m0aZOZmRniCp7Xsy9fvqwjGMX9/hiIMEeNGsVSG/Xs2fPu3bs6uiMMmIg0
KklBgwYNBE7JRg/HIMN+FRgYqHVuz6KiIpFTaDCkJCQkVCrf/Jd/fRZGObZ3
G/+aOLiJpKQktbWC3Tt27IggEGPmmjVrJF/zzoGOxFJ5YEgxnvHzzJkz1apV
k6TXwe1qJKaE2JEt29y3bx//pfBzeHz2fq+4uLhXr147duzQoBUEI60RoZ7g
VjD4qN384vHjxy4uLpaWljxNwb5wQXDxXyo/Px9+nGXiyszMxL/V/oQHYzMQ
SElJETmaSUtJScnAgQO5RQEiQZAMBarRh7YxY8YIdIJwcEqvsHHjRnjAunXr
8kzFMUj3M0ihQkCc4OjoaGVldeLECZGXEu4Zy4RZyiCe0VCWMrYeYpxhgO5A
50GIXrlyZdwy/ov++e18gzNy4IjxgMMuPj4+PBEI3GgrwZw+fVrpRT58+NC5
c+dK5fvS/vLLL2LyoPKDYW3VqlV9+vTpKQ5cYfHixWxfNrVwE6sAGkG7aTAQ
gBgZRL52Y4voESSsW7eO/0zuK8aQIUPEz75D/4mIiECYWlhY2KFDB8WMPVJR
8r85xIxq/MzJyUF94uLiRPY6uPhDhw5pNEJKa8fdu3cPGDAAjv7ChQvoSHCL
Ii+oFAmNyGXY6Nq1q9rv6fDpbm5uFhYWe/fuFVNoWXmzjxgxYvPmzah/cnKy
mJ07NEI/Bir73yRpxiOj0M67du1Cmw8dOnSIajAKIQAODQ3lOQcgmk1PT9co
EdCMGTMEOsFRo0YpvcKWLVswMnt7e+fm5opsDYN0P/0XilDcwcEBMoqbF6c1
wj1jmaSW0ptnlMVQo5PeyjXOMEB3XL16FZ6rEm9iecIgXLt2zd7eXosX4NqB
cWzOnDkss4Srq+v27dsrVg4oHtCrJ02axGQU2/9ai4sgfg4PDxeZtBDDdY0a
NYQkAuWScUEwis8rCL3Zo0ePkydPHj16tFOnTrqTyWhbtHAl0TuYfzVIa8fb
t2937NgRwTncE55WHb3yktCIEBRMRQpJzc3yO5mbm//2229iCmVAaCQmJr54
8QJh0sWLF8VfUAj6MRBbh1WpfBWzPjdPEY8xT+pjeedq1qzJszGrcAzS/fRc
KNsRz8bGJiMjQ+SlhHvGMkktpTfPKIdBuofeyv2mwoAHDx74+/szDTV//nzj
zwJtPEB03L9//7YU3Lt3T/H7CBxlUlJSpfJpltqlmtcOVIbbXBKB31eQ6pyx
bt06tiejdoFHaWnpoEGDxG/XfuDAAUtLy0aNGql9hwwNGx8fjwrHxMSIn4CH
RxtX27Zt28iRI1NSUnT3xRluqEWLFqj2L7/8Qt+1y6S2I4RGZGQk3F/btm3v
3LkjSQ0VkdCIeXl5vr6+Aqf9wLnjZDynmzdvFlMoY+fOnWh5RFwIk2S3btQp
+jEQjDJ79mwYKDw8XG+3JgnGLKNQt8qVK7u5uUmy17xBup+eC0U/t7Ozg5IS
v9JWuGcsk9RSevOMchike+it3G8nDMjNzQ0ODsadVqlSZc2aNcajGTXN76R/
iouLuYwckgBDyK0UZhkj8Sf0Ru4NCcrVg66BZEhISGCio0uXLhXrbacqrl69
yj7tubq68mdJVQr7FCUypw0escTExErqsg0wuEgpIiJC4NxF/qKnTJkCsyK6
e/z4scir8ZCfn1+/fn10nk2bNumulAqEtHZ89epVhw4dZsyYMWTIEN1lupbQ
iBkZGTY2Nl5eXkK2s8dAFxISgrZaunSpyHIBhFt0dHSvXr348/5Ji34MxJbG
VypPPaSjRY46wphlFESBra0t3IQkSXEN0v30XOjhw4cRPcKlivQpGnnGMkkt
pTfPKIdBuofeyv1GwoC8vDyWSQM+DjpFlWB8/vw5RLrSRPS6Q9P8TvoHzXXr
1q20tLR1UoCehiBfzgSI2zFAycp5/Bf/RrPoQfBCSXGp7Xr27KmLZFN6BrfA
lK+FhYWmwhwPC2Lg/fv3qzoBUc3u3bvxQNWtW9fX13fMmDH4ye+//3769GlZ
s7Lp3yYmJgsXLpw1a1ZQUJC/vz8U9J49e5TaFB0MA5Ekyx9w/Z9++gl1i4+P
V+Wn/vrrLzc3t+TkZLnKoKvHxcXBYwop6OnTpx4eHui6PHme3759u3LlSty4
p6dnQEBAs2bNVq9eXbGiQY2Q0I5v3rxBV4Qd0d8kqZtShBgRAQxiHtbhUSX4
iAsXLiA8LpHZI4lbGAVlsW3btjZt2sDc6PNQGUqHFPQBuHipZtSfPXsWZeEp
E6LgpEKtgTBW4Pbd3d3l9uTF/W7evBlNKmSeEh5hDMtoqHHjxvFMvc7Ozv7h
hx98fHy8vb0bNWoEK4hc2ikeY5ZRiKIxAEqy0qfMQN1Pz4XCjmZmZgiYVa0B
1JFnlNBSQjyjLhBiqaKiIgSHvXv3btmyZZACUVFRV65ckbxcmDI0NBQmk3t/
Dq89YcKEOXPmCHk7JMSDoG8cPXq0e/fuOBNVwgA1atQoPe/jrBY0AgI/9BDE
w+i98+fPR+9lQzQ6Ictrjb7Ns4cO7giN2b9/f4NMGxCe3+nrg9suytHREUEs
O/ju3buuXbsKWQKJAQp9XmQc8vLlS/Y5zNzcfO3atV/Bl1l4cKZMO3bsKLxL
I97DODZp0iRVo0dBQQFUhq2tLUY8GA6nJSYmsrlJEG6yUeWjR49q1KhRqXxP
AQxHxcXFsNHy5csrV66sdG9ltskgtIb4GeAoCMEbClIlBrksHBgxZHsOjg8d
OhTHIa+E9IEbN27Y29s7ODhkZmYqPQHPde3atRs2bAgPyNwWInBEeqtWrfoK
+phSJLRjYWEhVCd6l0739eM3ItxfSkoKYphhw4axj+OQ2NBHdnZ2+ElWVhZ3
Jp4FtjAKf+rWrRvLCgVz4yno3LmzYvJwbqtiPHHiQxoEDDY2NoiO9LnGU62B
EL2g/2O4OH/+vOzx3NxcPAVoKJZHix8unzBGD6UnoOXh8eFA4b4x7JSVty0e
MRStu6mGQtCnjEIrafRBkO3+DH8nyQQYg3Q/fRbK3uuiE7Zr107pd3bdeUYJ
LaXWM+oIfkvh4LZt21xdXXmmMGGI1iJBotoesnPnTgsLC8X5UXv37rW0tISg
49/0gaE2DMBw9/3331erVg1WZheEZoSzwEEjmaWMwG/q1KmQeHBVkydPhstb
unQphB46MBrf29ubWScmJkaV9GNbCNWrVw+C1yCrYzTK7/T1gTZv2rQpG6C4
ToX4s1OnTjy7hKDRzp07FxkZCXXs5OSEQcbPzw/NqHW3hLPDA1VJ2FYOxg8G
5759++J2MBps3bpVSND+5s2bfv36DRgwQFVyPzz7eMrQSmlpadwF8VixJYfc
hhQMDNQoGlJuw4YN3HEWVnl5eSmmHs3OznZxcUFkdenSJW1uWAYUh6Ggfv36
quYlMsekmGsaxxs1agQvg/hHSEF79uxBa0Alsc0p5Ni9ezfGcAzR3LsR9CvW
1UeMGPHVpDSRQ0I7orkCAwN1nXOGx4joSAhs8FcoHS52QmVGjx4NI8otbYCU
wFhUqXyVJed8mWDHFZTmkUhNTTUxMWnRooUQZ80PdLqjo6PAr6hSodZAx44d
g45QzNWMiAjKFD5ayPtYBCHw47iO0rdq3O4VCQkJnI6A+8CjJ/xB1hF6kFFo
2JEjR2IE9vT0NDMzc3NzGzJkCNOS/KDdunTpIvyVET8G6X76LBQ9HA2L5vrh
hx8U39nq1DNKaCm1nlFH8FgKI+TPP/+MpoOoXLRo0Y1y2OwsPMJ//vkn4kPE
gdq5AP4ewr3Iktueg0vSJdBN84cBjx8/RrABncVVg02txPUFDoC6BjFz//79
0YEVU0HCMXG752CMbdWqFXyWXHiMJoJc7dGjB4JwOEqljaAHNMrv9PWBJ5qN
NtOmTWOjCgal6Ojobdu2qfoJe/Rg0zNnzrCfYPDp1q0b++ao3X7K7AVppfJM
+Hh4tb4d4wFPKFt8gZFE1RZaHNevXw8LC0NEpGpOI5sPwFaQyWpViK+goCC5
QBEnw5o4OS4uTvYdKR5AVToFRm/evDkigfT0dI1v9f+C7jFo0CAEV6rGQLYf
PcZtuXiDO/7w4UO1peBRRSfEPfbq1Utxkt7Vq1ddXV1tbW1ls+7n5+cj7MSI
yvP1v6IjoR0hP+HxDx48KEnFlMJvRLYDF0JT2Y8a6NvTp0/HT/r27Sv7FQkn
W1tbI5qVXXQg65EVS79w4QJ6iIeHh/gNTXbu3ImupWenzG8gtO3cuXPZO0zZ
QYA7jkFeyAcUPEqwAhpWsZXYG0h0NgxBss4dggu2CA4OFp8jWgy6llHock2a
NFm1ahUbkPHfhQsXYnSFRFW7ABxNN2vWLFgB8Y/4OcYG6X76LPTdu3etW7dG
oKi4ykbXnlFCS6n1jDpClaW4HYgwjDx48IA7jlaaOnWqKtEqvlwGbIoYEqMH
xK/S40LWOvF7EMiQqKgo/DUxMZG7EbbjnqmpKcSUMUzvh66HD5LbPhWdExE4
pL2TkxN67Jw5c9hye4aDgwNGHnR4NBTCSxzBQLds2TID3o5G+Z2+PtDygwcP
hiHgW9EnYT5EKUOHDuVZog67t2zZUm6+Kzo/2w1Ku6G1tLSUdfhKX1HGFXQt
1iZVqlTBUK/0Y2t2djbG1e+++w4DGs+QhUiSbXMjt8nm7du38Uy5uLjcu3eP
O8hN/4Y3lz356dOn7K2pYmiBsWX8+PGSLBVBJB8eHs6TRxq1Qt1QQ7lvl6tX
r8Zx/FbI+jj0W/g1nJ+SkiL3J3RdhI64l9jYWLlAEY7MGEZO3SGhHaEy8CxL
kpBZFTxGRN9gL4EHDhwoazIYl+0HJNu3MVwsWrQIJ3fq1El2RgHM3bt3b7bo
UrF0yOoGDRqIH/lZplOBK9YlhN9AaAc2+EDpyA6nJSUlbItAgcPsli1bMGJ0
6NBBdmYUA2MOAgAEt3KBECvd4ImkdCqjoGFDQkIOHDggexDtuXLlSjQXVKTa
dzU4AdUTv4zRIN1Pz4U+fvwYPc3Z2Vl2Hi9D156xTDpLqfWMuoDHUhg66tat
i76q+KEZMTxaAwOF1rlr1PYQ2AXWgTq4efOm3HEYWmBKRh4PggqsX78eoxN6
jtyLWfxJcTQzFBcvXkQNvb294e8gBvv27YtOgttv2LDh2rVruVjon3/+wV9Z
NjZZoILj4+OFfAHXKRrld/oqgQmaNm1aq1atiRMnhoWFQVXxZMxD9+vevXu7
du0UlxzCp8CmAne1kwPPWlxcHOsYePq+DhlVVh5O4FnAY1KpPJ88npTk5OTU
1NQVK1b88MMPAQEB1apVQ8TLLzzRGvPnz8cVYCMM+LJ/gvjCQCG3zy8M6u7u
jivL2Yh1dWi6Q4cOKZbCZjuIn+MEv8bzUZLb20hulwccZ9+vp06dKiQAY58v
4Si5BX0cbBM0NItxri7XNVLZcfny5RAsOk35wmNElu5SMUkLvAmeJjs7O9m+
DV/PhDN7F8QdZ2+kcXz06NGKpXP54UVO12F7ly9YsEDPoxa/gdjGWIr77CB2
wnGMRaq2R5eFW66ouP8Ct5+U3BdA40GnMgpjOGKG9PR0udcy7K0smuX777/n
XyPAzhQ//9Yg3U/PhbLFMujtcm/e9OMZpbIUv2fUEaoshf+LhxoCpFOnTorv
zNmE527dumn91lFtD2EbciluCvP777/jOCJSIWt8eDwI7M72k5L78miEoHpQ
/SdOnNhZDnqjqnvHSItRFxEU2hZOLS0tTfgXf+0Seugiv5MR5iOSBPT548eP
b968GY3GPzCy9JJKZ5ZijKpevTr+BM+raQXgr6G1mYz6+rZRQ5c7fPgwun3L
li3r1KmDMCYkJGTgwIG7du1StRJKFrhjjHWKL9sRB44ZM0bx4/uRI0fgEeSS
GnFdvUaNGkpnzcGafn5+Skckjdi4cSOeDlUvJV69etWwYUPF6RPsuOKCKVWw
dR9KM3hAxcMFODk5Kb66/BaQxI5MmOj6bTOPEdeuXQsjOjs7379/X/Y4Sysq
NxOeDUqKyZpu3rwJLcYzP4RtCqMYnmkEniZEcXB/Wl9BC9QaiLWt4iitasGU
UthT6eLiopgsAhVgnwujoqKM59WuLLqTURh4x40bx14Fy41jCDshoNjCcP4I
BxdhKWpFbhFokO6nz0Lh2uDgTE1NV65cKddQ+vGMUlmK3zPqCFWWQsiHJ1fp
dxxujwMxUxr4ewi3MEouAYWqBVOq4PEgqAAGLqU3+G2iaUIPXeR3Mtp8RHoG
6jIyMhIthmaXMwfLPKlqCg0/sjJqypQpX5mMEgnamW27Jicw2d433PRvKDLm
HbZs2QKnI7fPC4ZNttlxXFyc0tekbOklhh25WUAaATsitJN7ByiL2oVR7Dhi
P57IlnlJpakDUPPk5GSWgsBQyy0NiyR2hK/38vKS+7gjLTxG5NY7yL2r5DYK
ZwujcIVnz57hZIzbbuXIdSp4AbRDzZo1Va22e/36dZMmTeAUxOzpuWPHDkdH
Ry0SAouB30A4OGfOnEoKGzHLLZjiGlBVKUy0wuUpXXcAF4BLTZw40TiHa93J
KDTj0qVLMcZWq1ZNLv8wN60CrlDu+4giLEWwyG++Bul++iyULd9Wmv9BP56x
TApLqfWMOkKVpdgbEqW7/LAcUCJnO/P3EIweQhZGobV50nHweBBw+fJlRBS4
i+PHj2t9F18Nmib00EV+J2POR6R/0FDwHYpThv7++2+4FZatQtNrkozigUUs
6H6pqamyx7OyspzKwT/g2efNm7do0SL8A/3W3Nx85MiRss8FRpVq5fB8P715
86azs7PsLsyagkGvXr16GNxUvUpiC6MUP+Wzrw9t2rTByAkBhYeXZwYFYkhv
b28M9Ur3EGHBc2hoqFKHhYrh5193BxNvxz///NPe3l7pFBep4DEip4U7d+4s
O9OgpKRE9g0qekhsbCw6DLQAtJKfn5/slxc8NegDbJKwKnOjIDgLRFazZ8/W
TjAyz4IwT8/Zt/gNxL2llwsvuQVTCxcuxP2in6ABVXUSjMmDBw9WlaOP2QKX
wrCjtOlgF8O+x8jIyMDYqKMcKbD79evXFQN7jDms1ykOcYpgoIuMjESwd/Hi
Ra2rof/up+dCd+3aZWlpiSBQ0afozTOKt5Raz6gLeCyFMLhx48ZKtxWG2ET0
C7Gp9R7uansIWxilOOX4/v37bMEUHi7Ya/ny5TyZ3/jDgLt376IDwKyIS5X+
HM7COD+j6wJNE3pInt/JyPMRGQncLGUHBwdV/ZYHklE8cIs4Vq1axR1ERIT+
iYNsFjGClri4ODbIs8VBAwcO5Lo6hgv8FeEiBiWetmWTVRA4aZ3L7vTp0/A1
qtLEcQujQkJCZIO358+fY0jHceZl4PtiYmJUBSHoaatXr8Y4v3TpUqUDLFtW
o3SjRrQShnfUQWsHUSEQaUeWz8rDw+PJkyeS142h1ohsoSUCddn3w7t377ay
smLretjcfuZk2TR4Ly8v2Y3/4C9w/bZt2/JHs3CmDcvRLiZkG0ZIkm9NOGoN
xBZGKa4zheySXQOyZs0anj3WMzMz4UYRPSp9HcGtjVK6LS/CJHhn2QTU+gdF
w/R6rgB8HwYfBPYC1w3BEHhOx48fr110bZDup89CMVB37doVoTXiasW/6s0z
lom2FL9n1BE8lmJfxxSFzMOHD319fSFP5HLHSVUugy2MsrW1lf2Yi5PZFxOm
v2B6eGq56nGo9SAYtcLDw5Vuy8sENeJ52fQjXzcaJfTQRX4nI89HZCTAobPv
ehBBWqynIBnFD7wA9On333/P4n8MERjPW7RogVGCfcE5ceJEv3792EQ45hpq
167NXg6gl06fPh0DDkIvtWsts7Oza9WqpdGuwRx4oBA8KD6qHGwiAUzs5OQE
scMOIuTr3r07k1GzZs1CT0hOTlY1NpaVv9bDRXDvqsJjXOHHH3/EA4thlrsI
etS5c+fat2+PkUHtW+KvADF2RHcKCwtTTKUoIWqNWFhYiDq4u7uzOdgw3/bt
24ODgz09Pdm7SmhkdBvuVSoGZygstk0DjH706FH0MUTyQlYi4LeWlpYrVqzQ
IuRGTVAf9q5b099qjVoDsSUDeKDg9di0AVTv+PHjzZs3r1mzJoteEOrExsaq
WvDOUj7yv6LPy8tDsATnKPtCGwPUxo0bYdx169Z9rbuzqQKjK9veCBGawHS1
bKyuXr26disZDdL99Fno4cOH0ZN5PijrzTOKsZRaz6gj+C11+fJlhNB9+/bl
Psog1kXXrVevnphJzmrL5SaYISDn8oXCFvD7GOFhbgxTRUVFEFCIw1XNgVTr
QcrKl8JhrOvWrZvsVMxnz56hdNymnnN9GBaNEnpInt/J+PMRGQPsvUGl8uz9
2k0eJhnFD/ohxgRvb+/WrVsPHjwY/RPdEgHSzJkzET0iWsZ4Itu34cTRnr6+
vkOHDg0ICMCAc+DAASGtioJSU1Otra337NmjaSU/ffqEBwqCSFWeGbYAChX2
8fGBPxo0aBAi4ZCQkN27d+fm5kZGRrq4uHTu3BkXUXUF9jxibOSf8IyaQEMh
CG/Xrt3IkSPhZDFQ4L8Ymb+aJJD8iLEjBjo0XUJCgo4eQ4FGxKCNzoCYZ9iw
YYiI4O7hAaGPXF1dYU08CMuWLeNqCIvj/2KQ79OnT1RUFOo/e/ZsgWMRQqzo
6Gg8LFpkd4cEw40ori/QKfwG4hZGoTWgJfE8xsfHowFxj3fv3j116hSOBwYG
QojBCqqUzt9//43fTp48mV8KIZjBcASLoNlhJqi2Ro0aTZw4Uad58o0TNHt6
enrlypXr1Kmj0XLpzMxMWGT48OFafNwxSPfTW6FwcOhRTZo0UTpri6E3z1gm
wlJqPaOOUGupS5cuQbmgYiNGjMBg6+XlBV0p/jUjf7lsYRQ0FPQaPFTXrl0H
DhwIw6FotA/GLhiuQ4cOMNz58+eVXkGgBykrV9lwFv7+/hgDMUa1bNkS97t+
/fqvezqKHJom9JA8v5Px5yMyOGj/5ORkU1NTKCmtl0+SjBICWikrK+vq1auy
b6ERyWCsUDr05eXlnT179tGjRxppB/RzCBw8GprGQmwt8OjRo/kXRkHaoP6o
GwbJBw8ecLbGP/B/cXc8LwbZvroYb4V88cQFce/nzp2DRvtG1JMsWtsRo6VO
F0ZpZETY7sKFC7Iz7uABcQWlvRq6CSHTjRs3+HNNK4KOh8gKilujAImtcdb/
wih+A3ELo5YvX47byc7OxiMgG4iiY1y7dg23rOqhQJzTvn17hDEC7wsXvH79
OpSXyBz7FRqMtBCe6EWKi034gRW2bdvm4OAgMEkph0G6n94KZZOF0KR//fWX
2pP14xm1tpRaz6gLhFsKrZGRkQHtL8ksTbXlsglmaEaUiIgRYxEMJ6trEKXD
cDy7dGnkQcrKF4Ih2EC5X/eukarQKKGHLvI7GX8+IsOCtt24caO1tTW6tKah
iywko4wKtsXA4MGDNXp1wKa/ym1JycEtjMJDqp19CwoKIiIi4uLidDfZ7CtD
OzuuWrWqXr16QhJia4HRGpF9pkGYJDyywojXsWNHuRxHeoDfQGxhlK2trXab
ceBe5s6d6+Pjk5mZKaqW3xIICL29vdu0aaM2O59SMDZiVETkCW0r/FcG6X56
KxRxL57HDRs2GNUbMO0sxe8ZdYShRie15bIJZoqZtwVitB7EaNEooQf7LCJt
fifjz0dkQNjLGehQKCmRwodklLGBRy8wMJAtVhL4EzxQCMBUfZHkdozSLndW
cXHxoEGD2rVrp+c3/xUdLex45MiRrVu36iJ6MWYj4n5x17Vr14aeEvgTeJkl
S5aI3GdNC/gNxBZGyfk1geCav/76a506dYQ3AoFoBCPbwIEDtU6MWVY+s3To
0KHh4eHCHw2DdD/9FMqaFOGcTvet0w4tLMXvGXWEoUYn/nK5iWRy+RIFYswe
xGjRNKGH5PmdjD8fkaHALaNhvb290eayt48geebMmZpejWSUEfLo0aOIiAip
3geyhVHa5X/Do5eUlNSjR49v9pWFGKS1o9YYvxHRPnv27AkJCam4H2K4hVHa
JVKDesLty+2FRPDw+PHjZs2aTZ48WfaDb15e3oABAzSN9HCFiRMnIpj5xl+z
Y3zo2LEj4jQj1FAMspTWcBPMtEhaaPwexAjRIqGHLvI7UT4ipfzxxx+NGzeW
+0qIBod15s+fr+nVSEYZJ3jctHinrZTU1FS2MEqL1Z14NnNzc43Wqxo/EtpR
ayqKEV+/fq3n98YSAkOzxbzLli3T4udv3rz5ltc3acrTp0/btGkDfyfXq8+f
P9+tWzctehF7Rr7NiILj48ePOppRLCFkKe3Izs7mFkZp+tuK4kGMCu0Seugi
vxPlI5LjyJEjPj4+aLq//pcTJ04cPnx47dq19evX//333zW9IMmor56DBw8G
BwfrdEdXgvjGgUfD+AkP+M36Jr3x/PlzBBgIDI4dO8b5Qfwb7q979+4DBgyg
eI8g5MjJyYmMjJw5c6baDPOEJIhJ6KGL/E6Uj4gBZ+Hs7FxJBXZ2dpcuXdL0
miSjCIIgiArBixcvwsLCVDlBkJyc/A1O9ScIwqgQmdCD0AUFBQVsp1RVeHp6
apGtiGQUQRAEYfzAPSUkJPA4QXNzc7ZSgCAIwlCITOhBVCxIRhEEQRAEQRCE
eMQk9CAqHLIyKiEhgWQUQRAEQRAEQWiBmIQeRIUDMqp3794kowiCIAiCIAhC
DJTQ45sCMmrgwIFMRk2YMIFkFEEQBEEQBEEQBD/QTdOmTWMyql+/fpQqliAI
giAIgiAIQi1paWlmZmaQUf7+/pru/04QBEEQBEEQBPENkp2d7eHhwbLFbty4
0dDVIQiCIAiCIAiCMHb++++/efPmmZqaQkl5eXllZWUZukYEQRAEQRAEQRDG
zrt376Kjo9kKqUaNGmVnZxu6RgRBEARBEARBEMZOYWFhz549mZKqXr36tm3b
aPNlgiAIgiAIgiAIfkpLSxcvXmxra8vEVMeOHS9evPjlyxdD14sgCIIgCIIg
CMKoyc7Ojo2NZbn7wOTJk+mzFEEQBEEQBEEQhFqysrJmzZoVEhKSkJBAMoog
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIKHjx8/LlmyZMqUKefPn//8+bOhq0MQBEEQ
BEEQBGHsvHv3LiwsrFI5derUSUtLg7AydKUIgiAIgiAIgiCMmtzc3GnTptnb
2zMxFRoaeuvWLUNXiiAIgiAIgiAIwth59uxZ3759TU1NoaSsra3T0tL+++8/
Q1eKIAiCIAiCIAjCqIFuSk9Pt7GxgZKysLBISUkhJUUQBEEQBEEQBMHPly9f
oKQqV64MJWVvb3/mzBlD14ggCIIgCIIgCMLY+fTp0/Dhw9k6qdatW799+9bQ
NSIIgiAIgiAIgjB2rl27xjJO2NraXrhwwdDVIQiCIAiCIAiCMHaKiopatGgB
GWVqapqWlmbo6hAEQRAEQRAEQRg7nz596tatG5vXl5yc/OXLF0PXiCAIgiAI
giAIwqj5/Plzz549mYyaNm0a5esjCIIgCIIgKhafPn1SdZyCW2Pg33//VWoI
HFRlO31SVFQ0efLksLAwf3//GjVq/Prrr0J+BRkVFxfHZNSUKVOopxEEQRAE
QRByfPz4EUGjoWuhnA8fPkRERPj4+IwdO3b16tX79+/fvn37vHnzoqKivL29
b926ZegKfut8+fJl0aJFjo6OEB34x86dO/fu3bty5cpBgwZ5enriHwafDgcp
d/LkyeTkZCsrq6pVqx4/flzIr/BE9OrVi2QUQRAEQRAEoQiCwxMnTkCkjBs3
7t9//zV0dZTw7t270NDQSgq4uroeOnTI4CE6ARNA1SoayMLCYvr06aWlpYau
4P/n9OnT1tbWXl5eOTk5Qs4nGUUQBEEQBEHIcfv27fnz58fHxwcEBCDcRaA4
cuRIo5VR4eHhHh4eiIFRT3Nzcz8/v6SkpNevXxu6asT/ABn1888/Ozs7u7i4
MNHh7u7ep0+fGzduGLpq/4elS5eibp07dxao7EhGEQRBEARBEHKcO3du+vTp
mzdvfvr0af/+/Y1cRnXr1u3MmTP4NwJgimaNDcioBQsWzJw5E6aB9DCGxVCK
oFY9evRAP587d67AL5gkowiCIAiCIAhVIFYcMGCAJDIqJydnzZo1UD1S1Y0h
K6OMmbNnz+7Zs8c4pSgD8iEjIwOVlHYmpKyMEnI+uhz0++3btyWsg1pevHjh
5+dnZWUlcGFUGckogiAIgiAIQjVSyajMzMygoKC1a9dKHm1WFBmVm5vbpk0b
qImPHz8aui5KgF0gXho1anTz5k1pr6ypjAJHjhypX7/+sWPHpK0JD+fOnbOx
sRG+MKqMZBRBEARBEAShGklk1P379xEVI5DWRbo/TkaVlpZevXp1y5Yt27Zt
e/z4seQFiefevXt+fn7Tp083trSHUDrp6ek1a9b866+/dHFxJqNw148ePdqz
Z8+GDRsuXbrE0wj4CTSdh4fHiRMnJK8PePPmzZw5cxo2bAhzBAQEbNq0afHi
xejkXbp0EZ7ygmQUQRAEQRAEoQrxMur169fh4eExMTEfPnyQvHpl5TIK0e/k
yZNbt249ePDgX375ZcyYMfb29rGxsc+fP9dFiWI4deqUm5sbtJ5RpRDMyMhw
d3dfu3atLmqFa86fPx+KAxaBpZLL8Svn5MmTqn6Fzga96evrCw0ubX2uXLni
4+MD9XT9+vWy8rmm7du3d3V1RSefN2+e8BaQSkZ9/PgxPj7e1ta2Ci/W1tY1
atRo2rTp8OHDIUVLSkq0K44gCIIgCILQAyJlFAsRPT09s7KydFG9snIZBQEV
GhoqK5pOnDiBuDQoKCg3N1dH5WoH2nDmzJkuLi7nz583dF3+P0+fPq1Xrx40
TnFxsS6uzzL1OTk5HT16lDv48uVLWMfOzu7w4cOqfggB3qJFi7Zt275580aq
yly9ehVixMvL6969e9zBgwcPQqdYWVlp9PFLKhmF9rl169bvv/++aNGiyMhI
dkFzc/MxY8bs2LFjXznsE96cOXOio6NRVZzg7OyckpJiPOniCYIgCIIgCFlE
yigEqNbW1itWrNDdxxeEr2fOnJFLb45qDxs2DNUeP368sWV1yM/PDwwMbNWq
lYTqQGvQUGPHjq1evbpO9ymGZlFMGbF3715LS8uGDRtCUqn64bFjx9B/kpOT
JZkyV1BQEBISYmZmtmrVKtkOmZGRYWNjU7t2beELo8p0M6lv48aNpqamuCA0
pqruUVhYOGHCBNwFTouLiysqKhJfLkEQBEEQBCEtYmQUpA2iwYCAAJ44WXek
paUhIvX09Hzy5In+S+dnw4YNFhYWS5YsMfjUvlOnTtna2v7www/6F5uPHz92
c3MzNzf/9ddfVZ1TUlISExPj7OzMJuCJAU0N9QT1Abn07Nkz2T+xHaO6du2q
0ccdyWUUTDB69Gh2wVGjRvFYBM3Su3dvduakSZOMbakdQRAEQRAEobWMQtS6
bNkyBMlyb/71xv79+y0tLStXrvznn3/qv3R+Xr16FRgY6O3tbViJ9+HDh8jI
yOrVq2dmZuq/9Ly8vLp16zLJwHPaiRMnrKysBg4cKDLD4bt378LCwlBcnz59
ZPeuwr/j4uJw/Oeff9aoo0ouo4qKipo3b85m9PFISwb7loeTXVxc7ty5I7Jo
giAIgiAIQlq0llEFBQVBQUE1a9bUadK8wsLC8ePHx8bGKiYiOHLkSJUqVczM
zNRGpPoH4frs2bPRqgsWLDDgB6nTp0/b2NhAC+guBzvERVpaWvv27Xft2iV3
p/n5+fXr10cj9OzZk+cKEBctWrSwt7e/evWqmJpkZ2c7OzubmJisWbNG9vjL
ly/9/f01XRhVpgMZBTHr6OiIq+G/aoXt+fPnbW1tcbKpqemWLVtEFk0QBEEQ
BEFIi9Yyavfu3ZaWlkOGDNHpjKNjx45VrVpV6acE7mvUwYMHdVcBrblx44aD
g0NgYKDcqi69AbsMHToUTbRnzx7dlfLq1auGDRvCQK1bt5bbeZn7GoWuxXMF
mJVlI588ebIYqXLu3DnoDsjGjIwM2eMXL17E8Tp16rAUJaiVwFQbksso6H1z
c3NcrXnz5mpXPHE9H6xevVpk0QRBEARBEIS0aCejSktLo6OjLSwsduzYodPq
Xbhwwc7OLjg4WPFTxfLly1HtmjVrGuHaqLLyOWahoaFVqlThSVWnU7Kzs93d
3TXacFYLIAdCQkLc3NxSU1PlhEZmZiaEpJAJbH///Xe1atX8/f3FLLK7fPky
uoqzs/ODBw9kj69cudLExOT7779Hp3379i367bVr14RcEI9Gnz59pJJReLhG
jRrFrjZmzBi1z9qKFSvYyQbsQgRBEARBEIQqtJNRiFQRoiN4lgtZJefNmzeR
kZGymbQZHz586NChA6qdkJBgbJn6GIi6ExMTBcbMumDDhg1mZmbdu3fX3Yy+
svLb/Omnn3788Ue5e/zy5QuEgKmpaZMmTV69esV/EVg5KChIpF7Iy8vz9fV1
dHSUTXUOid2gQQNYYfbs2ajS9evXY2NjBea+w6MxcOBAqWRUYWFhcHAwWxi1
bds2/pOLi4tZ9wZNmzYtKCgQUzRBEARBEAQhOYgV+/fvj2htxIgRwqP9rVu3
IhoMDw/X0Za7suzfv7958+Y3b97kjiCgXbNmjYWFRUREhKGmzAmBTTvkSW2t
Oz59+sQmpC1atEjXi7OePXvWunXr9evXywoN2KtWrVouLi7nzp1TewV0vOHD
h6O206dP11qt4Idz585Ft+R2Gc7Kymrfvj1kCK68cOFCdPUZM2YIz4iCWsXH
xwv/fsTPnTt3HBwccCknJye1m6wdP37c2toaJ1etWnXfvn1iyiUIgiAIgiAk
B4Hl3bt3mzVrxta2PHjwQEisyOVt5k/aLMurV6+Sk5N9fX0R5drZ2SG4PXny
pKpotqSkJD09ndNHOO3w4cMIhocNG4bjmzdv7t69e+XKlUeOHMkvT8QUKgmI
lh0dHe3t7XW6Z5NSXr58Wa9ePeELxyC7du7ciT6A6B36NCAgYNmyZWgTpSej
DU+cOHHlyhXuyOPHj6Ojo9HCKSkpO3bsmDRpEu4a4ld4GvOVK1eiR0EXixHm
qDAsDu0WFxcXExPTqlWrv/76KycnB3rf1dW1c+fOPXv2LCwsFHg13CZEKJNR
7dq1E7l5MbcwKiQkhP9zWF5eHnskWc584/zYShAEQRAE8W1y/PhxNzc3thOo
iYmJmZkZ/svSgnl4eJw9e5bnt+/fv2eZpREzCykLoSyuWen/wkJEpZ8eDh06
hHAXpcgeROR54MCBmTNnTps2DQG/2vU+khQqEug46BEUigpLeFkhQL9AyEDE
qf3wAZ4/f85NIZMFukOp6ECcHxUVJft9sKxckl+8eHHx4sUTJkxITU3FXzWK
/9Ehq1at+t1334lfyfXu3bvLly/fv3+fqwAsnp2dfe3aNdlE6EJAM3K59W7c
uKF1lVATqH7WqmPHjuVpGdw+tCROg/m2bt0qyZ6/BEEQBEEQhDGASA/hbuXK
lf/44w+1J0Oe2NnZsQASwq1JkybOzs7s/9ra2h47dkzufAiZ2NhYkbrDIIUq
UlJS0r59e6VpBnUN7gXyzdfX98WLF/xnwppBQUGscWxsbBo1alS7dm3IanZE
1aKn+Ph4TSUJP5B7Dg4O1apVE5n2XFo+fvzILY8Sc8tQo+wDk7m5+fbt25We
8+bNm5SUFBcXF5zTt2/fR48eiag4QRAEQRAEYXTcvHnT3t4eeuTChQv8Z965
c8fDwwPBeWJiomyegXv37vXs2dPExCQyMlLuA9DRo0ejoqLELCYySKFK4dad
CZ/9KAlcCnG188c+fPgQHR2NNunSpcv169c5rYdfzZs3jyW+k/vqlJ+f37Zt
W/7vlVrAaXNjS19///596Eq2TEnrvJTcwqgqVapMmzZt1f8CQTpr1iwItNDQ
ULaMbtmyZSwxO0EQBEEQBPGVweZfOTk5ZWdn85xWXFwcExPj5eWldIHMx48f
EU9C7Jw6dYo7WFJS0rdv3w0bNmhdN4MUqor//vtvypQpCJ67du2q03R5iuVO
mDAB5Xbs2LG0tFTVaRBN69ats7a2Xr16tdLJY1CXCP7lktShodBcqpZNaU1B
QUGTJk0g6NavXy/tlcVz4cKFGjVqoD0hKtH5tbhCeno6+8BXq1Yt6KY5/0tS
UtKAAQMaNWpkbm7u7u6+ZMkSPeRsIQiCIAiCIAzCrl27LCwsPDw8nj59ynPa
oUOH6tatyzNH6+3bt+3atfvxxx+5KP3s2bPh4eFiNg8ySKGqgE5BqIzgOTQ0
VG5rWo1AVTdv3hwVFdW4cWM0+5AhQ/hFGZepu2fPnjybI7948aJp06bLli1T
tQAH9V+4cGFQUBCXeYPlnz9y5IjW96IK2KVVq1ao87x58/Q8AVII586dq1mz
JpsUmpKSopEo/vfff0eMGMFmBqr6Lnnjxo369evjhJYtW2q6D5pc94Dp9anZ
CYIgCIIg9ExpaWmJOLSbJ4aQOEcYqtLWpaenm5qaenl58cw+QiDXr18/BOH8
IfHBgwcRN7Kpd58+fUK0uXTpUq2jaIMUygOX6q1Zs2bCE8Qp5e7du+vWrfP1
9WXrlfgzD0A6xcbG4swBAwbwyCjYsVOnTtAvPJeC1GrevDn3CQYKOjo6WtpE
HIwPHz5AzKLOM2fONM68Cnl5eX369GGZWNAmsokK+ZFdGMWzEzHkPFvQ16VL
F01bGN1j/fr1fn5++PnEiRONswEJgiAIgiBEcubMmWrVqikmRtMC/qxfSlGa
k00pERERSq+wceNGBJN169ZFYKmqlKKiosmTJ//zzz/8lcnPz0fwfPnyZfw7
MzMT/1b7Ex4MUig/KSkpaMnAwEDxqdQLCgoaN25sYWGxe/du/jOhDb///nuU
O3z4cFXdg+29pXZPIvx80qRJ7AtRcXFxr169tF4fxE9paWlkZCTqDAsarQpA
xU6dOoXnAv0fhkhKShJS1du3b7OFUfjvnTt3VJ0GPQt1zz54CdlsSw50j6ZN
m6JWOjIQQRAEQRCEwcnJyUGsGBcX11McgwYNOnTokKafUX777bfZwti6davS
K2zZssXU1NTb2zs3N1dkU3z+/HnEiBGbN29GOJqcnIxm0UMqBn0WumLFCqlk
FMvsUb16df4laWUyX6OGDBki/tag2gYMGABpduHChbZt20KEirygUrishsYs
o8rK1cr06dOtrKxQ1WHDhglpXjwvbGFUcHAwT8aPDx8+oHkrlW86kJ6ermnF
mFhzcXG5f/++pr8lCIIgCIIg9MCOHTssLCxq1qz57Nkz8VeD0EhMTHzx4kVE
RMTFixfFX9B4CmVrixAYBwUFiU8DCN2HaLx169Zql1lxGQL79OnDM6lPIIjP
O3bsCPUEgTNnzhwdLVx6//59mzZtUGeIFOOUURB6S5YscXJyQiXd3d3Xrl3L
k76DAzorPj6efd4dPXo0j+zKy8urW7cum/v3+++/a1o9lsVC5Co8giAIgiAI
Qnf88ccflStXdnNz03QtvFJ27tyJOBPSrEePHnpLU6afQqE4Zs+ejcA4PDxc
ZClcND5p0iS1KoM7OSYmRvzuTjk5OZGRkRCbbdu25ZmTJpKioqIWLVqgzr/8
8osRpph4+fJlt27d2KeiIUOGCP+2CPnMtuXiXxhVVp7FwtbWFmdaWVmdOHFC
o+px2/vSwiiCIAiCIAijBRE14j17e/vbt2+Lvxoixujo6F69eqmaQ6gL9FMo
gtuxY8ciuO3evbtIOcOicQsLCyF7BHPyLSIiori4WEy54NWrVx06dJgxY4ba
DIFiyM/Pr1+/PkTKpk2bdFSE1mRnZzds2BDtifZfuHChRh/4bt26xRZGOTo6
ZmZm8pzJ5n8CPFmaylWWxUJg9yAIgiAIgiAMwuPHj93c3KysrP766y/xVzt7
9qy/vz80Qk5OjvirSVUoovrQ0NDw8HC5yXhv376dMGHCnDlzhAgKxNs9e/ZE
YDxu3DhVs7lwfVwNUbqfn19AQEBaWtrTp09TU1Plsl6whVEuLi779u2D+gsM
DPT19Y2JiVG1EAbXgSSRZE0Wagg5huLUprYQA+7aw8OjSpUqPNnU0fgrV64M
Dg729PREW0E4rF69WvznNn6gUNiiLbQnLKXpWjM2FbNSeXI/noVR6Cp9+vRh
Mqp27dr8O/CiDrAFOmfdunVhlzFjxqA/Q6xVr16dFkYRBEEQBEHon0ePHl2+
fFntlKpXr14hiDU3N9++fbv4QhEB2tjYxMfH6yG5hPBCd+7caWFhgYhdLlH5
3r17LS0tW7ZsyZ8nnMEl8V6+fLnSE65cueLj44PGZJsFs+lzbH+iFStWyJ7J
onEUDfV39OhR2AgV6Ny5c40aNa5du6Z4ZbZFMuSG+PVr7EsHwnWexIziuXHj
BnQitICqTzYnT56EvoDehHhn34PQaGi9VatW6W4SILrH9OnTmbrp2LGjEKPL
/Vzgwii2+zA7U24lHe4OJuDuEWfGxcXZ2tpu2rQJ7QA5n5iYWKdOHRMTE1oY
RRAEQRAEoX9evnzZtGlTIdPASktLu3TpgngvOTlZfASLqNjR0fHw4cMiryNh
of/999+ECRMUE4bj+KRJk3B8xIgRQkRfbm6ut7c35MyxY8cU/3r16lWIIC8v
r3v37nEHDx48WKVKFbnVMVw0DtVw69Yt7jjTev3791f8IpOdne3i4mJnZ3fp
0iW19eTn9evXgYGBWqTW14g9e/bgXqCS2H5ecuzevRuyF6qW+0yDWqG7CreF
dty/fx82YknIIb01/bnswij+6aO4L4hEbqMB2WcQFuzatSuT80VFRdDOaKi0
tDTu0Xvx4gXEtcB1cwRBEARBEISEfP78eeLEiQKTISB+mzVrFk7u0aOH+ClV
0AKI0hEKiryOhIW+e/euVatWZmZmCFaVHhe4fgdCqVq1ap6enor7UhUUFISE
hOBSch9TMjIyoBdq1aol+xWJReMIxeXyYENqQXD5+voq3gji7ebNm+P6WqTO
lgMRfv369aHvRF6HB7TAzz//jB7Vq1cvxR6FZnR1dYWQOX36NHcwPz8fFrS3
t+eZBCieNWvWmJqaqs1Vroq///6b7RCHesrqX0WYVmUyKjY2llt+hX+MGjVq
9uzZ/5Xz008/VSrfn1f2IeXWze3atUvTGhIEQRAEQRBiQJCMSE94TjnErlWr
VhW/9Abxc1JS0oABA8Tn5Zaw0Hv37rm4uKBBbt68KXfc2dkZx2/cuCGkILZh
UIcOHUpKSuQqAPWEP9WuXVtu0t3SpUthhU6dOskm0+YWRsl+twLbt2+HtvLw
8Hj69Klc0f/+++/48eMl2YbpwoULMLQkye1VAekESW5iYpKSkiL3p+Li4piY
GCYu5NajwXw6XRiFNhwzZoyitOEHhsvMzDxz5syvv/7arFkz9vMqVarMmDFj
3759V65cUTozEDaCpbjZg5z1Dx8+HBoayhr/zp07bm5uihvssh2jhGwoRhAE
QRAEQUgIgvCoqKixY8eampoKlFF5eXm+vr7i54whSEbQuGDBAn3muFZbKNsY
S3Gzp99//x3HmzZtWlBQoLYURN1Dhw5FVLxkyRK5gt69excWFsb2dZIVAvh3
XFwcjs+dO1f2J2lpadBcrVq1kl35gsCbLdupV6/ey5cvFSuwf/9+S0vLFi1a
aLqiR47ly5dHRES8f/9ezEX4yc3N9fHxgRZQ/GRz7do1SEi12cJ1ASzYq1cv
Jm2Ez2lMTU1lH7BgMgsZuINr165V+kMYsV27djjHycnp9OnTeAxh98aNG7Pp
negP8+fPx19r1aolp5q3bt2K9hGyoRhBEARBEAQhFaWlpWPGjFmxYsWmTZuE
yyhunxpFjaARDx8+RFio5yzN/IVyC6PkElCoWjClilevXjVs2NDFxUUxeXV2
drazs7OJicmaNWtkjyOQ9vf3l1tLhbLGjRunmO4PZoK6YZtDKU0b+OLFCz8/
P6XaRDi4Mq6v68+FuF/cNbStYt9bt24dGgrKIisrS3cVUIqsjNLPsiOUCPGL
Bq9fv76vr++QIUO47494Tjt16qT4pZL7ZCb+syNBEARBEAQhnO3bt/fp0+f9
+/ebN28WLqPKyjOnWVtbi/xOsWPHDkdHxytXrmh9BckLffv2rZCFUbhrpd+A
OA4dOlSlShWl+R/YRqs2NjYZGRmyx9mGXNzCqLy8vOLiYoTWiKsVN1TKzMyE
FrOwsNiyZYvSCiConjJlCjTI4sWLtZa6OTk5Xl5ecl/HpIUJAdzIb7/9Jvcn
FJqcnAyN0KhRI6WpJ3SKrIxKSEgwrEgpLCwMDg5GTaZPny5bk6KiopCQELQe
S0ePXpqfn2+4ahIEQRAEQXwTZGdnt2/fnn0u0VRG4bTIyEg7OzsE/9qVjvh5
9OjR/v7+/HpEWtQWyhZGKWqc+/fvswVT169fR3i/fPnyn3/+WZW4QAQ+ePBg
VTn6Ll++jHaDCHrw4IHs8ZUrV0L1REVFlZSUQM1FR0dfu3YNl+rbt2/lypVl
kzygXEgbBNUtWrSQm3koy82bN1EKztEiPQLjzz//xC1DEmr3cyFAqXl7ewcE
BCiN/1NSUnhSecOa+LmOBI6sjIIgNayMQn9o2bIlmiI1NVX2eFZWlpOTk6ur
K55l9Ip58+YtWrRIn1NkCYIgCIIgvjWKi4sHDRq0adMmFnRpKqPKyj+4QCmM
Hz9eu4zTBQUFTZs2lSTdn4SFsoVRtra2Fy5c4A7iZDajj+kvNF3//v3ldJYs
mZmZbm5ukJlKg3+2sszR0VE2ZcSTJ08aNGiAIqZOnYqIHWItNjYW8gfWWbBg
gVweNsTM3333HSSSbCUVYRMCYSPt0tmhGtOmTfPw8EDdtPi5EHB3q1evxt0t
XbpUafB/9epV6Lj69esriqz3799DEcMQalP0a4dRySgu6f2qVau4g6WlpSNG
jMDBkJAQdBU0SFxcnNavNQiCIAiCIAi1IGRdt27d8OHDuSRyWsgo/BZhW/Xq
1bVbfQOlgAhZzy/P+QvlFkCZmJj88ssv7BwEq8nJycHBwdAjzZs3R7wKAdW7
d29VK/pZlrxq1aqdO3dO6Qko5f+1d+5RNaX/Hxcl04WK6EIo6S7EhGJK7kIp
lzFljNwGY8Ko3HJnXBt3yq0ZucxgfDVMC7nfWeQSzTKi1mBYwqIWs4zV7716
ft+9zvdcduecvXd7V5/XH7PM6Zy9n/08n+fz+bz3c5s7d66pqenatWvZLW7e
vBkWFsYOQlq0aBES+KSkJG4vdIgmFxcX6AW2KObhw4dBQUH169fXRxyx32pd
dlQuSMs7d+4cEhJixG/1BJrU19eXZ0wNVTF58mTUFdQW12SoQNQtaiwmJoZn
ME4gipJRpWVzPm1tbcPDw5lshPnBzFB1derU6dKlCxrryJEjn3/+uXSNRRAE
QRAEQVy9erVbt255eXncJ0bIqNKyYRdnZ2fIMSNGlFJTU62trbOysgz9oRD4
b8oWRkFDeXp6Wlpa9u3bF4l6QEBAYmLis2fP5syZY2Fh0aNHD+Sup06d0nWL
CxcuQOPEx8fzDNJBgUKa2dvbQ4dGRETgpr///jv0Eeq/UaNGvXv3joqKYieu
MqAafHx8QkNDhw4digrHT/Tc3RrSY926dXiWPXv26PN9Vf744w9HR0fplgWh
bNCMaI7Dhw/zfA2mBQ2FknTt2nX06NHQEdCb+C/ErKQCXGkyCg8L4ezm5hYc
HDx8+HCYJWoPFjt9+nSYJZQyzLKClxkSBEEQBEFUK5B6IUtXO6zTOBmF1G7H
jh22trY///yzQWVgGwtU/MIo/puyhVF4nBs3brx69erSpUsXL15UnTP29OnT
M2fO8JyWhboNCwtDQqvPc+EW586du3PnDie4kKtDH+G+mrIU30HxIN8MPasL
ki02Ntbb29vQs58OHjwo6cIodq4uJKo+2wCiZqD6IScLCgoqZvhSaTKKgVLd
vHkTVafaT2FsMEvpBuYIgiAIgiAIZINLliyZOHGiWqJunIwqLcvrZsyYAW2i
tmECPyUlJT179hw1apRx66qMo9ybsoVR7du3Vx0J0h9cdu7cuS1atMjJyRFW
UpF58uRJUFDQ8OHD1Q4C5ueHH37w9PQsLCyUokjPnj0LDQ2Njo5W7CQ0Zcoo
giAIgiAIQhauXLni4eGRnJy8/n+JiYlBuuju7r5q1aoNGzYYNGMKmfCIESMg
wfQfWnr37t3SpUuFHGlkBPw35RZGjR492ghxh+ratm2bq6vr0aNHBZdUfG7f
vu3v7z9z5kz9T4A6dOjQ9u3bpRj6YdubdO3atSLHIg2FZBRBEARBEATBkZub
Gx8fP/Z/GTNmjK+vL9JFBweHuLi4cePGpaenG5Q3FhcXT5o0adiwYYodXCgX
7sSorVu3GvFzqKfAwED+rfPkJS8vLzQ0dOPGjfJuiA2JOmvWrIEDB1b8UVAG
QTKKIAiCIAiC4AcpIrQV0kUjJvVxIDkvKCioyEl64gKByS2MMuLnz58/hxAT
vVTiUlJS8tdff8lbBmYn+g+KyQXJKIIgCIIgCIIfUWRUZefhw4fdunWbPn36
u3fv5C4LIT8kowiCIAiCIAh+CgsL+/Tpg3SxZcuW169fp4yRIEhGEQRBEARB
ELrIyMiwsrJiuWLNmjVNTEzwDzMzs6SkJMobieoMySiCIAiCIAiCIAiDIBlF
EARBEARBEARhECSjCIIgCIIgCIIgDIJkFEEQBEEQBEEQhEFARkVGRpKMIgiC
IAiCIAiC0JM3b96EhIQwGTVv3jx5zywmCIIgCIIgCIJQPnfv3nV0dISGMjc3
379/v9zFIQiCIAiCIAiCUDT//vtvcnIyG4oKDAx88eKF3CUiCIIgCIIgCIJQ
NNnZ2XZ2dmwoavfu3XIXhyAIgiAIgiAIQtFkZmY2atQIGsrExCQhIeGff/6R
u0QEQRAEQRAEQRAK5d27dykpKRYWFkxDTZw4sbi4WO5CEQRBEARBEARBKJEP
Hz7s37/fx8eHrYdydnZOT0+ncSiCIAiCIAiCIAitFBcXx8bGMgFlbm4+efLk
58+fy10ogiAIgiAIgiAI5fL27dsRI0YEBATMmjUrPz9f7uIQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBCE5Hz9+
vHjxYkJCQnx8/PPnz+UuDkEQBEEQhMi8e/du6dKlU6dOPXXq1D///CN3cQiC
qNxAQJ04cSIwMLBGGS4uLvn5+XIXiiAIgiAIQmRevXrVuXNnlvC4urqmpqZC
WMldKIIgKiWPHj0aPnx4rVq14E/MzMxiYmL++OMPuQtFEARBEAQhCQUFBdOm
TbOxsWFiKigo6Nq1a3IXiiCISsbRo0ednJyYGwkJCSE3QhAEQRBEdSA/P3/o
0KE1a9ZECmRpaZmamvrvv//KXSiCICoHJ0+etLe3h/cwMTEZM2bM69ev5S4R
QRAEQRBEBQHdtHXrVisrKzYhJyUlhZQUQRDlkp+f7+XlxTTUtGnT3r9/L3eJ
CIIgCIIgKpSPHz9CSZmbmyMjsrGxOX78uNwlIghC0fz7779JSUlsLl9wcHBR
UZHcJSIIgiAIgpCB9+/fjxw5kkuKXr58KXeJCIJQLg8ePGjatCkbwv7pp5/k
Lg5BEARBEIRsXLp0ie04YW1tffr0abmLQxCEcjl06FCdOnXgLpycnO7fvy93
cQiCIAiCIGSjqKioQ4cOyItq1qyZmpoqd3EIglAu6enppqamcBe+vr5Pnz6V
uzgEQRAEQRCy8f79+379+rF5fcnJyR8/fpS7RARBKJQdO3awg6LatGnz7Nkz
uYtDEARBEAQhG//8809UVBSTUdOmTaP9+giC0AXJKIIgCIIgCAZkVHR0NJNR
U6dOJRlFEIQuSEYpkKKiovj4+M6dO3t5eTk5OW3btk3uElUpPn78qGtX/3fv
3lVwYRSOwuuKeorUKNwACI4PHz5ozfbxYXU+xMQ4FwEZNWjQIJJRBFG1QRRD
Zxd4EZJRCgRRLysrKzk52cLC4pNPPjl8+LDcJapSXLlypWHDhsHBwTNnzkxL
S9u/f/+mTZumTJni5+fXr1+/N2/eyF1ABaHwuqKeIjUKNwCCAbW7ZMkSOzu7
6Oho/CMjI2Pv3r2rVq2KjY1t3Lgx/lFtV/cY5yJIRhFE1Qad+siRIy1atBg/
fvyHDx+EXIpklGI5duyYpaVls2bNHj58KHdZqhQXLlyoV69eDQ26dOny4MED
uUunLCpFXVFPkY5KYQAEVNK8efM0m8nMzCwxMbGkpETuAsqMoS6CZBRBVEmu
X7++YMGCuLg4Pz8/uEd08NGjR5OMqqosW7YM7dK7d28KguKCzNDR0bFJkyZs
j0orK6vg4OCdO3dW56kvuqgUdUU9RToqhQEQkFHz589v0KCBvb09S/7RakOG
DLly5YrcRVMEhroIklEEUSU5efJkYmJiWlragwcPhg0bRjKqCoMsZeDAgWiX
uXPnVtv5GBKBzLBnz57Pnz9HxRYXF8tdHEWj/LqiniIpyjcAorRMRi1cuHD6
9OlI+CEBSOSqYoSLIBlFEFUb9PEvvviCZFQV5q+//vLw8LCwsKjOyz0ePny4
Zs2aV69eiXtZLjPU8/snTpzYs2ePwI4mKcgNsrOzUUjRdYRBdQW/lJaWdv36
dXHLwA/1lFLFGIDsVNuuqiqjRLys6FQWF0EyiiCqNiSjqjwnT560srKqzss9
cnJyAgIC1q5dK3oIMzQzLCgo6NKlC1IUZW5NhvpBZtKqVaurV6+KfnFD6+rQ
oUPe3t6//fab6CXRBfUURRmAvFTbrlpZZFRpJXERJKMIompTHWRUYWHh5s2b
4+PjIyMjAwMDu3fv/vXXX//+++9qz/vmzZs5c+bcvHmzIsv26NGjb7/9Fm4Z
9Va7du0WLVqgeElJSZcuXTLuHSOyFDyFr6+vh4eHn58fHvz777/Hxfv06VM9
l3vcuXMHoRZZgfC9KDXhMkMYPCxqw4YNBw4cePnyJc9Pbt++jaZJTEyUojxC
gL1t3bq1SZMmeBAprm9oXaE8SBSdnZ2PHDkiRXmop6ihNAMQl6KiIjTx4MGD
O3bsGKABvO758+fVflI9uyono/DUeXl5e/bs2bhx49mzZ5VWCaWVxEWQjCKI
qo0SZBQcS7lOqbi42FD/8/btW8Sazz77DKUyMTFxd3fv27fvpEmTpk2bNnDg
QBsbGx8fn3PnzrEvox4QLhGY7t+/b9BdhHDv3r1OnTpBRmVkZCxevDg4OJjb
FgnFM+I1IzIBCDE4/MuXL5eWzWQLCwtr1KgRLjhv3rzKstxDRHv4+++/YQAR
ERESbaeMzDAoKGjixIn4L3T6kiVLEGHRdosWLeJ5iX306FEHB4ctW7YoqkWy
s7MdHR3Xrl0rUamMqCt4JPTKli1bQguLW5iq0VPUQKeAS4EHM27lkQINQBRg
RYhNrHF1gWJoTcWrYVfFNRcsWIDMPzIyEg2UXIZHGVlZWaLfTiDKdxFiyShI
2tDQ0ObNmzc1imbNmiEU/vnnn8bdnSAIXShBRmVmZtarV69nz55QPejmnINC
eSAl4MPbtm3r7e2t/zA6PNWvv/4K14rC2Nvbw3fdvXtX7TsQWbiys7Pzvn37
2AQJc3Pzrl274nP9Sy4E3BT+f+HChdzz4h/Hjx/v2LEjit25c2dDR/QuXrzo
5OQEb3n79m3uwwMHDtSpU8fCwkKi93VSIJY9IDeLi4tr3LixdCOMqHMkYGhH
Lg9Eh4K9QbYjUdS1OhsPMn36dFjmqVOnJCqYoTx48MDT0xOJk3T2b1xdQQh3
6NAhJCRExMlgVaanMEpKSjZs2NCqVStOFKBKvby8kOyh9vS8iGINQCC4xfz5
883MzKA7INyulDF79uxPPvnEysoKYQJu9sWLF7piXzXsqmynvvr168MPcx8+
fvw4ICCgbt26//nPf6S4qRAU7iLEklEvX7786aefkDCMHTu2YcOG7IIIlFOm
TFmzZs36/yUlJWXGjBkIf1BeSGy4HRcr8i0xQVQTlCCjEMu4ns5yAAQ41U8a
NWqk//zn/Pz8/v371yg752LChAk8rhXxAumHh4fH2rVr7ezs8JOkpKQKG3N/
/fp19+7dt2/frvknhHVDZ1CgwgMDA1H/P/zwg+qLsuzsbFRm8+bNK9FyD7Hs
AVHP0tJy5cqV0r1JLioqOnr0qFpjPXr0yN3dHdGWJ+V48uSJv79/p06dlLBU
BOX/+uuvEZqvXbsm3V2Mriu0NdoR8lmUvlmVegr4888/g4ODGzduvGzZsqtX
ryKlvHDhwjfffAOZwF4iZWRklFtvCjcAo0H7wsHCdXh7e6u+SUOFfPfdd6if
iRMnlls51bCrQjtobt2wd+/e2rVr+/r6QlJJd2vjULKLEH1SX3FxMTIHdkF9
jvtEF+vVqxe+7OPjA2MWeHeCINRQoIxSA0mC/tPbLl++zAahXFxcjh07Vm7+
XFJSMnToUHYjlGH//v36F1sgr169wqONHTtW+GZQeEw4fFQ+PDxUpOqf2CEX
ffv2rUTLPUSxB+STAQEBfn5+FR/0379/P2DAABQ1Ojqa5x37xo0bofSXLl0q
+3whJLfW1tZIKSt+XzJ96gppQ0RERIMGDdjsGiFUsZ5SWFj46aefRkVFaWb4
Z86ccXZ2rlG24nLDhg38NqZwAzAaNDE0GhJszbcuLFr17NlTn/mE1FXBH3/8
4eDgYGpqum3btgq+dbko2UWILqMg4lA29qJ49+7d+vwkNzcX3uCzzz6TaHI7
QVRnFCKjbG1tvb292UHADPw7NDQ0MzNTz1LB+x08eJCdGAglpf8+qMePH0ec
xa+cnJwQKfQvtkCQM0RGRiIw5eTkCLwUFFnnzp3xCEOGDFFNRfBvJCf4fP78
+aInALCcnTt3njx5UtzLlophD3jY5cuXI+KrvU6sGFDCkSNHosyenp48Iu7p
06f+/v5ubm7yTrRAYO3WrVvDhg2F26ER6FlXR44csbCwiImJEbiIRpaeIhFs
YAKdAoak9Qt79+6tU6cOHgq96ezZs7quUykMwAjQjhA+JiYmvXr10pz/tm7d
OvypX79++mg36qqlZZodmhQtNWbMmIq/e7ko1kWILqPYk7JZGdBH+vyEDWAN
HjxYgfuEEERlRyEyqm3btn/99Rc81b179y5evAg5Y6gzzM7OZhPzmjdvbtBa
GBQVd8cPQ0JCKvJdDVwxe7sVFxcn8DUsfGmDBg2QFaxZs0b1c6QlXl5eEi33
YBeXwjMLtwe0aUBAQJMmTSTVxZcvXw4PD09ISFAzG/Sj8ePHo2WdnZ0fPHig
6+cwgNmzZ+NrquvjKp5jx45ZWVkh0Eu6zF9gXRUVFXXo0MHGxgbGIKQYsvQU
ibh27RrS2uPHj+v6Aqo6LCyM5W/IAHW1b6UwACOAdELqiLZOSUlR+xNuCgWK
m8bHx+uT1lafroraSE1Nhdns2rVL7UmfPHni7e2NSoiKipLo7kJQrIsQV0ah
UebNm8euBrmn50mIKMOwYcNon0CCkAIRZdTWrVtr1qwpREYZfWu4PvaiDF7u
l19+Mei3qAFoAfwWIb6CnQxSC1tb2zp16mRkZAi5zsmTJ62trRFhoSVVPz9z
5gw+d3V1ffToUWnZ60QRVyWjvVq2bDlw4EDpZJTRV9i9e3ft2rW//PJL6V6+
wVS++eabGmWLfNUCN/eC3cPDg/8prly5AgPw9/fXfysAcUH9jBgxAnW1Z88e
6e4ivK6QPLCthvXMe3UhS0+RAjbeigJv27aNx9muWLGCZVwQKXl5eZpfqCwG
YARPnz719fVFRNDcXw5/8vPzMyglriZdlVUamzutlqJzo1FIFaQrgNEo1kWg
4YYMGSKWjCopKenbty+72pQpU/S8GkvzVq1aJeTWBEFoRUQZlZqaamJiUvEy
Cvfq0qULcyyTJ0829CngiCZNmoTwZKj+Ek5xcTFbF9C0aVPVHYEM5dy5c3Xr
1m3QoIHahoRwm2iR8PBw+N6XL1/iXpcuXRJc6v9HsTIKD4snNTMz27lzp7gF
UwVRe9asWebm5hBrL168UP0TwisbBSj3vTESlaCgIOhoufa/ys3NdXR0lPrA
WVHq6sKFC0jCvby8hEz9kqWnSAG8XGxsLHN6rVu31lUnv/32G9trAv/VuitL
JTIAQ4HeQc3Y2NhoTvDesmUL/EP//v31F8vVpKsWFRUFBgY6ODisW7dOLUXP
ycmBkFTm2iiGMl0E4mNMTIxYMkp1YZT+gho9KyoqateuXUJuTRCEVsSSUQiU
ixcvZr6iU6dOeo41M4SkzXBKs2fPZvLNzc3NiGMR2MbjiFD37t0zogACYXuo
ovC9evUyqNJUKSwshKKxs7NT1WL379/38fHBlVE/aJ3Lly9HRkYiSopUcOXK
KIQ/tCYyAc1d7sUlOzs7NDRUM2QjbbO3t7eysir3cEzYXkJCAtpo3LhxFb9m
vLRs7XytWrWQT0o6oatUjLp6/vx5QECAwDxWlp4iBeh0KCTzt5pvzjnOnj2L
nBDfQfb7448/an6hEhmAobDQplk58POwAQSLW7du6X+1atJV8ZgzZszQfBuJ
frFy5cqaNWu2adNG11o82VGmi0BNxsXFsa4q3Hi4hVG6AhwqAYaqtiMf0308
CyQJgjAaNmkWvXLUqFFCOjh+O2bMGOYrhg4dalBqLSRtvnbtGjtDAUrq+++/
N2LiOptwEhIS8vr1ayMKIBDctGvXrqz8c+bMMe5VFX41d+5cZErcgYw3b94M
Cwtja74WLVqE5khKShJ3vwXFyqjt27ejKipgVyLkMxMmTIiJiUGQ4j7EvxFh
kfCgRfTpUL/88kvt2rUR/St+O+X379+zSftLliyResWH8LriZn8lJiYa/UZX
lp4iBWz/BDaJ2sPDQ9cIxbFjx9j+OWZmZnv37lX7a+UyACM4d+5cgwYNEI+4
84iRG6OveXp6XrlyxdCrVZOump+fHxwcvGHDBtVedvXqVRcXFwheKfYUEgtl
ugh8Da3GUiOBB1OqLozq0qWL1ozl8OHDPXr0UJN4eChoLomOZiOI6gwcwq1b
t9q1a8fmQqOjGR3L2F5GLF5rPQuJB820+dWrV6rRVhco/+jRo5lXgZM3bj8B
eJhly5ZJdCI8PwUFBYsXL3Z1dWWPUK9evRMnThh3KeQJycnJCHPR0dERERGd
OnX6/fffkVxBTTRq1Kh3795RUVFq02kEUpEySk97KC2LpGPHjq1Rtp2UnsYM
00XV4VkQOuvWrYuImZWVpcsYUM9bt27l1kewQ5xh+bNmzdq5cycyW29vb7RC
amqqnndHjLazs7OxsZH0IBitPH78GPmkubn5gQMH9PwJks/PP/8cFoUabty4
cVxcnNqewKrcv38fdcLVg/C6WrVqFe4bGhoqRCBXfE+RCCRFBw8eXL58Oc/2
cdu2bYNVM99y4cIFtb9WFgMQctOzZ8+2b9++devWo0aNQuM2a9YMObZxOqgS
dVXYRkZGBmI6RDQisp+fH+yE05JqwNcdOXLk/Pnz3CeIpAMGDIAnTElJQWV+
++23eOpPP/203O3EhbSUKCjTRaDe2P5X+K8R+p1DdWHUd999pykV8Ul8fLw+
h0kRBCGQw4cPOzg4sJeZJiYmtWrVYvPi8Imzs7OhyTz8MPwti9cBAQGGLsJl
aXNhYSFCHhwUBJGXlxf+i9A/aNAgnhnIubm5Tk5OzKvonzYrATj5uXPnIjb1
6NEDj8+dpgcXLcT/Q26cO3fuzp07XFXAr6KWUIeiv4mSWkYZYQ+lZaN7bLta
ze25tIL4yI7XUYWdEaP1fSYSVxRJ7TVgXl7e5s2bJ02atGDBAlzQoGFNttod
dxS4zYgRILjDAhHZ9dnZ8t27d3PmzKldu7ZaXaH2YHKa34dVIPtasWKFmiAV
UlfwWp988knTpk2FLw+pyJ4iF9wrBdCuXTtN7aB8AxDrpnAm2dnZN27cENK4
laWrPnr0CGGlhgYILlqTf1QOApDaYXyoyTNnznz//ffffPPNunXr8Ff+8CpW
SwlEmS4ClcMtjxKyMS+3MAr1/PPPP2t+ARoNgVKxi9cIgtDFhQsX2Mw6+Hkj
xlOQNnt7e48YMcLf33/Xrl3c2XbXrl1r06aNubn5woULNXN1NlubqT+DXqjK
DpxhaGiohYXFmjVrmIvev38/WyGFD0VfIyARksooI+yBgbpFDNXzJGVoIrZy
pEbZVHNcvEGDBux/ra2tNZfkI+WLjIwUN4kqLi5mS+wr/sQiPAhyQjRiufMn
kQbEx8ezmjE1NXV3d/fx8WF7FwBoXs01L8i7unTpIu4W1sghbW1tNXd7I7SC
dJqdRV6rVi24Gk3rUrgBKMTqOCpFV4UDDAgIYFVkZWXVqlUrJN7sIJIa2rZg
YmFU4KEbymkpxboIyDGmgFAtRu99pHpiVE5OTnEZb9++RU8/f/78rFmzEL/w
+Ddu3BC38ARBSAocl4eHB3tDsn79eiPiC9Jm5L29evXSHMbKzc11dXVFFJg3
b56a/1cd4HZzc2PbkCqf/Pz81q1bo67S0tK4uioqKurYsSN7lm+//bZSHO4g
qYwywh4YiM42NjYQQadPn+a/C2KNs7MzMo2EhATVRdO3b9+OioqCPO/WrZva
q/LMzMzu3buLuzKCW5xYwcOp3P7AgYGB/Gul8c21a9cii2vRosWPP/7IpVso
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
BP4P2YxiSw==
     "], {{0, 252}, {1133, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{577.7999999999995, Automatic},
   ImageSizeRaw->{1133, 252},
   PlotRange->{{0, 1133}, {0, 252}}]], "Input",ExpressionUUID->
  "f086c853-0c93-4ed5-9008-951efc7ff67e"],
 "\nand ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
giAIgiAIgiAMyv8AuXqtWg==
     "], {{0, 121}, {638, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{384.6666666666651, Automatic},
   ImageSizeRaw->{638, 121},
   PlotRange->{{0, 638}, {0, 121}}]], "Input",ExpressionUUID->
  "cc4e89dc-d310-4274-afa4-ec02917c2827"],
 "\n"
}], "Subsection",
 CellChangeTimes->{{3.742225210268482*^9, 3.7422252341165237`*^9}, {
   3.742225399065777*^9, 3.742225438530488*^9}, {3.742225588522272*^9, 
   3.7422256174212418`*^9}, {3.7422257454653788`*^9, 3.742225760869822*^9}, {
   3.742225802957129*^9, 3.742225810430195*^9}, {3.7422259174491367`*^9, 
   3.7422260616027184`*^9}, {3.742226120209066*^9, 3.742226127806513*^9}, {
   3.742236515916774*^9, 3.742236703121776*^9}, {3.742236755083893*^9, 
   3.742236801878098*^9}, {3.742317019305887*^9, 3.742317046559519*^9}, {
   3.760966254219942*^9, 3.7609662558084636`*^9}, 3.7609785052617064`*^9, {
   3.7609805881485434`*^9, 3.7609805881485434`*^9}, {3.7609806209044647`*^9, 
   3.7609806501137524`*^9}, {3.760981328856741*^9, 3.760981328856741*^9}, {
   3.7609882016701207`*^9, 3.7609882053971753`*^9}, {3.7633998193523707`*^9, 
   3.7633998197303605`*^9}, {3.76339985014673*^9, 3.7633998584608784`*^9}, {
   3.7634001344182434`*^9, 3.7634001443087516`*^9}, 3.763407035581808*^9, {
   3.7637835639079027`*^9, 3.763783575743401*^9}, {3.7637863721048927`*^9, 
   3.763786417855468*^9}, {3.7638178428157735`*^9, 3.7638178441385546`*^9}, {
   3.7638233796736865`*^9, 3.763823410547652*^9}, {3.7638234909769335`*^9, 
   3.7638234912761765`*^9}, {3.76385119712514*^9, 3.76385122576313*^9}, {
   3.7638518160144367`*^9, 3.76385182843451*^9}, {3.765636063819351*^9, 
   3.765636064862897*^9}, {3.7657287042912607`*^9, 3.7657287159237776`*^9}, {
   3.765734826343151*^9, 3.7657348267674646`*^9}, {3.765840711706829*^9, 
   3.765840782461457*^9}, {3.7658420071876097`*^9, 3.7658420075003815`*^9}, {
   3.768933139354761*^9, 
   3.7689331396669264`*^9}},ExpressionUUID->"68c7e39c-fd44-4942-9218-\
54c779e0448b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHoloTerms", "[", 
    RowBox[{"mu_", ",", "ap_", ",", "bt_"}], "]"}], "[", 
   RowBox[{"aa_", ",", "bb_", ",", "cc_", ",", "dd_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", " ", 
     FractionBox["3", "4"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Eta]", "[", 
        RowBox[{"mu", ",", "ap"}], "]"}], 
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]stdowndown", "[", "bt", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{"\[Gamma]5", "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"\[Eta]", "[", 
        RowBox[{"mu", ",", "bt"}], "]"}], 
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]stdowndown", "[", "ap", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{"\[Gamma]5", "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}]}], ")"}]}], "+", " ", 
   RowBox[{"I", " ", 
    FractionBox["1", "8"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Epsilon]", "[", 
        RowBox[{"mu", ",", "ap", ",", "bt", ",", "nu"}], "]"}], 
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]down", "[", "nu", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"cc", ",", "dd"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]}], " ", "+", " ", 
   RowBox[{
    FractionBox["1", "16"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]stdowndown", "[", "ap", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]5", ".", 
          RowBox[{"CommuteGammastdown", "[", 
           RowBox[{"bt", ",", "mu"}], "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Gamma]5\[Gamma]stdowndown", "[", "bt", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]5", ".", 
          RowBox[{"CommuteGammastdown", "[", 
           RowBox[{"ap", ",", "mu"}], "]"}]}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7609811744259396`*^9, 3.760981232403672*^9}, {
   3.760984738157158*^9, 3.7609848090140343`*^9}, {3.763406498133624*^9, 
   3.7634065134283943`*^9}, {3.763406605420743*^9, 3.763406607884963*^9}, {
   3.763406690366448*^9, 3.7634068350076895`*^9}, {3.7634068831975107`*^9, 
   3.7634069780146513`*^9}, {3.7634070116321535`*^9, 
   3.7634070168629827`*^9}, {3.763817994314991*^9, 3.7638180108907957`*^9}, {
   3.7638180497141867`*^9, 3.763818051661316*^9}, {3.763818084522286*^9, 
   3.763818491620562*^9}, {3.763818540285385*^9, 3.7638185407096896`*^9}, {
   3.763818639876912*^9, 3.763818640172344*^9}, {3.7638187445657654`*^9, 
   3.763818744853051*^9}, {3.7638188152380075`*^9, 3.7638188400445833`*^9}, {
   3.763820099535204*^9, 3.763820166399911*^9}, {3.7638204359279547`*^9, 
   3.7638205414560766`*^9}, {3.7638206049770136`*^9, 
   3.7638206139599333`*^9}, {3.763851847832202*^9, 3.763851848231593*^9}, {
   3.763851995039267*^9, 3.763851995129073*^9}, {3.763852157807385*^9, 
   3.7638522417288733`*^9}, {3.763852305487342*^9, 3.763852305918736*^9}, {
   3.763852965264536*^9, 3.76385302522094*^9}, {3.765636097824046*^9, 
   3.7656363602969832`*^9}, {3.765636483392949*^9, 3.7656365133458977`*^9}, {
   3.7656365771780043`*^9, 3.7656365986020727`*^9}, {3.765636632585522*^9, 
   3.7656367645938034`*^9}, {3.7656369377455025`*^9, 
   3.7656369725137053`*^9}, {3.7656370054573517`*^9, 3.765637125442566*^9}, {
   3.7656371853070984`*^9, 3.765637211810286*^9}, {3.7656372788837748`*^9, 
   3.7656372795548315`*^9}, {3.765637405283538*^9, 3.7656374056264114`*^9}, {
   3.765637974212119*^9, 3.765638017995557*^9}, 3.7656380514436293`*^9, {
   3.7657287332743254`*^9, 3.7657291573753824`*^9}, {3.765729196371887*^9, 
   3.765729282672289*^9}, {3.7657294713582625`*^9, 3.7657294789902763`*^9}, {
   3.7657296994763303`*^9, 3.765729743268792*^9}, {3.765729847086785*^9, 
   3.765729847375464*^9}, {3.7657345650253415`*^9, 3.7657345667776766`*^9}, {
   3.765734730374815*^9, 3.765734751565491*^9}, {3.7658408230114937`*^9, 
   3.7658408343564243`*^9}, {3.7658426516804414`*^9, 3.7658426536658745`*^9}},
 
 CellLabel->
  "In[119]:=",ExpressionUUID->"a0c1de7d-ed47-46b7-ad23-295e10996f60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FHolo", "[", "Rep", "]"}], "[", 
      RowBox[{"mu", ",", "ap", ",", "bt"}], "]"}], " ", "=", " ", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"FHoloTerms", "[", 
         RowBox[{"mu", ",", "ap", ",", "bt"}], "]"}], "[", 
        RowBox[{"aa", ",", "bb", ",", "cc", ",", "dd"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"cc", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"bt", ",", "0", ",", "3"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7609787928407516`*^9, 3.7609788131937017`*^9}, {
   3.760978899617264*^9, 3.760978907521762*^9}, {3.760980658745535*^9, 
   3.7609806685576324`*^9}, {3.7609809130063624`*^9, 
   3.7609809156836233`*^9}, {3.760981076518693*^9, 3.7609811639602423`*^9}, {
   3.76098122328341*^9, 3.760981244613959*^9}, {3.760981280015232*^9, 
   3.7609812830250235`*^9}, 3.7609848401986504`*^9, {3.763406518885396*^9, 
   3.7634065352451077`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"40bcebc9-83f7-487b-9a0f-2943e2cd1757"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZHoloTerms", "[", "mu_", "]"}], "[", 
   RowBox[{"aa_", ",", "bb_", ",", "cc_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"I", " ", 
    FractionBox["1", "2"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cmetric", "[", 
            RowBox[{"[", 
             RowBox[{"aa", ",", "bb"}], "]"}], "]"}]}], 
          RowBox[{
           RowBox[{"\[Gamma]stdown", "[", "mu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"\[Gamma]5down", "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"\[Gamma]5\[Gamma]stdown", "[", "mu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "+", " ", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Gamma]5\[Gamma]down", "[", "sg", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
             RowBox[{
              RowBox[{"\[Gamma]5\[Gamma]\[Gamma]stdownstdown", "[", 
               RowBox[{"sg", ",", "mu"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"sg", ",", "0", ",", "3"}], "}"}]}], "]"}]}], " ", "-", 
         " ", 
         RowBox[{
          FractionBox["1", "4"], 
          RowBox[{
           RowBox[{"\[Gamma]5\[Gamma]stdowndown", "[", "mu", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{"\[Gamma]5", "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}]}], ")"}], 
       RowBox[{
        RowBox[{"Rfield", "[", "dd", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "-", " ", 
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", 
          RowBox[{"Cmetric", "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"cc", ",", "dd"}], "]"}]}], "+", 
         RowBox[{"5", 
          RowBox[{"\[Gamma]5down", "[", 
           RowBox[{"[", 
            RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
          RowBox[{"\[Gamma]5", "[", 
           RowBox[{"[", 
            RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "-", 
         RowBox[{"2", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Gamma]5\[Gamma]down", "[", "sg", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
             RowBox[{
              RowBox[{"\[Gamma]5\[Gamma]stdown", "[", "sg", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"sg", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], ")"}], 
       RowBox[{
        RowBox[{
         RowBox[{"E\[Psi]", "[", "mu", "]"}], "[", "dd", "]"}], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.765840851311184*^9, 3.7658410824319763`*^9}, {
   3.765841117201496*^9, 3.765841136672165*^9}, {3.7658420504832983`*^9, 
   3.765842072829633*^9}, {3.765842609456421*^9, 3.765842622505543*^9}, 
   3.7658428804835978`*^9, {3.7689331638903427`*^9, 3.7689331653803186`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"04bc43ed-fab4-4c04-bfb3-de2867d906f0"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ZHolo", "[", "Rep", "]"}], "[", "mu", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ZHoloTerms", "[", "mu", "]"}], "[", 
       RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7658421585182467`*^9, 3.765842190298966*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"cdfc0be9-6d12-4ce2-bfb9-3e1532a930b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ZetaGaugeHoloTerms", "[", 
   RowBox[{"aa_", ",", "bb_", ",", "cc_"}], "]"}], ":=", 
  RowBox[{"I", " ", 
   FractionBox["3", "4"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cmetric", "[", 
          RowBox[{"[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"\[Gamma]", "[", "bt", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "+", " ", 
        RowBox[{
         RowBox[{"\[Gamma]5down", "[", 
          RowBox[{"[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"\[Gamma]5\[Gamma]", "[", "bt", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Gamma]5\[Gamma]down", "[", "bt", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
         RowBox[{"\[Gamma]5", "[", 
          RowBox[{"[", 
           RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "6"], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Gamma]5\[Gamma]stdowndown", "[", "kp", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]5", ".", 
               RowBox[{"CommuteGamma", "[", 
                RowBox[{"kp", ",", "bt"}], "]"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"cc", ",", "dd"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"kp", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], ")"}], 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "bt", "]"}], "[", "dd", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"bt", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.765842199989019*^9, 3.765842346157709*^9}, {
  3.765842833502782*^9, 3.7658428338936515`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"8cf41e49-185f-4da3-a6be-1718db9a9c69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZetaGaugeHolo", "[", "Rep", "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ZetaGaugeHoloTerms", "[", 
      RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7658423795085754`*^9, 3.7658424198411484`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"092afb61-fcd6-4156-9fca-a5ae68f1235e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HoloraumyResult", "[", "2", "]"}], "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HoloraumyDD", "[", 
         RowBox[{
          RowBox[{"Da", "[", "aa", "]"}], ",", 
          RowBox[{"Da", "[", "bb", "]"}]}], "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "cc", "]"}], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], "==", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "I", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"FHolo", "[", "Rep", "]"}], "[", 
               RowBox[{"mu", ",", "ap", ",", "bt"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"aa", ",", "bb", ",", "cc", ",", "dd"}], "]"}], "]"}], 
             
             RowBox[{"UD", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"\[Psi]stup", "[", "bt", "]"}], "[", "dd", "]"}], 
                "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
               RowBox[{"\[CapitalStigma]", "[", "ap", "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"ap", ",", "0", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"bt", ",", "0", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"dd", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "-", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ZHolo", "[", "Rep", "]"}], "[", "mu", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], "-", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ZetaGaugeHolo", "[", "Rep", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"bb", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ")"}]}], ",", 
    
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Psi]", "[", "_", "]"}], "[", "_", "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", "Simplify"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7422252370370483`*^9, 3.7422252653879547`*^9}, {
   3.742225324248343*^9, 3.7422253502011967`*^9}, {3.7422257494222517`*^9, 
   3.742225750065353*^9}, {3.742225813864871*^9, 3.7422258782322683`*^9}, {
   3.7422361007628717`*^9, 3.742236257611809*^9}, {3.742236355875434*^9, 
   3.742236390026614*^9}, {3.7422371009663353`*^9, 3.742237126163786*^9}, {
   3.7423170915863733`*^9, 3.742317127728424*^9}, {3.760984885798668*^9, 
   3.760985028488144*^9}, {3.7634065442387815`*^9, 3.763406591771783*^9}, {
   3.7638186991084027`*^9, 3.763818700139394*^9}, {3.763819251334874*^9, 
   3.763819255388209*^9}, {3.763850893226326*^9, 3.763850896579274*^9}, {
   3.763850938778571*^9, 3.7638509411048717`*^9}, {3.763853054018054*^9, 
   3.7638530559667273`*^9}, {3.7656377010902557`*^9, 
   3.7656377022117805`*^9}, {3.7656380915482206`*^9, 3.765638130353726*^9}, {
   3.765729332255703*^9, 3.7657293425922766`*^9}, {3.7657296837496014`*^9, 
   3.7657296865695868`*^9}, {3.7657340021702404`*^9, 
   3.7657340350423365`*^9}, {3.7657341412736797`*^9, 3.765734142465913*^9}, {
   3.765734207036125*^9, 3.7657342101360064`*^9}, {3.765734623554945*^9, 
   3.7657347253653345`*^9}, {3.765842452049056*^9, 3.7658425184814873`*^9}, 
   3.765842584216614*^9, {3.7658428705039606`*^9, 3.7658428837966995`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"be797b87-01de-4d2c-adc8-2ca3bb2342fe"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.765734760378296*^9, {3.765842563893188*^9, 3.7658425862167754`*^9}, 
   3.765842635350156*^9, {3.7658428565495653`*^9, 3.7658428893750477`*^9}, 
   3.768933179759615*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"8ae8034e-3743-4549-bad6-15478287fce4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Holoraumy Summary", "Section",
 CellChangeTimes->{{3.7638177693932133`*^9, 
  3.763817772713112*^9}},ExpressionUUID->"142efc17-58e8-4296-89b0-\
0375f5d0350b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HoloraumyResult", "[", "1", "]"}], "\[Equal]", 
  RowBox[{"HoloraumyResult", "[", "2", "]"}], "\[Equal]", "True"}]], "Input",
 CellChangeTimes->{{3.7638177747097445`*^9, 3.763817781913082*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"836fdadd-a1b7-4873-b18d-15df5d0d7dcb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.763850950330024*^9, 3.76385204207191*^9, 
  3.763853068612472*^9, 3.7649529966975083`*^9, 3.7649563409335227`*^9, 
  3.7657347721759195`*^9, 3.7657348453126755`*^9, 3.7658429007512956`*^9, 
  3.768933182562473*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"167d5745-867d-4676-9695-62c68efabfd8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[ScriptCapitalL] = ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", " "}]], " ", 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Alpha]"], 
      SubscriptBox["h", "\[Mu]\[Nu]"]}], " ", 
     RowBox[{
      SuperscriptBox["\[PartialD]", "\[Alpha]"], 
      SuperscriptBox["h", "\[Mu]\[Nu]"]}]}], " ", "+", " ", 
    RowBox[{
     FractionBox["1", "2"], "  ", 
     RowBox[{
      SuperscriptBox["\[PartialD]", "\[Alpha]"], "h"}], " ", 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Alpha]"], "h"}]}], " ", "-", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[PartialD]", "\[Alpha]"], "h"}], " ", 
     RowBox[{
      SuperscriptBox["\[PartialD]", "\[Beta]"], 
      SubscriptBox["h", "\[Alpha]\[Beta]"]}]}], " ", "+", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[PartialD]", "\[Mu]"], 
      SubscriptBox["h", "\[Mu]\[Nu]"]}], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Alpha]"], 
      SuperscriptBox["h", "\[Alpha]\[Nu]"]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"-", " ", 
     FractionBox["1", "2"]}], " ", 
    SubscriptBox["\[Psi]", "\[Mu]b"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Epsilon]", 
       RowBox[{"\[Mu]\[Nu]\[Alpha]\[Beta]", " "}]], "(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "5"], 
       SubscriptBox["\[Gamma]", "\[Nu]"]}], ")"}], "bc"], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Alpha]"], 
     SubscriptBox["\[Psi]", "\[Beta]c"]}]}], TraditionalForm]}], "None",
  ExpressionUUID->"443d793a-f9d8-46a7-92ba-57d640848670"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["D", "c"], "\[ScriptCapitalL]"}], " ", "=", " ", 
    RowBox[{"0", " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["D", "c"], 
         SubscriptBox["h", "\[Mu]\[Nu]"]}], ")"}], 
       RowBox[{"\[Square]", 
        SuperscriptBox["h", "\[Mu]\[Nu]"]}]}], " ", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["D", "c"], "h"}], ")"}], 
       RowBox[{"\[Square]", "h"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["D", "c"], "h"}], ")"}], 
       RowBox[{
        SubscriptBox["\[PartialD]", "\[Mu]"], 
        RowBox[{
         SubscriptBox["\[PartialD]", "\[Nu]"], 
         SuperscriptBox["h", "\[Mu]\[Nu]"]}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["D", "c"], 
         SubscriptBox["h", "\[Mu]\[Nu]"]}], ")"}], 
       RowBox[{
        SuperscriptBox["\[PartialD]", "\[Mu]"], 
        RowBox[{
         SuperscriptBox["\[PartialD]", "\[Nu]"], "h"}]}]}], "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["D", "c"], 
         SubscriptBox["h", "\[Alpha]\[Nu]"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[PartialD]", "\[Alpha]"], 
        RowBox[{
         SubscriptBox["\[PartialD]", "\[Mu]"], 
         SuperscriptBox["h", "\[Mu]\[Nu]"]}]}]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Psi]", "\[Mu]a"], 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Epsilon]", 
          RowBox[{"\[Mu]\[Nu]\[Alpha]\[Beta]", " "}]], "(", 
         RowBox[{
          SuperscriptBox["\[Gamma]", "5"], 
          SubscriptBox["\[Gamma]", "\[Nu]"]}], ")"}], "ab"], 
       RowBox[{
        SubscriptBox["\[PartialD]", "\[Alpha]"], 
        SubscriptBox["D", "c"]}], 
       SubscriptBox["\[Psi]", "\[Beta]b"], "  "}]}]}]}], TraditionalForm]], 
  "None",ExpressionUUID->"72633710-68b2-413d-b55c-c4da1021ee15"]
}], "Section",
 CellChangeTimes->{{3.454246606703125*^9, 3.454246625015625*^9}, {
   3.454251500078125*^9, 3.454251667421875*^9}, {3.454251702390625*^9, 
   3.45425215521875*^9}, {3.454263376*^9, 3.454263397265625*^9}, {
   3.45428740525*^9, 3.45428742084375*^9}, {3.454287467203125*^9, 
   3.45428773065625*^9}, {3.45428910365625*^9, 3.4542891065625*^9}, {
   3.454456307296875*^9, 3.454456465078125*^9}, {3.50678340159289*^9, 
   3.506783565701276*^9}, {3.536932228013555*^9, 3.536932298641595*^9}, {
   3.5369323480434203`*^9, 3.5369324286720324`*^9}, {3.536932497279956*^9, 
   3.536932514471939*^9}, {3.5369351427460437`*^9, 3.536935372533187*^9}, {
   3.536935409387295*^9, 3.536935461220259*^9}, {3.538947494798768*^9, 
   3.5389475339740086`*^9}, {3.5390845549031973`*^9, 3.539084570345081*^9}, {
   3.5485026466884108`*^9, 3.548502738856683*^9}, {3.5485028490319843`*^9, 
   3.548502943205371*^9}, {3.5485036606274047`*^9, 3.548503666782757*^9}, {
   3.5486501786244926`*^9, 3.548650189815133*^9}, {3.5508445420355253`*^9, 
   3.550844611554328*^9}, {3.550844729617717*^9, 3.5508447461547728`*^9}, {
   3.550844788089023*^9, 3.550844815455274*^9}, {3.550844863183857*^9, 
   3.550844891662616*^9}, {3.5516982689282255`*^9, 3.5516983432544765`*^9}, {
   3.5516983816606736`*^9, 3.5516983829327464`*^9}, {3.5516984249471493`*^9, 
   3.5516984714848113`*^9}, {3.5516985702944627`*^9, 3.551698875578924*^9}, {
   3.551698927129873*^9, 3.551698991279542*^9}, {3.5516991515377083`*^9, 
   3.551699274239726*^9}, 3.5516993143020177`*^9, {3.5516994405662394`*^9, 
   3.55169944075025*^9}, {3.551700337449538*^9, 3.551700363040002*^9}, {
   3.551700495619585*^9, 3.5517008290356555`*^9}, {3.55170087195311*^9, 
   3.551700878835504*^9}, {3.5517010729696074`*^9, 3.5517011056154747`*^9}, {
   3.5517011510140715`*^9, 3.551701165619907*^9}, {3.5517104326207523`*^9, 
   3.55171051684857*^9}, {3.551710571526697*^9, 3.551710652315318*^9}, {
   3.5517221642034326`*^9, 3.5517221692237196`*^9}, {3.5517252564955*^9, 
   3.551725281353922*^9}, {3.7114260946972237`*^9, 3.711426183003275*^9}, {
   3.711426287286239*^9, 3.7114262974838223`*^9}, {3.7114263325418277`*^9, 
   3.7114264268272204`*^9}, {3.711430144473858*^9, 3.7114301924035993`*^9}, {
   3.711653661617711*^9, 3.7116536787776923`*^9}, {3.711653713654687*^9, 
   3.7116537137916946`*^9}, {3.711654206000848*^9, 3.7116542061028533`*^9}, {
   3.711654445670556*^9, 3.7116544463065925`*^9}, {3.7116548503857045`*^9, 
   3.711654857261098*^9}, {3.71165563829677*^9, 3.7116556549907255`*^9}, {
   3.711716534232015*^9, 3.7117165349890585`*^9}, {3.711716642904231*^9, 
   3.711716643571269*^9}, {3.711842832370387*^9, 3.7118428335114527`*^9}, {
   3.711843038394171*^9, 3.711843135967752*^9}, {3.7120077629578624`*^9, 
   3.7120078330338707`*^9}, {3.712062173002533*^9, 3.7120621860712805`*^9}, {
   3.7120629022702446`*^9, 3.71206290429136*^9}, {3.712063679821718*^9, 
   3.7120637159697857`*^9}, {3.7120665462486677`*^9, 3.712066562770613*^9}, {
   3.7505108114133334`*^9, 3.7505108135172825`*^9}, {3.7638532895589542`*^9, 
   3.763853309933999*^9}},ExpressionUUID->"d88816e8-8bc1-4d08-9847-\
0322dc144d03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lh", " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["D", "c"], 
       SubscriptBox["h", "\[Mu]\[Nu]"]}], ")"}], 
     RowBox[{"\[Square]", 
      SuperscriptBox["h", "\[Mu]\[Nu]"]}]}], " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["D", "c"], "h"}], ")"}], 
     RowBox[{"\[Square]", "h"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["D", "c"], "h"}], ")"}], 
     RowBox[{
      SubscriptBox["\[PartialD]", "\[Mu]"], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Nu]"], 
       SuperscriptBox["h", "\[Mu]\[Nu]"]}]}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["D", "c"], 
       SubscriptBox["h", "\[Mu]\[Nu]"]}], ")"}], 
     RowBox[{
      SuperscriptBox["\[PartialD]", "\[Mu]"], 
      RowBox[{
       SuperscriptBox["\[PartialD]", "\[Nu]"], "h"}]}]}], "-", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["D", "c"], 
       SubscriptBox["h", "\[Alpha]\[Nu]"]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[PartialD]", "\[Alpha]"], 
      RowBox[{
       SubscriptBox["\[PartialD]", "\[Mu]"], 
       SuperscriptBox["h", "\[Mu]\[Nu]"]}]}]}]}], ")"}]}]], "Subsection",
 CellChangeTimes->{{3.454263521859375*^9, 3.4542635294375*^9}, {
  3.454456655203125*^9, 3.45445665646875*^9}, {3.5067837857208605`*^9, 
  3.506783786346896*^9}, {3.536937383349199*^9, 3.536937408057612*^9}, {
  3.5389487510476217`*^9, 3.538948751560651*^9}, {3.53909057994781*^9, 
  3.5390905846680803`*^9}, {3.539273785000352*^9, 3.539273800395232*^9}, {
  3.5702108844942346`*^9, 3.570210912121883*^9}, {3.5703779824579935`*^9, 
  3.5703779917712097`*^9}, {3.5703840695131607`*^9, 3.5703840732259665`*^9}, {
  3.570470118729456*^9, 3.5704702359092464`*^9}, {3.570911828659255*^9, 
  3.570911844890457*^9}, {3.7038751925985603`*^9, 3.703875193667621*^9}, {
  3.7056701509650946`*^9, 3.7056701617277107`*^9}, {3.711430212633756*^9, 
  3.7114302195291505`*^9}, {3.7120079451222816`*^9, 3.7120079493725243`*^9}, {
  3.7120622621146297`*^9, 
  3.7120622667888975`*^9}},ExpressionUUID->"001dfc53-eb6d-49b5-86ca-\
955fba8692e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lh", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Da", "[", "cc", "]"}], "[", 
          RowBox[{
           RowBox[{"hfield", "[", 
            RowBox[{"mu", ",", "nu"}], "]"}], "[", 
           RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], 
         RowBox[{"Lap", "[", 
          RowBox[{
           RowBox[{"hfieldupup", "[", 
            RowBox[{"mu", ",", "nu"}], "]"}], "[", 
           RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]}], " ", 
        ",", 
        RowBox[{"{", 
         RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "-", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"Da", "[", "cc", "]"}], "[", 
        RowBox[{"htrace", "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], 
       RowBox[{"Lap", "[", 
        RowBox[{"htrace", "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]}], " ", 
      "+", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"Da", "[", "cc", "]"}], "[", 
        RowBox[{"htrace", "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"hfieldupup", "[", 
             RowBox[{"mu", ",", "nu"}], "]"}], "[", 
            RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "mu", "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "nu", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}]}], " ", "+", 
      "  ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Da", "[", "cc", "]"}], "[", 
          RowBox[{
           RowBox[{"hfield", "[", 
            RowBox[{"mu", ",", "nu"}], "]"}], "[", 
           RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], 
         RowBox[{"UD", "[", 
          RowBox[{
           RowBox[{"UD", "[", 
            RowBox[{
             RowBox[{"htrace", "[", 
              RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
             RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "nu", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nu", ",", "0", ",", "3"}], "}"}]}], "]"}], "-", " ", 
      RowBox[{"2", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Da", "[", "cc", "]"}], "[", 
           RowBox[{
            RowBox[{"hfield", "[", 
             RowBox[{"ap", ",", "nu"}], "]"}], "[", 
            RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"UD", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"hfieldupup", "[", 
                RowBox[{"mu", ",", " ", "nu"}], "]"}], "[", 
               RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
              RowBox[{"\[CapitalStigma]", "[", "ap", "]"}]}], "]"}], ",", 
            RowBox[{"\[CapitalStigma]", "[", "mu", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nu", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ap", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.536937414176962*^9, 3.536937438702365*^9}, {
   3.536937473153335*^9, 3.5369376823332996`*^9}, 3.536937950762653*^9, {
   3.53894875696796*^9, 3.538948758159028*^9}, 3.5390905890773325`*^9, 
   3.5392738112578535`*^9, {3.5702109447103395`*^9, 3.5702109558175592`*^9}, {
   3.570378004422832*^9, 3.5703780392108927`*^9}, {3.5703780834057693`*^9, 
   3.570378160485504*^9}, {3.5703840758623714`*^9, 3.5703840776719747`*^9}, {
   3.5704702494369535`*^9, 3.5704702793469105`*^9}, {3.5704703284181604`*^9, 
   3.57047042193559*^9}, {3.5704704691505613`*^9, 3.570470486926833*^9}, {
   3.570911869884754*^9, 3.570911895114043*^9}, {3.7038752066853657`*^9, 
   3.7038753910399103`*^9}, {3.7038755507020426`*^9, 
   3.7038755730053177`*^9}, {3.7056701945775895`*^9, 3.705670207027302*^9}, {
   3.705670458343676*^9, 3.7056705502979355`*^9}, {3.705670599469748*^9, 
   3.7056706672886267`*^9}, {3.711430224989463*^9, 3.711430231269822*^9}, {
   3.712007921040904*^9, 3.712007927680284*^9}, 3.712062271927191*^9, {
   3.750510882522809*^9, 3.750510886084606*^9}, {3.7505115795099373`*^9, 
   3.7505115871984625`*^9}, {3.750511625086454*^9, 3.750511660142497*^9}, {
   3.7505116956139736`*^9, 3.75051175712632*^9}, {3.7505120013274612`*^9, 
   3.750512006054532*^9}, 3.7505120433362775`*^9, 3.750512094646*^9},
 CellLabel->
  "In[127]:=",ExpressionUUID->"b92eb5d4-5793-49fe-a374-47288407789c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lh", " ", "=", " ", 
  RowBox[{"Collect", "[", 
   RowBox[{"Lh", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "_", "]"}], "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}], ",", 
    "Simplify"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.536937980011326*^9, 3.5369379941831365`*^9}, {
   3.570470613165512*^9, 3.5704706521953588`*^9}, 3.5704710079067945`*^9, {
   3.5704710496769333`*^9, 3.570471052989484*^9}, {3.5709119076862154`*^9, 
   3.5709119111082563`*^9}, {3.7039363301285753`*^9, 
   3.7039363314966536`*^9}, {3.705670680945408*^9, 3.7056706830935307`*^9}, {
   3.7114304752767787`*^9, 3.7114304838572693`*^9}, {3.750511946556757*^9, 
   3.750511951701228*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"a34cfb6f-1d44-476c-a8ce-d33dd877acea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7539262022834234`*^9, 3.763853338245655*^9, 
  3.764956345079999*^9, 3.765734849273344*^9, 3.765842906705039*^9, 
  3.768933187136197*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"bc4ab38b-6025-4de1-9c13-56a5a335b039"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"LPsi", "=", 
    SubscriptBox["D", "c"]}], TraditionalForm]], "None",ExpressionUUID->
  "e6a27bdc-99e3-4efd-979f-26ba5004483e"],
 "( ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SubscriptBox["\[Psi]", "\[Mu]a"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Epsilon]", 
       RowBox[{"\[Mu]\[Nu]\[Alpha]\[Beta]", " "}]], "(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "5"], 
       SubscriptBox["\[Gamma]", "\[Nu]"]}], ")"}], "ab"], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Alpha]"], 
     SubscriptBox["\[Psi]", "\[Beta]b"]}]}], TraditionalForm]], "None",
  ExpressionUUID->"f419cbb4-9a34-436b-970d-319d06862c95"],
 ")=  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "\[Mu]a"], 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Epsilon]", 
       RowBox[{"\[Mu]\[Nu]\[Alpha]\[Beta]", " "}]], "(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "5"], 
       SubscriptBox["\[Gamma]", "\[Nu]"]}], ")"}], "ab"], 
    RowBox[{
     SubscriptBox["\[PartialD]", "\[Alpha]"], 
     SubscriptBox["D", "c"]}], 
    SubscriptBox["\[Psi]", "\[Beta]b"]}], TraditionalForm]], "None",
  ExpressionUUID->"74f8de5c-dfa3-46ae-aed9-ac134f912fe0"]
}], "Subsection",
 CellChangeTimes->{{3.454263570578125*^9, 3.45426360634375*^9}, {
  3.5369380026306195`*^9, 3.536938009748027*^9}, {3.536938059518873*^9, 
  3.5369380865124173`*^9}, {3.536938565136793*^9, 3.536938569085019*^9}, {
  3.536938821762471*^9, 3.536938827260786*^9}, {3.538947583176823*^9, 
  3.538947587472069*^9}, {3.5390847379416666`*^9, 3.539084746349148*^9}, {
  3.550845228538665*^9, 3.5508452503322887`*^9}, {3.711716649368601*^9, 
  3.711716655427947*^9}, {3.7118435157594748`*^9, 
  3.711843520679756*^9}},ExpressionUUID->"1f1e720d-dd40-42f0-9df1-\
c1f44e0f517a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LPsi", " ", "=", " ", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "mu", "]"}], "[", "aa", "]"}], "[", 
          RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], 
         RowBox[{"\[Epsilon]up", "[", 
          RowBox[{"mu", ",", "nu", ",", "alpha", ",", "beta"}], "]"}], " ", 
         RowBox[{
          RowBox[{"\[Gamma]5\[Gamma]stdownup", "[", "nu", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"aa", ",", "bb"}], "]"}], "]"}], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Da", "[", "cc", "]"}], "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Psi]", "[", "beta", "]"}], "[", "bb", "]"}], "[", 
             RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
           RowBox[{"\[CapitalStigma]", "[", "alpha", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mu", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nu", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"alpha", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"beta", ",", "0", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"aa", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"bb", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"cc", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "_", "]"}], "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}], ",", 
    "Simplify"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.454254295546875*^9, 3.454254298609375*^9}, {
   3.454254500203125*^9, 3.454254644109375*^9}, {3.4542548304375*^9, 
   3.45425483171875*^9}, 3.454286339109375*^9, {3.45429449125*^9, 
   3.454294491828125*^9}, 3.454294806671875*^9, {3.5369380990451345`*^9, 
   3.5369381415915675`*^9}, {3.536938207158318*^9, 3.5369383053899364`*^9}, {
   3.536938574457326*^9, 3.536938595134509*^9}, {3.536938830401965*^9, 
   3.536938851898195*^9}, 3.536939025336115*^9, 3.538947591582304*^9, 
   3.538947913685727*^9, {3.539084751157423*^9, 3.5390847521494794`*^9}, {
   3.550846084369994*^9, 3.550846084489064*^9}, {3.7117166618783164`*^9, 
   3.711716663984437*^9}, {3.7118435255620356`*^9, 3.71184352633508*^9}, {
   3.750508770287689*^9, 3.750508773280984*^9}, {3.7505088685368586`*^9, 
   3.750508870346526*^9}, {3.750510888550106*^9, 3.750510889285465*^9}, {
   3.750512157725074*^9, 3.7505121914690933`*^9}, {3.750512237374123*^9, 
   3.750512240807478*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"40872f3c-9d06-4e35-ada8-5f20678659c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "2", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"2", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "1", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "3"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "2", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "0"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "1", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "3"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "3", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"1", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"0", ",", "0"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "2"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"hfield", "[", 
           RowBox[{"0", ",", "1"}], "]"}], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"hfield", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7539262099459286`*^9, 3.763853338840987*^9, 
  3.76495634580242*^9, 3.7657348498617563`*^9, 3.765842907329919*^9, 
  3.768933187724968*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"cf5fa8e1-c960-40bc-abb0-68120b0275d0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lagrangian invariance: ", "Subsection",
 CellChangeTimes->{{3.5067876981496387`*^9, 3.5067876997717314`*^9}, {
   3.5067877592661343`*^9, 3.5067877700457506`*^9}, {3.5206489898016458`*^9, 
   3.5206490952536774`*^9}, {3.5369392206842885`*^9, 3.536939221879357*^9}, {
   3.5369396151438503`*^9, 3.5369396263204894`*^9}, 
   3.538533911871493*^9},ExpressionUUID->"6a8d6f97-89cf-4b4e-aa5d-\
c37e74fb2589"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DLTotal", "=", 
  RowBox[{"(", " ", 
   RowBox[{"Lh", " ", "+", " ", "LPsi"}], "  ", ")"}]}]], "Input",
 CellChangeTimes->{{3.45427044140625*^9, 3.454270558078125*^9}, 
   3.454270650578125*^9, {3.45428999815625*^9, 3.4542900703125*^9}, {
   3.454458830296875*^9, 3.45445884096875*^9}, 3.454940376296875*^9, {
   3.506785522192181*^9, 3.506785526790444*^9}, {3.5369392311728883`*^9, 
   3.5369392376112566`*^9}, {3.5485033703608027`*^9, 
   3.5485033962392826`*^9}, {3.5486477562959433`*^9, 
   3.5486477629383235`*^9}, {3.551712627583896*^9, 3.551712652427317*^9}, {
   3.5517255133411903`*^9, 3.5517255156213207`*^9}, {3.7114268931508927`*^9, 
   3.711426896750098*^9}, {3.763853341993445*^9, 3.76385334707892*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"a0dddbc3-c162-43c6-987f-80846e362867"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"hfield", "[", 
                   RowBox[{"0", ",", "2"}], "]"}], 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"0", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "2", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"0", ",", "1"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"0", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"1", ",", "1"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"2", ",", "2"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"2", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"1", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "1", ",", "0", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], 
             " ", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Psi]", "[", "0", "]"}], "[", "1", "]"}], "[", 
              RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "+", 
            TemplateBox[{"22"},
             "OutputSizeLimit`Skeleton"], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"0", ",", "0"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"1", ",", "1"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "0", ",", "1", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"1", ",", "2"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "1", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"1", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "1", ",", "1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"2", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "2", ",", "0", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"0", ",", "2"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0", ",", "0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"0", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"hfield", "[", 
                  RowBox[{"2", ",", "3"}], "]"}], 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], ")"}], 
             " ", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Psi]", "[", "3", "]"}], "[", "4", "]"}], "[", 
              RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{82., {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 33921544256664057681, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{78., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 33921544256664057681, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{57., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 33921544256664057681, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{99., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33921544256664057681 === $SessionID, 
   Out[130], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7539262104805164`*^9, 3.763853350566964*^9, 
  3.7649563459373207`*^9, 3.7657348499409294`*^9, 3.7658429074236164`*^9, 
  3.7689331878186955`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"38e04989-06e5-40fe-8016-263e2062fc0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DLFinal", " ", "=", " ", 
  RowBox[{"Collect", "[", 
   RowBox[{"DLTotal", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", "_", "]"}], "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Beta]", "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"hfield", "[", 
         RowBox[{"_", ",", "_"}], "]"}], 
        TagBox[
         RowBox[{"(", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Afield", "[", "_", "]"}], 
        TagBox[
         RowBox[{"(", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Afield", "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Vfield", "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       SuperscriptBox["Sfield", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{"Sfield", "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       SuperscriptBox["Pfield", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{"Pfield", "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Vfield", "[", "_", "]"}], 
        TagBox[
         RowBox[{"(", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Wfield", "[", "_", "]"}], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Wfield", "[", "_", "]"}], 
        TagBox[
         RowBox[{"(", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "]"}]}], "}"}], ",", 
    "Simplify"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5486031894031253`*^9, 3.548603246061366*^9}, {
   3.5486477185457845`*^9, 3.5486477207099085`*^9}, {3.5486477693896923`*^9, 
   3.548647816679397*^9}, {3.548648762317485*^9, 3.5486487660216966`*^9}, {
   3.548648892678941*^9, 3.5486489290750227`*^9}, {3.5486490757914143`*^9, 
   3.548649079890649*^9}, {3.5508456492171373`*^9, 3.550845654976972*^9}, {
   3.550845866353086*^9, 3.550845900248698*^9}, {3.550845984097158*^9, 
   3.5508459947455683`*^9}, {3.5517221996034575`*^9, 3.55172235997763*^9}, 
   3.551722652706373*^9, {3.5517258080390463`*^9, 3.5517258190696774`*^9}, {
   3.5523165181227307`*^9, 3.552316519793826*^9}, {3.711426904660551*^9, 
   3.7114269078357325`*^9}, {3.7118436046035566`*^9, 3.711843606650674*^9}, {
   3.7120079678705826`*^9, 3.7120079679895897`*^9}, {3.750519697469802*^9, 
   3.7505197094369187`*^9}, {3.7505224297662377`*^9, 
   3.7505224711745605`*^9}, {3.750525363173651*^9, 3.750525430764327*^9}, 
   3.750525593982482*^9, {3.7505259763499284`*^9, 3.7505259985956964`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"325c7909-8553-4c29-a4f6-024b14fb77f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.753926210800645*^9, 3.763853353371715*^9, 
  3.7649563459941483`*^9, 3.7657348500386705`*^9, 3.7658429075329905`*^9, 
  3.76893318791243*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"90106db6-4e36-464b-aa56-21fd44acd947"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lagrangian Summary", "Section",
 CellChangeTimes->{{3.7505125018125286`*^9, 
  3.750512503564127*^9}},ExpressionUUID->"26d36566-7252-4511-b893-\
30248230fd83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DLFinal", " ", "\[Equal]", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.71235675999831*^9, 3.712356766382675*^9}, {
  3.750512491733857*^9, 3.7505124964370475`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"1518ae9c-6850-45fe-9671-1b3cf13b0359"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7539262108195944`*^9, 3.763853360134605*^9, 
  3.7649563521335726`*^9, 3.765734862251006*^9, 3.7658429076114397`*^9, 
  3.7689331879592514`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"5c5f02a1-a20b-42cc-9b06-be6fbb422495"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 9327, 126, 121, "Title",ExpressionUUID->"dfab12f3-523a-4891-ab6d-6353bcfa0aa5"],
Cell[CellGroupData[{
Cell[9931, 152, 289, 4, 83, "Section",ExpressionUUID->"8ce62cfa-2467-4484-bfab-5a2bb7149ea5"],
Cell[CellGroupData[{
Cell[10245, 160, 148, 2, 7689, "Input",ExpressionUUID->"65e9b759-d921-4a12-9e52-b3e8b17f8777"],
Cell[10396, 164, 870, 12, 70, "Output",ExpressionUUID->"de2095eb-5677-49d5-9f7c-d3af7f98d09f"]
}, Open  ]],
Cell[11281, 179, 1224, 17, 7689, "Input",ExpressionUUID->"1b130993-d415-41ec-8260-109b938b0e03"],
Cell[12508, 198, 247, 4, 7689, "Input",ExpressionUUID->"042a2f57-aed7-4239-853e-081c663f644e"],
Cell[CellGroupData[{
Cell[12780, 206, 214, 3, 7689, "Input",ExpressionUUID->"ee9a22d7-408f-43e3-b2dc-2ed014de5ea4"],
Cell[12997, 211, 860, 12, 70, "Output",ExpressionUUID->"8c4260af-601b-4742-8b99-a8d955215562"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[13906, 229, 2615, 68, 215, "Section",ExpressionUUID->"031e3254-63bf-4a4f-b020-43463dd7976d"],
Cell[CellGroupData[{
Cell[16546, 301, 161, 3, 13642, "Subsection",ExpressionUUID->"ed390b0f-9eb6-4474-b366-790be27bb804"],
Cell[CellGroupData[{
Cell[16732, 308, 1658, 36, 38929, "Input",ExpressionUUID->"d9198706-a4ea-4d17-ab62-e8a043a68f27"],
Cell[18393, 346, 1219, 30, 70, "Output",ExpressionUUID->"504b7733-7abd-414e-bb27-5b7bf0af3173"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[19661, 382, 204, 4, 9206, "Subsection",ExpressionUUID->"a3c1331a-d5af-4888-b423-7b27de62f8d4"],
Cell[CellGroupData[{
Cell[19890, 390, 2045, 57, 72435, "Input",ExpressionUUID->"1aa8a034-8435-48b1-9da5-03a9891f1fd2"],
Cell[21938, 449, 1990, 56, 70, "Output",ExpressionUUID->"f5e2c4fa-1cf0-41b9-bfdf-79b2cf8ae15a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23965, 510, 470, 10, 38929, "Input",ExpressionUUID->"a13d6749-f784-4d8f-aa23-ea0af4434ca8"],
Cell[24438, 522, 555, 9, 70, "Output",ExpressionUUID->"be08d098-178a-4342-be2c-689b8c22e548"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[25042, 537, 654, 17, 9740, "Subsection",ExpressionUUID->"db88ada8-524f-4956-827f-be6f75a69f79"],
Cell[CellGroupData[{
Cell[25721, 558, 799, 19, 38929, "Input",ExpressionUUID->"dce8ff9b-0752-40d9-9643-138d17430761"],
Cell[26523, 579, 919, 21, 70, "Output",ExpressionUUID->"dbb8f52f-ff55-4c05-abed-756cf4fd08b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27479, 605, 418, 10, 38929, "Input",ExpressionUUID->"d916c9e9-54ca-468f-92b2-7db495397f00"],
Cell[27900, 617, 640, 12, 70, "Output",ExpressionUUID->"49e09899-548e-4317-926f-29c6a651e24d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28577, 634, 211, 3, 38929, "Input",ExpressionUUID->"e798221c-92d8-4733-b77b-eb517a7d7af1"],
Cell[28791, 639, 510, 7, 70, "Output",ExpressionUUID->"5d4f59da-bdf8-4c72-a2b6-073cd614ea6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29338, 651, 376, 9, 38929, "Input",ExpressionUUID->"03fbad0c-aaeb-4287-aab1-0ec36ee07468"],
Cell[29717, 662, 652, 12, 70, "Output",ExpressionUUID->"d46e58ea-8cbf-4a1b-a5c4-4e18c7d7bfbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30406, 679, 209, 3, 38929, "Input",ExpressionUUID->"9f3919fb-456a-476c-a04f-0e037b37f3bf"],
Cell[30618, 684, 506, 7, 70, "Output",ExpressionUUID->"4dbb5118-8061-462d-b195-00e37003f6a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31161, 696, 410, 10, 38929, "Input",ExpressionUUID->"2f62c778-b7f7-45f6-9843-ecbeae22127f"],
Cell[31574, 708, 500, 7, 70, "Output",ExpressionUUID->"707105ea-9bb7-4f3a-8c74-72ef9d0b697f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32111, 720, 406, 10, 38929, "Input",ExpressionUUID->"c9d878b2-9963-485b-b1f5-fc3d547df7f5"],
Cell[32520, 732, 651, 12, 70, "Output",ExpressionUUID->"fc225c62-16d6-4dd3-8a1d-c63b33dbeccd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33208, 749, 209, 3, 38929, "Input",ExpressionUUID->"9c2d7138-a129-475c-87f2-25129833ac05"],
Cell[33420, 754, 504, 7, 70, "Output",ExpressionUUID->"45e7defc-9b0e-4b1a-b418-233038c387e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33961, 766, 384, 10, 38929, "Input",ExpressionUUID->"50eef974-2257-48f8-b336-e5fd0daab532"],
Cell[34348, 778, 645, 12, 70, "Output",ExpressionUUID->"5adad039-d64f-4fec-a477-d0314530d03e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35030, 795, 209, 3, 38929, "Input",ExpressionUUID->"3153002b-5cae-42cb-bec8-10bf55fd5edb"],
Cell[35242, 800, 659, 12, 70, "Output",ExpressionUUID->"49052da6-9ced-4cdb-b36d-deb0cc8e541b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[35950, 818, 1473, 46, 17301, "Subsection",ExpressionUUID->"a0666ffd-d2d0-431f-894b-3a823c54eca8"],
Cell[CellGroupData[{
Cell[37448, 868, 1511, 38, 38929, "Input",ExpressionUUID->"27f53762-63d5-45ef-83ef-90cfabf7745b"],
Cell[38962, 908, 1519, 39, 70, "Output",ExpressionUUID->"ae6fb7c8-e073-422b-a739-f46a681a080b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40518, 952, 2312, 72, 66365, "Input",ExpressionUUID->"f66f4da0-67fd-4e38-a1d1-e6fb3b7ab5b1"],
Cell[42833, 1026, 3303, 93, 70, "Output",ExpressionUUID->"36d7cd2d-d973-41b8-9970-4897acef81c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46173, 1124, 283, 5, 38929, "Input",ExpressionUUID->"6b3fd360-b120-4bb1-b15b-398abd95cf61"],
Cell[46459, 1131, 882, 21, 70, "Output",ExpressionUUID->"070e9cce-9fb0-4f7b-aea4-22f02bd93aba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47378, 1157, 307, 6, 38929, "Input",ExpressionUUID->"803dd437-5d4c-44c3-9438-2ee9d174f2f0"],
Cell[47688, 1165, 1302, 33, 70, "Output",ExpressionUUID->"c15ac937-2de2-4ffc-bad3-c2ee75077b18"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[49039, 1204, 344, 7, 9206, "Subsection",ExpressionUUID->"fabc6046-c7a9-4397-9450-8076231cee42"],
Cell[CellGroupData[{
Cell[49408, 1215, 3632, 87, 119601, "Input",ExpressionUUID->"d2e75817-7f14-4246-8640-904f1986767b"],
Cell[53043, 1304, 4374, 113, 70, "Output",ExpressionUUID->"43b543dd-9246-4fe2-a7b2-e92e60ed533e"]
}, Open  ]],
Cell[57432, 1420, 1034, 27, 66365, "Input",ExpressionUUID->"eab3f79e-fcc9-40fb-bbfb-f19729305d5e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[58515, 1453, 1506, 21, 64, "Section",ExpressionUUID->"4cebe732-ee85-47ff-b2ab-c6f0f89802fa"],
Cell[CellGroupData[{
Cell[60046, 1478, 944, 24, 69, "Subsection",ExpressionUUID->"96021e92-db76-4fec-acc7-ed9c7105f25b"],
Cell[60993, 1504, 2597, 73, 9944812, "Input",ExpressionUUID->"9845e56b-9a82-4a33-a051-19f04859b4ef"],
Cell[63593, 1579, 726, 19, 2244854, "Input",ExpressionUUID->"208ec5c7-a4b1-4321-8f11-2bd090050a3a"],
Cell[CellGroupData[{
Cell[64344, 1602, 309, 6, 2244854, "Input",ExpressionUUID->"ffac19da-05ec-4960-9410-d8e8aa099ac4"],
Cell[64656, 1610, 593, 10, 70, "Output",ExpressionUUID->"d61c9d1f-049a-4b31-8bbb-5a6995544333"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65286, 1625, 397, 8, 2244854, "Input",ExpressionUUID->"7dc35f1f-4059-4750-99ef-7fb2003eea30"],
Cell[65686, 1635, 634, 11, 70, "Output",ExpressionUUID->"6fa4ee18-187a-4d50-a0fb-9f2c635657cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66357, 1651, 462, 11, 2244854, "Input",ExpressionUUID->"46fac5bf-729d-42ca-b0da-69f6d07d4304"],
Cell[66822, 1664, 786, 17, 70, "Output",ExpressionUUID->"f1a85a6e-1b49-4596-8106-ba09f1d926dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67645, 1686, 352, 7, 2244854, "Input",ExpressionUUID->"881ad82f-4258-4f69-8ef0-e0b295f5f3c2"],
Cell[68000, 1695, 628, 11, 70, "Output",ExpressionUUID->"a95864e3-b8a2-4647-a3b6-4282e58382ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68665, 1711, 454, 11, 2244854, "Input",ExpressionUUID->"3e233d6f-acbc-4024-99a7-12b4fcc7bd16"],
Cell[69122, 1724, 649, 12, 70, "Output",ExpressionUUID->"6844a791-501c-48c7-8203-5cad3bd187df"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[69820, 1742, 994, 29, 48, "Subsection",ExpressionUUID->"ebd33dc1-4cb6-41e7-ac9a-63fd264d7438"],
Cell[CellGroupData[{
Cell[70839, 1775, 495, 12, 934542, "Input",ExpressionUUID->"a57edc76-e31c-4e18-b0d9-0079752b5cad"],
Cell[71337, 1789, 3133, 82, 70, "Output",ExpressionUUID->"8656d316-eb90-4cef-8b26-a74929f0bddd"]
}, Open  ]],
Cell[74485, 1874, 868, 22, 1596417, "Input",ExpressionUUID->"2cfa4ac4-3d61-4674-baf0-4f36ec828e25"],
Cell[CellGroupData[{
Cell[75378, 1900, 544, 14, 934542, "Input",ExpressionUUID->"3c9af623-f384-4d3b-82db-b800da9ae8d4"],
Cell[75925, 1916, 3585, 97, 70, "Output",ExpressionUUID->"ff26f688-1efd-4d7e-a057-58982640ab20"]
}, Open  ]],
Cell[79525, 2016, 919, 22, 1596417, "Input",ExpressionUUID->"ae8da373-78bc-45c4-8bd1-cc7544967895"],
Cell[CellGroupData[{
Cell[80469, 2042, 597, 15, 934542, "Input",ExpressionUUID->"f536b1fd-b51f-43a2-978e-0aca6a756b83"],
Cell[81069, 2059, 3423, 91, 70, "Output",ExpressionUUID->"ac9af318-9bad-43b5-b28c-d5cf09551a89"]
}, Open  ]],
Cell[84507, 2153, 914, 22, 934542, "Input",ExpressionUUID->"bd4e95ed-017d-4f5a-ad4c-fbe9b5f9f7b0"],
Cell[CellGroupData[{
Cell[85446, 2179, 591, 15, 934542, "Input",ExpressionUUID->"bc05005e-355d-4a4d-a6b2-feec35e37e48"],
Cell[86040, 2196, 3562, 96, 70, "Output",ExpressionUUID->"f5fc37b7-fa2f-41f7-8132-487f102d72c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89639, 2297, 699, 18, 934542, "Input",ExpressionUUID->"6a2a327c-fc47-4667-b09b-aacfee9c98d9"],
Cell[90341, 2317, 1097, 25, 70, "Output",ExpressionUUID->"8e549b1e-7490-4ba6-9847-8293388677c8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[91487, 2348, 989, 28, 48, "Subsection",ExpressionUUID->"66b8783e-1794-4824-975a-9f85190445bc"],
Cell[92479, 2378, 836, 20, 934542, "Input",ExpressionUUID->"b5d1ac21-b213-4610-9168-676253478304"],
Cell[CellGroupData[{
Cell[93340, 2402, 655, 16, 934542, "Input",ExpressionUUID->"76346806-2413-4cf5-a34b-f938eeec0356"],
Cell[93998, 2420, 3585, 94, 70, "Output",ExpressionUUID->"544c8fa9-92e1-4eb9-bd0a-979400441bff"]
}, Open  ]],
Cell[97598, 2517, 933, 22, 1596417, "Input",ExpressionUUID->"f3ce096d-5295-4374-b037-8c777b82655a"],
Cell[CellGroupData[{
Cell[98556, 2543, 699, 16, 934542, "Input",ExpressionUUID->"1a3008e4-99af-465f-ad28-2fc6851d3e95"],
Cell[99258, 2561, 3683, 98, 70, "Output",ExpressionUUID->"e6015a95-ac0a-4f9d-8da8-22653cb9f658"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102978, 2664, 219, 3, 934542, "Input",ExpressionUUID->"226b1f96-029e-4913-aec4-d9081f7c64d4"],
Cell[103200, 2669, 1097, 28, 70, "Output",ExpressionUUID->"b69be1c3-90c2-46b9-9292-122e570c5721"]
}, Open  ]],
Cell[104312, 2700, 886, 20, 934542, "Input",ExpressionUUID->"cd755ba2-a4b7-4398-a55d-e7be98ae11ce"],
Cell[CellGroupData[{
Cell[105223, 2724, 752, 17, 934542, "Input",ExpressionUUID->"685c61ac-3250-4ca8-995d-6da29fb04ff5"],
Cell[105978, 2743, 3695, 98, 70, "Output",ExpressionUUID->"4cabfea9-36ca-482d-847f-23f185d0dfeb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[109722, 2847, 1200, 35, 48, "Subsection",ExpressionUUID->"2eabba08-102f-4d1a-b21d-9c941a8a93eb"],
Cell[110925, 2884, 1256, 32, 1596417, "Input",ExpressionUUID->"20151025-4977-434f-8b4a-a00557538b00"],
Cell[CellGroupData[{
Cell[112206, 2920, 386, 10, 934542, "Input",ExpressionUUID->"9139f73c-5610-47db-85de-721e5ddab65a"],
Cell[112595, 2932, 4556, 140, 70, "Output",ExpressionUUID->"f6029d7d-5307-4f1d-baff-0e5bcdc2c6b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117188, 3077, 209, 3, 934542, "Input",ExpressionUUID->"61f07079-ba38-4b3a-adf7-d1b63950c15a"],
Cell[117400, 3082, 502, 7, 70, "Output",ExpressionUUID->"f444ae08-da77-4910-b003-33ee5149ecc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117939, 3094, 386, 10, 934542, "Input",ExpressionUUID->"9c955f5a-b6f6-4ca8-9e99-763e30687ce8"],
Cell[118328, 3106, 4563, 140, 70, "Output",ExpressionUUID->"3d39268f-5bcc-47b8-8281-ca3e8b747d07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122928, 3251, 209, 3, 934542, "Input",ExpressionUUID->"7b1be6e0-0b88-4f01-915b-d23a8a4404b0"],
Cell[123140, 3256, 1104, 26, 70, "Output",ExpressionUUID->"75224c30-d7d0-4707-b0f8-3b67ed422d72"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[124293, 3288, 411, 12, 46, "Subsection",ExpressionUUID->"5a98fa28-1427-462f-ae09-f8bfc2a3686a"],
Cell[124707, 3302, 878, 19, 1596417, "Input",ExpressionUUID->"ba1680ee-57fd-4b56-af80-cc5d20099ad0"],
Cell[CellGroupData[{
Cell[125610, 3325, 307, 6, 934542, "Input",ExpressionUUID->"f7153694-c184-45ea-98af-0a3322d2ce92"],
Cell[125920, 3333, 4588, 141, 70, "Output",ExpressionUUID->"4341f3e2-2fd4-4bc5-b750-43ed1082754d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130545, 3479, 350, 6, 934542, "Input",ExpressionUUID->"5ad5e3ce-bf63-4e38-8f87-1c04b4fe5653"],
Cell[130898, 3487, 4565, 140, 70, "Output",ExpressionUUID->"2e1cb62e-818b-4534-b7dd-a1609b5b3018"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135500, 3632, 415, 9, 934542, "Input",ExpressionUUID->"249992e0-316c-4067-81b7-06db41259129"],
Cell[135918, 3643, 504, 7, 70, "Output",ExpressionUUID->"60967208-70a8-489f-bf4b-424e174cf82a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[136471, 3656, 1058, 28, 51, "Subsection",ExpressionUUID->"7bb6d126-367b-4162-ba40-d4f6cc2596d9"],
Cell[137532, 3686, 1604, 39, 60, "Input",ExpressionUUID->"20db1a02-9ae0-4616-9654-c56ee60b7896"],
Cell[139139, 3727, 978, 22, 35, "Input",ExpressionUUID->"af9c6d15-5468-44d3-aebe-378f92873b61"],
Cell[CellGroupData[{
Cell[140142, 3753, 313, 6, 35, "Input",ExpressionUUID->"69a22be2-8cb9-48f8-ad13-9db7ee995752"],
Cell[140458, 3761, 2636, 74, 70, "Output",ExpressionUUID->"62d8876e-3aa9-4edc-81d7-9d3ee92dd1fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143131, 3840, 503, 12, 35, "Input",ExpressionUUID->"32643cc6-c5b7-46a3-adba-6addc748f3e3"],
Cell[143637, 3854, 545, 7, 70, "Output",ExpressionUUID->"c23c2ef4-0087-44d7-926e-4638fbc2879c"]
}, Open  ]],
Cell[144197, 3864, 945, 23, 35, "Input",ExpressionUUID->"7f434676-4d60-4383-959e-ea8d8209cbe6"],
Cell[CellGroupData[{
Cell[145167, 3891, 239, 5, 35, "Input",ExpressionUUID->"ad3ba858-0460-427e-9a73-10bcc2c75979"],
Cell[145409, 3898, 2627, 75, 70, "Output",ExpressionUUID->"3d0edab4-6990-40d6-9444-1871d8ebf30c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148073, 3978, 311, 6, 35, "Input",ExpressionUUID->"3bffeaad-19df-4e49-93c8-2e2b88c3da6a"],
Cell[148387, 3986, 2629, 75, 70, "Output",ExpressionUUID->"3076530e-b685-4658-ae90-cc55ff19aec9"]
}, Open  ]],
Cell[151031, 4064, 1024, 23, 35, "Input",ExpressionUUID->"a829e44d-e633-44f9-92c1-c0cbd69b8118"],
Cell[CellGroupData[{
Cell[152080, 4091, 239, 5, 35, "Input",ExpressionUUID->"01b90384-fae2-4e2a-9e90-81f7539b875d"],
Cell[152322, 4098, 2631, 75, 70, "Output",ExpressionUUID->"642e6e37-de8f-4f50-b229-75cfd0c78add"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154990, 4178, 335, 7, 35, "Input",ExpressionUUID->"ca234c34-005d-4652-8ed4-543487bd1997"],
Cell[155328, 4187, 2637, 74, 70, "Output",ExpressionUUID->"06bc2f56-4977-425a-a79b-8f5648f332b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158002, 4266, 1187, 32, 35, "Input",ExpressionUUID->"5ab7ba20-f5ef-4dd3-88ec-e6ebb7a796da"],
Cell[159192, 4300, 203, 3, 70, "Output",ExpressionUUID->"a02209ba-74ab-4ec8-a199-11d5963ae445"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[159444, 4309, 983, 24, 48, "Subsection",ExpressionUUID->"bb19045b-74ec-4b3f-8efb-4dcdf1cdddaa"],
Cell[CellGroupData[{
Cell[160452, 4337, 565, 13, 38929, "Input",ExpressionUUID->"d7cc60fc-1c89-46e8-83bc-162b97bc0e68"],
Cell[161020, 4352, 807, 18, 70, "Output",ExpressionUUID->"89085f69-6652-485a-829d-88b1b7a25aed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161864, 4375, 565, 13, 38929, "Input",ExpressionUUID->"e2ba90f7-933e-4baf-86ff-94003cb86798"],
Cell[162432, 4390, 821, 18, 70, "Output",ExpressionUUID->"456189b7-277a-41ec-ac58-14ad77d1cbb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163290, 4413, 488, 11, 38929, "Input",ExpressionUUID->"5c23ec39-3152-4134-a548-13a6cee022f5"],
Cell[163781, 4426, 1703, 48, 70, "Output",ExpressionUUID->"39ddd836-87c2-4e48-b352-f8d9a6e80893"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165521, 4479, 489, 11, 38929, "Input",ExpressionUUID->"695f96f3-f74a-45cc-9040-a5fd453a90ac"],
Cell[166013, 4492, 1701, 48, 70, "Output",ExpressionUUID->"cfd3466e-3241-4d9c-ab6c-d39d5c5185ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167751, 4545, 600, 14, 38929, "Input",ExpressionUUID->"0a16941e-45c2-4bd5-b71d-b2d0c4e9a09d"],
Cell[168354, 4561, 1736, 49, 70, "Output",ExpressionUUID->"0af9b865-c394-48cf-b564-476aa74b1fcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170127, 4615, 594, 12, 38929, "Input",ExpressionUUID->"55c20961-33ca-4bd1-997b-b3abc6b7ee48"],
Cell[170724, 4629, 3712, 114, 70, "Output",ExpressionUUID->"7f0372c5-12ac-47da-992b-f8b68c856587"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174473, 4748, 526, 11, 38929, "Input",ExpressionUUID->"7e0f90e0-ec7c-4752-85c0-9b4c0338f734"],
Cell[175002, 4761, 3735, 115, 70, "Output",ExpressionUUID->"4c47de1a-39d4-4ba6-b200-98acfddecc93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178774, 4881, 540, 10, 38929, "Input",ExpressionUUID->"b19c0e75-94eb-45b1-97a0-580de32498a9"],
Cell[179317, 4893, 1722, 48, 70, "Output",ExpressionUUID->"8ea2713a-43cb-4940-a675-3a597b6fe6a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181076, 4946, 462, 10, 38929, "Input",ExpressionUUID->"9b558225-fc97-4990-b667-f7762e9a8e51"],
Cell[181541, 4958, 787, 17, 70, "Output",ExpressionUUID->"bda1ec5e-033e-4310-b665-1d2c1c19fd67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182365, 4980, 462, 10, 38929, "Input",ExpressionUUID->"d417cf3c-bdfa-4f97-8c26-5bfaa67ae295"],
Cell[182830, 4992, 814, 18, 70, "Output",ExpressionUUID->"a914cab9-748d-4c23-9d1a-5637b904b2cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183681, 5015, 512, 10, 38929, "Input",ExpressionUUID->"389d6dc8-1a95-40e5-b752-ceed2819e81c"],
Cell[184196, 5027, 4563, 140, 70, "Output",ExpressionUUID->"d7567fc2-f123-456a-83f7-08c9fe30e731"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188820, 5174, 1145, 16, 83, "Section",ExpressionUUID->"a0702185-aeb5-46ac-88d9-97cfd42756b0"],
Cell[CellGroupData[{
Cell[189990, 5194, 37269, 617, 126, "Subsection",ExpressionUUID->"1817741d-903d-47eb-8ece-1a088ad27611"],
Cell[227262, 5813, 4212, 80, 87, "Input",ExpressionUUID->"3594755f-f61d-4860-a2fb-ccd95e1f9169"],
Cell[231477, 5895, 991, 27, 35, "Input",ExpressionUUID->"ff90f72d-5d6a-4001-aa60-9a2be038fdaa"],
Cell[CellGroupData[{
Cell[232493, 5926, 307, 6, 35, "Input",ExpressionUUID->"a3182889-eda8-4e8a-b410-3962b1b57bb8"],
Cell[232803, 5934, 1042, 23, 40, "Output",ExpressionUUID->"f6645774-9878-422b-84e4-139de89b76af"]
}, Open  ]],
Cell[233860, 5960, 1693, 39, 35, "Input",ExpressionUUID->"bbc230e0-b673-4cb2-917a-8321eed9b0ec"],
Cell[CellGroupData[{
Cell[235578, 6003, 1793, 44, 35, "Input",ExpressionUUID->"5be685a7-62bf-4192-9cbe-94edd282dea8"],
Cell[237374, 6049, 19304, 573, 641, "Output",ExpressionUUID->"e9a64a62-a7b2-45b0-8fbe-a09473c6957e"]
}, Open  ]],
Cell[256693, 6625, 259, 4, 43, "Text",ExpressionUUID->"4465f086-7e0b-4223-9d3c-45b0290483a5"],
Cell[CellGroupData[{
Cell[256977, 6633, 1070, 27, 35, "Input",ExpressionUUID->"87641264-a408-4b90-b4a5-d344d2964785"],
Cell[258050, 6662, 1945, 49, 65, "Output",ExpressionUUID->"887affa1-3f4d-4d01-840d-9c5223dff5ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260032, 6716, 1015, 27, 35, "Input",ExpressionUUID->"ba740a32-435a-491e-a057-0ab5388e5510"],
Cell[261050, 6745, 1942, 49, 65, "Output",ExpressionUUID->"c6c9341d-2927-4da8-8b6f-775b857aa868"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[263041, 6800, 51257, 846, 79, "Subsection",ExpressionUUID->"80c25574-c28f-433f-b5f2-ed0352df0f5e"],
Cell[314301, 7648, 4768, 86, 25818, "Input",ExpressionUUID->"252fa00e-3548-40ec-b81e-6327a71e0848"],
Cell[319072, 7736, 1709, 41, 13109, "Input",ExpressionUUID->"451ebd9f-69f5-4f3a-94ce-2f941deee97a"],
Cell[CellGroupData[{
Cell[320806, 7781, 2087, 50, 18367, "Input",ExpressionUUID->"6729dff4-8c61-413d-be27-4b66a886ca33"],
Cell[322896, 7833, 13978, 401, 70, "Output",ExpressionUUID->"1b8e2ed2-6a8c-4055-ad84-d9fa8c280ed8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[336923, 8240, 177, 3, 46, "Subsection",ExpressionUUID->"d8420746-1d2b-4a6e-a5cd-c35854950310"],
Cell[337103, 8245, 902, 20, 13109, "Input",ExpressionUUID->"6102afe2-4a3c-46ab-bb7e-aba4b9b0d66e"],
Cell[338008, 8267, 702, 16, 7689, "Input",ExpressionUUID->"00d27ef3-f697-4141-a854-cb469a5df2d5"],
Cell[338713, 8285, 3368, 85, 34065, "Input",ExpressionUUID->"5330f017-66fa-44b5-ac61-77cf73a1b0b9"],
Cell[342084, 8372, 484, 11, 7689, "Input",ExpressionUUID->"b1602277-9dba-4572-92f4-ad3bd60b11f7"],
Cell[342571, 8385, 641, 17, 7689, "Input",ExpressionUUID->"b46f1bd2-7107-43aa-8ce3-75564bbc196c"],
Cell[343215, 8404, 615, 15, 7689, "Input",ExpressionUUID->"0ca8b793-2ae8-4b16-b431-64fa309077ee"],
Cell[343833, 8421, 594, 16, 13109, "Input",ExpressionUUID->"cdc6b9a6-193c-4a24-9ddc-92d6d26fe4aa"],
Cell[344430, 8439, 604, 15, 7689, "Input",ExpressionUUID->"5f37f0cc-af02-4538-9fdb-c1924caaaace"],
Cell[345037, 8456, 1256, 27, 7689, "Input",ExpressionUUID->"1919641f-cd20-4d44-80ff-57490c7afb9a"],
Cell[346296, 8485, 586, 15, 7689, "Input",ExpressionUUID->"98af9837-98a6-46f0-b742-d2997bec9a6c"],
Cell[CellGroupData[{
Cell[346907, 8504, 1169, 25, 7689, "Input",ExpressionUUID->"7fad9241-a970-4a27-a4d5-593c425d9233"],
Cell[348079, 8531, 29147, 792, 70, "Output",ExpressionUUID->"b9269617-486e-48e2-9561-c8b838951972"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377287, 9330, 429, 7, 83, "Section",ExpressionUUID->"231a1b16-656b-454b-bdf7-3325c412556f"],
Cell[CellGroupData[{
Cell[377741, 9341, 2563, 71, 104, "Subsection",ExpressionUUID->"ee839256-59c0-4af4-808f-2eeb0ddadb4a"],
Cell[380307, 9414, 835, 23, 35, "Input",ExpressionUUID->"4aaacd2a-c87d-4178-8429-0d34896bd975"],
Cell[CellGroupData[{
Cell[381167, 9441, 2441, 56, 84, "Input",ExpressionUUID->"d9ca9bdc-8da2-4819-83f8-678eab661f08"],
Cell[383611, 9499, 493, 8, 73, "Output",ExpressionUUID->"58575858-6b0a-40e5-9a76-f620d0f6dd90"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[384153, 9513, 415942, 6852, 469, "Subsection",ExpressionUUID->"f8fc6527-d844-4faa-aa47-5379d276b51b"],
Cell[800098, 16367, 4039, 86, 174, "Input",ExpressionUUID->"0eb2a91e-d390-4ca3-9d6d-e5f43f0f516b"],
Cell[804140, 16455, 683, 17, 35, "Input",ExpressionUUID->"f053bcb8-3de3-4f70-8d9b-eb18b4c5e875"],
Cell[804826, 16474, 2096, 50, 87, "Input",ExpressionUUID->"39236194-cfeb-4850-b50e-c1b41cb5d7a2"],
Cell[806925, 16526, 2276, 58, 94, "Input",ExpressionUUID->"88d80328-a658-4b74-8d6f-2e58ff9b6b9b"],
Cell[809204, 16586, 1298, 37, 35, "Input",ExpressionUUID->"ce117ec6-fb95-42ed-935a-5c7abef49a6c"],
Cell[810505, 16625, 806, 22, 35, "Input",ExpressionUUID->"a574800f-6268-417e-82f7-b8ca0c74e050"],
Cell[CellGroupData[{
Cell[811336, 16651, 2946, 76, 118, "Input",ExpressionUUID->"c7ec4e2a-c711-43d2-9434-06d30523d0b0"],
Cell[814285, 16729, 451, 7, 40, "Output",ExpressionUUID->"bbfff744-cab8-45f5-a7d0-6952d51e16ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[814773, 16741, 59362, 980, 364, "Subsubsection",ExpressionUUID->"d4b5efcb-9593-4598-b156-d4aea59065e7"],
Cell[874138, 17723, 9401, 254, 318, "Input",ExpressionUUID->"26c44777-edaa-4a4c-a9fc-1d3375c02fb1"],
Cell[CellGroupData[{
Cell[883564, 17981, 1755, 49, 68, "Input",ExpressionUUID->"9c4fa706-1a1e-4a77-a4c3-6f11bafa40cd"],
Cell[885322, 18032, 278, 5, 40, "Output",ExpressionUUID->"0b032d81-b5fc-480d-9e4b-2b8ac03989c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885637, 18042, 2778, 71, 118, "Input",ExpressionUUID->"6f3d8145-f8e6-4e40-ab3e-581148df93ad"],
Cell[888418, 18115, 472, 7, 40, "Output",ExpressionUUID->"62e49e66-5942-44ac-b3e2-92f44fc628dc"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[888963, 18130, 164, 3, 64, "Section",ExpressionUUID->"9255e931-ff01-49f3-a360-483fd490757d"],
Cell[CellGroupData[{
Cell[889152, 18137, 309, 6, 35, "Input",ExpressionUUID->"05b0a3f3-e5e9-4a8e-aaa9-ec16a0ff20b1"],
Cell[889464, 18145, 395, 6, 40, "Output",ExpressionUUID->"08c1165b-772a-4a0a-9c7b-5b50c42bcba7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[889908, 18157, 509, 9, 83, "Section",ExpressionUUID->"506208ec-72d0-4aa8-9d9f-54191bcc9604"],
Cell[CellGroupData[{
Cell[890442, 18170, 236629, 3891, 119, "Subsection",ExpressionUUID->"d43faaaf-0673-4970-8df8-4e4a3824b78a"],
Cell[1127074, 22063, 1444, 38, 52, "Input",ExpressionUUID->"983cafcd-c51f-4c38-b45f-38ca504d2886"],
Cell[1128521, 22103, 1211, 33, 35, "Input",ExpressionUUID->"77406683-38ba-46e4-aa8c-df27a8e3453d"],
Cell[CellGroupData[{
Cell[1129757, 22140, 2268, 54, 84, "Input",ExpressionUUID->"125b80da-d41e-4209-9761-7fe0d1fabb16"],
Cell[1132028, 22196, 523, 8, 40, "Output",ExpressionUUID->"7b89f10b-8904-49ac-8618-883cc7e81d35"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132600, 22210, 113628, 1884, 415, "Subsection",ExpressionUUID->"68c7e39c-fd44-4942-9218-54c779e0448b"],
Cell[1246231, 24096, 4765, 106, 136, "Input",ExpressionUUID->"a0c1de7d-ed47-46b7-ad23-295e10996f60"],
Cell[1250999, 24204, 1522, 36, 35, "Input",ExpressionUUID->"40bcebc9-83f7-487b-9a0f-2943e2cd1757"],
Cell[1252524, 24242, 4012, 106, 203, "Input",ExpressionUUID->"04bc43ed-fab4-4c04-bfb3-de2867d906f0"],
Cell[1256539, 24350, 775, 21, 35, "Input",ExpressionUUID->"cdfc0be9-6d12-4ce2-bfb9-3e1532a930b6"],
Cell[1257317, 24373, 2361, 64, 195, "Input",ExpressionUUID->"8cf41e49-185f-4da3-a6be-1718db9a9c69"],
Cell[1259681, 24439, 621, 16, 35, "Input",ExpressionUUID->"092afb61-fcd6-4156-9fca-a5ae68f1235e"],
Cell[CellGroupData[{
Cell[1260327, 24459, 5360, 126, 142, "Input",ExpressionUUID->"be797b87-01de-4d2c-adc8-2ca3bb2342fe"],
Cell[1265690, 24587, 309, 6, 40, "Output",ExpressionUUID->"8ae8034e-3743-4549-bad6-15478287fce4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1266060, 24600, 164, 3, 83, "Section",ExpressionUUID->"142efc17-58e8-4296-89b0-0375f5d0350b"],
Cell[CellGroupData[{
Cell[1266249, 24607, 311, 6, 35, "Input",ExpressionUUID->"836fdadd-a1b7-4873-b18d-15df5d0d7dcb"],
Cell[1266563, 24615, 350, 6, 40, "Output",ExpressionUUID->"167d5745-867d-4676-9695-62c68efabfd8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1266962, 24627, 6840, 156, 202, "Section",ExpressionUUID->"d88816e8-8bc1-4d08-9847-0322dc144d03"],
Cell[CellGroupData[{
Cell[1273827, 24787, 2220, 57, 103, "Subsection",ExpressionUUID->"001dfc53-eb6d-49b5-86ca-955fba8692e3"],
Cell[1276050, 24846, 5315, 122, 2990, "Input",ExpressionUUID->"b92eb5d4-5793-49fe-a374-47288407789c"],
Cell[CellGroupData[{
Cell[1281390, 24972, 1004, 22, 675, "Input",ExpressionUUID->"a34cfb6f-1d44-476c-a8ce-d33dd877acea"],
Cell[1282397, 24996, 198139, 5700, 70, "Output",ExpressionUUID->"bc4ab38b-6025-4de1-9c13-56a5a335b039"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1480585, 30702, 1892, 50, 81, "Subsection",ExpressionUUID->"1f1e720d-dd40-42f0-9df1-c1f44e0f517a"],
Cell[CellGroupData[{
Cell[1482502, 30756, 3040, 67, 2531, "Input",ExpressionUUID->"40872f3c-9d06-4e35-ada8-5f20678659c4"],
Cell[1485545, 30825, 198140, 5700, 70, "Output",ExpressionUUID->"cf5fa8e1-c960-40bc-abb0-68120b0275d0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1683734, 36531, 408, 6, 70, "Subsection",ExpressionUUID->"6a8d6f97-89cf-4b4e-aa5d-c37e74fb2589"],
Cell[CellGroupData[{
Cell[1684167, 36541, 824, 14, 54, "Input",ExpressionUUID->"a0dddbc3-c162-43c6-987f-80846e362867"],
Cell[1684994, 36557, 16628, 415, 70, "Output",ExpressionUUID->"38e04989-06e5-40fe-8016-263e2062fc0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1701659, 36977, 4116, 98, 150, "Input",ExpressionUUID->"325c7909-8553-4c29-a4f6-024b14fb77f7"],
Cell[1705778, 37077, 339, 7, 70, "Output",ExpressionUUID->"90106db6-4e36-464b-aa56-21fd44acd947"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1706178, 37091, 165, 3, 64, "Section",ExpressionUUID->"26d36566-7252-4511-b893-30248230fd83"],
Cell[CellGroupData[{
Cell[1706368, 37098, 338, 7, 35, "Input",ExpressionUUID->"1518ae9c-6850-45fe-9671-1b3cf13b0359"],
Cell[1706709, 37107, 280, 5, 73, "Output",ExpressionUUID->"5c5f02a1-a20b-42cc-9b06-be6fbb422495"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

